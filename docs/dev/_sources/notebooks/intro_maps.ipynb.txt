{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "\n",
    "<div class=\"alert alert-info\">\n",
    "\n",
    "**This is a fixed-text formatted version of a Jupyter notebook**\n",
    "\n",
    "- Try online [![Binder](https://mybinder.org/badge.svg)](https://mybinder.org/v2/gh/gammapy/gammapy/master?urlpath=lab/tree/intro_maps.ipynb)\n",
    "- You can contribute with your own notebooks in this\n",
    "[GitHub repository](https://github.com/gammapy/gammapy/tree/master/tutorials).\n",
    "- **Source files:**\n",
    "[intro_maps.ipynb](../_static/notebooks/intro_maps.ipynb) |\n",
    "[intro_maps.py](../_static/notebooks/intro_maps.py)\n",
    "</div>\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Gammapy Maps\n",
    "\n",
    "![Gammapy Maps Illustration](images/gammapy_maps.png)\n",
    "\n",
    "## Introduction\n",
    "The [gammapy.maps](..\/maps/index.rst) submodule contains classes for representing **sky images** with an **arbitrary number of non-spatial dimensions** such as energy, time, event class or any possible user-defined dimension (illustrated in the image above). The main `Map` data structure features a **uniform API** for [WCS](https://fits.gsfc.nasa.gov/fits_wcs.html) as well as [HEALPix](https://en.wikipedia.org/wiki/HEALPix) based images. The API also generalizes simple image based operations such as smoothing, interpolation and reprojection to the arbitrary extra dimensions and makes working with (2 + N)-dimensional hypercubes **as easy as working with a simple 2D image**. Further information is also provided on the [gammpy.maps](..\/maps/index.rst) docs page.\n",
    "\n",
    "\n",
    "In the following introduction we will **learn all the basics** of working with WCS based maps. HEALPix based maps will be covered in a future tutorial. We will cover the following topics in order:\n",
    "\n",
    "1. [Creating WCS Maps](#1.-Creating-WCS-Maps)\n",
    "1. [Accessing and Modifying Data](#2.-Accessing-and-Modifying-Data)\n",
    "1. [Reading and Writing](#3.-Reading-and-Writing)\n",
    "1. [Visualizing and Plotting](#4.-Visualizing-and-Plotting)\n",
    "1. [Reprojecting, Interpolating and Miscellaneous](#5.-Reprojecting,-Interpolating-and-Miscellaneous)\n",
    "\n",
    "\n",
    "Make sure you have worked through the [First Steps with Gammapy](first_steps.ipynb), because a solid knowledge about working with `SkyCoords` and `Quantity` objects as well as [Numpy](http://www.numpy.org/) is required for this tutorial.\n",
    "\n",
    "**Note:** This notebook is rather lengthy, but getting to know the `Map` data structure in detail is **essential for working with Gammapy** and will allow you to fulfill **complex analysis tasks with very few and simple code** in future!"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "##  0. Setup"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [],
   "source": [
    "%matplotlib inline\n",
    "import numpy as np\n",
    "import matplotlib.pyplot as plt\n",
    "import os"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {},
   "outputs": [],
   "source": [
    "from astropy import units as u\n",
    "from astropy.io import fits\n",
    "from astropy.table import Table\n",
    "from astropy.coordinates import SkyCoord\n",
    "from gammapy.maps import Map, MapAxis, WcsGeom"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## 1. Creating WCS Maps\n",
    "\n",
    "### 1.1 Using Factory Methods\n",
    "\n",
    "Maps are most easily created using the `Map.create()` factory method:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {},
   "outputs": [],
   "source": [
    "m_allsky = Map.create()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Calling `Map.create()` without any further arguments creates by default an allsky WCS map using a CAR projection, ICRS coordinates and a pixel size of 1 deg. This can be easily checked by printing the `.geom` attribute of the map:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "WcsGeom\n",
      "\n",
      "\taxes       : lon, lat\n",
      "\tshape      : (3600, 1800)\n",
      "\tndim       : 2\n",
      "\tcoordsys   : CEL\n",
      "\tprojection : CAR\n",
      "\tcenter     : 0.0 deg, 0.0 deg\n",
      "\twidth      : 360.0 deg x 180.0 deg deg\n",
      "\n"
     ]
    }
   ],
   "source": [
    "print(m_allsky.geom)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "The `.geom` attribute is a `MapGeom` object, that defines the basic geometry of the map, such as size of the pixels, width and height of the image, coordinate system etc., but we will learn more about this object later.\n",
    "\n",
    "Besides the `.geom` attribute the map has also a `.data` attribute, which is just a plain `numpy.ndarray` and stores the data associated with this map:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([[0., 0., 0., ..., 0., 0., 0.],\n",
       "       [0., 0., 0., ..., 0., 0., 0.],\n",
       "       [0., 0., 0., ..., 0., 0., 0.],\n",
       "       ...,\n",
       "       [0., 0., 0., ..., 0., 0., 0.],\n",
       "       [0., 0., 0., ..., 0., 0., 0.],\n",
       "       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32)"
      ]
     },
     "execution_count": 5,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "m_allsky.data"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "By default maps are filled with zeros.\n",
    "\n",
    "Here is a second example that creates a WCS map centered on the Galactic center and now uses Galactic coordinates:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "WcsGeom\n",
      "\n",
      "\taxes       : lon, lat\n",
      "\tshape      : (500, 250)\n",
      "\tndim       : 2\n",
      "\tcoordsys   : GAL\n",
      "\tprojection : TAN\n",
      "\tcenter     : 0.0 deg, 0.0 deg\n",
      "\twidth      : 10.0 deg x 5.0 deg deg\n",
      "\n"
     ]
    }
   ],
   "source": [
    "skydir = SkyCoord(0, 0, frame=\"galactic\", unit=\"deg\")\n",
    "m_gc = Map.create(\n",
    "    binsz=0.02, width=(10, 5), skydir=skydir, coordsys=\"GAL\", proj=\"TAN\"\n",
    ")\n",
    "print(m_gc.geom)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "In addition we have defined a TAN projection, a pixel size of `0.02` deg and a width of the map of `10 deg x 5 deg`. The `width` argument also takes scalar value instead of a tuple, which is interpreted as both the width and height of the map, so that a quadratic map is created."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### 1.2 Creating from a Map Geometry\n",
    "\n",
    "As we have seen in the first examples, the `Map` object couples the data (stored as a `numpy.ndarray`) with a `MapGeom` object. The `MapGeom` object can be seen as a generalization of an `astropy.wcs.WCS` object, providing the information on how the data maps to physical coordinate systems. In some cases e.g. when creating many maps with the same WCS geometry it can be advantegeous to first create the map geometry independent of the map object itsself: "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {},
   "outputs": [],
   "source": [
    "wcs_geom = WcsGeom.create(\n",
    "    binsz=0.02, width=(10, 5), skydir=(0, 0), coordsys=\"GAL\"\n",
    ")"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "And then create the map objects from the `wcs_geom` geometry specification:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {},
   "outputs": [],
   "source": [
    "maps = {}\n",
    "\n",
    "for name in [\"counts\", \"background\"]:\n",
    "    maps[name] = Map.from_geom(wcs_geom)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "The `MapGeom` object also has a few helpful methods. E.g. we can check whether a given position on the sky is contained in the map geometry:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([ True, False])"
      ]
     },
     "execution_count": 9,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# define the position of the Galactic center and anti-center\n",
    "positions = SkyCoord([0, 180], [0, 0], frame=\"galactic\", unit=\"deg\")\n",
    "wcs_geom.contains(positions)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Or get the image center of the map:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<SkyCoord (Galactic): (l, b) in deg\n",
       "    (0., 0.)>"
      ]
     },
     "execution_count": 10,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "wcs_geom.center_skydir"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Or we can also retrieve the solid angle per pixel of the map:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/latex": [
       "$$[[1.2173192 \\times 10^{-7},~1.2173192 \\times 10^{-7},~1.2173192 \\times 10^{-7},~\\dots,~1.2173192 \\times 10^{-7},~1.2173192 \\times 10^{-7},~1.2173192 \\times 10^{-7}],~\n",
       " [1.2173376 \\times 10^{-7},~1.2173376 \\times 10^{-7},~1.2173376 \\times 10^{-7},~\\dots,~1.2173376 \\times 10^{-7},~1.2173376 \\times 10^{-7},~1.2173376 \\times 10^{-7}],~\n",
       " [1.2173559 \\times 10^{-7},~1.2173559 \\times 10^{-7},~1.2173559 \\times 10^{-7},~\\dots,~1.2173559 \\times 10^{-7},~1.2173559 \\times 10^{-7},~1.2173559 \\times 10^{-7}],~\n",
       " \\dots,~\n",
       " [1.2173559 \\times 10^{-7},~1.2173559 \\times 10^{-7},~1.2173559 \\times 10^{-7},~\\dots,~1.2173559 \\times 10^{-7},~1.2173559 \\times 10^{-7},~1.2173559 \\times 10^{-7}],~\n",
       " [1.2173376 \\times 10^{-7},~1.2173376 \\times 10^{-7},~1.2173376 \\times 10^{-7},~\\dots,~1.2173376 \\times 10^{-7},~1.2173376 \\times 10^{-7},~1.2173376 \\times 10^{-7}],~\n",
       " [1.2173192 \\times 10^{-7},~1.2173192 \\times 10^{-7},~1.2173192 \\times 10^{-7},~\\dots,~1.2173192 \\times 10^{-7},~1.2173192 \\times 10^{-7},~1.2173192 \\times 10^{-7}]] \\; \\mathrm{sr}$$"
      ],
      "text/plain": [
       "<Quantity [[1.21731922e-07, 1.21731922e-07, 1.21731922e-07, ...,\n",
       "            1.21731922e-07, 1.21731922e-07, 1.21731922e-07],\n",
       "           [1.21733763e-07, 1.21733763e-07, 1.21733763e-07, ...,\n",
       "            1.21733763e-07, 1.21733763e-07, 1.21733763e-07],\n",
       "           [1.21735588e-07, 1.21735588e-07, 1.21735588e-07, ...,\n",
       "            1.21735588e-07, 1.21735588e-07, 1.21735588e-07],\n",
       "           ...,\n",
       "           [1.21735588e-07, 1.21735588e-07, 1.21735588e-07, ...,\n",
       "            1.21735588e-07, 1.21735588e-07, 1.21735588e-07],\n",
       "           [1.21733763e-07, 1.21733763e-07, 1.21733763e-07, ...,\n",
       "            1.21733763e-07, 1.21733763e-07, 1.21733763e-07],\n",
       "           [1.21731922e-07, 1.21731922e-07, 1.21731922e-07, ...,\n",
       "            1.21731922e-07, 1.21731922e-07, 1.21731922e-07]] sr>"
      ]
     },
     "execution_count": 11,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "wcs_geom.solid_angle()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### 1.3 Adding Non-Spatial Axes\n",
    "\n",
    "In many analysis scenarios we would like to add extra dimension to the maps to study e.g. energy or time dependency of the data. Those non-spatial dimensions are handled with the `MapAxis` object. Let us first define an energy axis, with 4 bins:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "MapAxis\n",
      "\n",
      "\tname       : energy    \n",
      "\tunit       : 'TeV'     \n",
      "\tnbins      : 4         \n",
      "\tnode type  : edges     \n",
      "\tedges min  : 1.0e+00 TeV\n",
      "\tedges max  : 1.0e+02 TeV\n",
      "\tinterp     : log       \n",
      "\n"
     ]
    }
   ],
   "source": [
    "energy_axis = MapAxis.from_bounds(\n",
    "    1, 100, nbin=4, unit=\"TeV\", name=\"energy\", interp=\"log\"\n",
    ")\n",
    "print(energy_axis)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Where `interp='log'` specifies that a logarithmic spacing is used between the bins, equivalent to `np.logspace(0, 2, 4)`. This `MapAxis` object we can now pass to `Map.create()` using the `axes=` argument:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "WcsGeom\n",
      "\n",
      "\taxes       : lon, lat, energy\n",
      "\tshape      : (500, 250, 4)\n",
      "\tndim       : 3\n",
      "\tcoordsys   : GAL\n",
      "\tprojection : CAR\n",
      "\tcenter     : 0.0 deg, 0.0 deg\n",
      "\twidth      : 10.0 deg x 5.0 deg deg\n",
      "\n"
     ]
    }
   ],
   "source": [
    "m_cube = Map.create(\n",
    "    binsz=0.02, width=(10, 5), coordsys=\"GAL\", axes=[energy_axis]\n",
    ")\n",
    "print(m_cube.geom)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Now we see that besides `lon` and `lat` the map has an additional axes named `energy` with 4 bins. The total dimension of the map is now `ndim=3`.\n",
    "\n",
    "We can also add further axes by passing a list of `MapAxis` objects. To demonstrate this we create a time axis with\n",
    "linearly spaced bins and pass both axes to `Map.create()`:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "WcsGeom\n",
      "\n",
      "\taxes       : lon, lat, energy, time\n",
      "\tshape      : (500, 250, 4, 24)\n",
      "\tndim       : 4\n",
      "\tcoordsys   : GAL\n",
      "\tprojection : CAR\n",
      "\tcenter     : 0.0 deg, 0.0 deg\n",
      "\twidth      : 10.0 deg x 5.0 deg deg\n",
      "\n"
     ]
    }
   ],
   "source": [
    "time_axis = MapAxis.from_bounds(\n",
    "    0, 24, nbin=24, unit=\"hour\", name=\"time\", interp=\"lin\"\n",
    ")\n",
    "\n",
    "m_4d = Map.create(\n",
    "    binsz=0.02, width=(10, 5), coordsys=\"GAL\", axes=[energy_axis, time_axis]\n",
    ")\n",
    "print(m_4d.geom)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "The `MapAxis` object internally stores the coordinates or \"position values\" associated with every map axis bin or \"node\". We distinguish between two node types: `edges` and `center`. The node type `edges`(which is also the default) specifies that the data associated with this axis is integrated between the edges of the bin (e.g. counts data). The node type `center` specifies that the data is given at the center of the bin (e.g. exposure or differential fluxes).\n",
    "\n",
    "The edges of the bins can be checked with `.edges` attribute:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([  1.        ,   3.16227766,  10.        ,  31.6227766 ,\n",
       "       100.        ])"
      ]
     },
     "execution_count": 15,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "energy_axis.edges"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "The numbers are given in the units we specified above, which can be checked again with:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/latex": [
       "$$\\mathrm{TeV}$$"
      ],
      "text/plain": [
       "Unit(\"TeV\")"
      ]
     },
     "execution_count": 16,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "energy_axis.unit"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "The centers of the axis bins can be checked with the `.center` attribute:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([ 1.77827941,  5.62341325, 17.7827941 , 56.23413252])"
      ]
     },
     "execution_count": 17,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "energy_axis.center"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "##  2. Accessing and Modifying Data\n",
    "\n",
    "### 2.1 Accessing Map Data Values\n",
    "\n",
    "All map objects have a set of accessor methods, which can be used to access or update the contents of the map irrespective of its underlying representation. Those accessor methods accept as their first argument a coordinate `tuple` containing scalars, `list`, or `numpy.ndarray` with one tuple element for each dimension. Some methods additionally accept a `dict` or `MapCoord` argument, of which both allow to assign coordinates by axis name.\n",
    "\n",
    "Let us first begin with the `.get_by_idx()` method, that accepts a tuple of indices. The order of the indices corresponds to the axis order of the map: "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([0.], dtype=float32)"
      ]
     },
     "execution_count": 18,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "m_gc.get_by_idx((50, 30))"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "**Important:** Gammapy uses a reversed index order in the map API with the longitude axes first. To achieve the same by directly indexing into the numpy array we have to call:  "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([0.], dtype=float32)"
      ]
     },
     "execution_count": 19,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "m_gc.data[([30], [50])]"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "To check the order of the axes you can always print the `.geom` attribute:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "WcsGeom\n",
      "\n",
      "\taxes       : lon, lat\n",
      "\tshape      : (500, 250)\n",
      "\tndim       : 2\n",
      "\tcoordsys   : GAL\n",
      "\tprojection : TAN\n",
      "\tcenter     : 0.0 deg, 0.0 deg\n",
      "\twidth      : 10.0 deg x 5.0 deg deg\n",
      "\n"
     ]
    }
   ],
   "source": [
    "print(m_gc.geom)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "To access values directly by sky coordinates we can use the `.get_by_coord()` method. This time we pass in a `dict`, specifying the axes names corresponding to the given coordinates:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([ 0., nan])"
      ]
     },
     "execution_count": 21,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "m_gc.get_by_coord({\"lon\": [0, 180], \"lat\": [0, 0]})"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "The units of the coordinates are assumed to be in degrees in the coordinate system used by the map. If the coordinates do not correspond to the exact pixel center, the value of the nearest pixel center will be returned. For positions outside the map geometry `np.nan` is returned.\n",
    "\n",
    "The coordinate or idx arrays follow normal [Numpy broadcasting rules](https://jakevdp.github.io/PythonDataScienceHandbook/02.05-computation-on-arrays-broadcasting.html). So the following works as expected:\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], dtype=float32)"
      ]
     },
     "execution_count": 22,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "lons = np.linspace(-4, 4, 10)\n",
    "m_gc.get_by_coord({\"lon\": lons, \"lat\": 0})"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Or as an even more advanced example, we can provide `lats` as column vector and broadcasting to a 2D result array will be applied:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([[nan, nan, nan, nan, nan, nan, nan, nan],\n",
       "       [nan, nan, nan, nan, nan, nan, nan, nan],\n",
       "       [ 0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.],\n",
       "       [ 0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.],\n",
       "       [ 0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.],\n",
       "       [ 0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.],\n",
       "       [nan, nan, nan, nan, nan, nan, nan, nan],\n",
       "       [nan, nan, nan, nan, nan, nan, nan, nan]])"
      ]
     },
     "execution_count": 23,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "lons = np.linspace(-4, 4, 8)\n",
    "lats = np.linspace(-4, 4, 8).reshape(-1, 1)\n",
    "m_gc.get_by_coord({\"lon\": lons, \"lat\": lats})"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### 2.2 Modifying Map Data Values\n",
    "\n",
    "To modify and set map data values the `Map` object features as well a `.set_by_idx()` method: \n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "metadata": {},
   "outputs": [],
   "source": [
    "m_cube.set_by_idx(idx=(10, 20, 3), vals=42)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([42.], dtype=float32)"
      ]
     },
     "execution_count": 25,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "m_cube.get_by_idx((10, 20, 3))"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Of course there is also a `.set_by_coord()` method, which allows to set map data values in physical coordinates. "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 26,
   "metadata": {},
   "outputs": [],
   "source": [
    "m_cube.set_by_coord({\"lon\": 0, \"lat\": 0, \"energy\": 2 * u.TeV}, vals=42)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Again the `lon` and `lat` values are assumed to be given in degrees in the coordinate system used by the map. For the energy axis, the unit is the one specified on the axis (use `m_cube.geom.axes[0].unit` to check if needed...)\n",
    "\n",
    "All `.xxx_by_coord()` methods accept `SkyCoord` objects as well. In this case we have to use the `skycoord` keyword instead of `lon` and `lat`:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 27,
   "metadata": {},
   "outputs": [],
   "source": [
    "skycoords = SkyCoord([1.2, 3.4], [-0.5, 1.1], frame=\"galactic\", unit=\"deg\")\n",
    "m_cube.set_by_coord({\"skycoord\": skycoords, \"energy\": 2 * u.TeV}, vals=42)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### 2.3 Indexing and Slicing Sub-Maps\n",
    "\n",
    "When you have worked with Numpy arrays in the past you are probably familiar with the concept of indexing and slicing\n",
    "into data arrays. To support slicing of non-spatial axes of `Map` objects, the `Map` object has a `.slice_by_idx()` method, which allows to extract sub-maps from a larger map.\n",
    "\n",
    "The following example demonstrates how to get the map at the energy bin number 3:  "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 28,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "WcsNDMap\n",
      "\n",
      "\tgeom  : WcsGeom \n",
      " \taxes  : lon, lat\n",
      "\tshape : (500, 250)\n",
      "\tndim  : 2\n",
      "\tunit  : '' \n",
      "\tdtype : float32 \n",
      "\n"
     ]
    }
   ],
   "source": [
    "m_sub = m_cube.slice_by_idx({\"energy\": 3})\n",
    "print(m_sub)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Note that the returned object is again a `Map` with updated axes information. In this case, because we extracted only a single image, the energy axes is dropped from the map.\n",
    "\n",
    "To extract a sub-cube with a sliced energy axes we can use a normal `slice()` object:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 29,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "WcsNDMap\n",
      "\n",
      "\tgeom  : WcsGeom \n",
      " \taxes  : lon, lat, energy\n",
      "\tshape : (500, 250, 2)\n",
      "\tndim  : 3\n",
      "\tunit  : '' \n",
      "\tdtype : float32 \n",
      "\n"
     ]
    }
   ],
   "source": [
    "m_sub = m_cube.slice_by_idx({\"energy\": slice(1, 3)})\n",
    "print(m_sub)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Note that the returned object is also a `Map` object, but this time with updated energy axis specification.\n",
    "\n",
    "Slicing of multiple dimensions is supported by adding further entries to the dict passed to `.slice_by_idx()`"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 30,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "WcsNDMap\n",
      "\n",
      "\tgeom  : WcsGeom \n",
      " \taxes  : lon, lat, energy, time\n",
      "\tshape : (500, 250, 2, 6)\n",
      "\tndim  : 4\n",
      "\tunit  : '' \n",
      "\tdtype : float32 \n",
      "\n"
     ]
    }
   ],
   "source": [
    "m_sub = m_4d.slice_by_idx({\"energy\": slice(1, 3), \"time\": slice(4, 10)})\n",
    "print(m_sub)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "For convenience there is also a `.get_image_by_coord()` method which allows to access image planes at given non-spatial physical coordinates. This method also supports `Quantity` objects:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 31,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "WcsGeom\n",
      "\n",
      "\taxes       : lon, lat\n",
      "\tshape      : (500, 250)\n",
      "\tndim       : 2\n",
      "\tcoordsys   : GAL\n",
      "\tprojection : CAR\n",
      "\tcenter     : 0.0 deg, 0.0 deg\n",
      "\twidth      : 10.0 deg x 5.0 deg deg\n",
      "\n"
     ]
    }
   ],
   "source": [
    "image = m_4d.get_image_by_coord({\"energy\": 4 * u.TeV, \"time\": 5 * u.h})\n",
    "print(image.geom)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "##  3. Reading and Writing\n",
    "\n",
    "Gammapy `Map` objects are serialized using the Flexible Image Transport Format (FITS). Depending on the pixelisation scheme (HEALPix or WCS) and presence of non-spatial dimensions the actual convention to write the FITS file is different.\n",
    "By default Gammpy uses a generic convention named `gadf`, which will support WCS and HEALPix formats as well as an arbitrary number of non-spatial axes. The convention is documented in detail on the [Gamma Astro Data Formats](https://gamma-astro-data-formats.readthedocs.io/en/latest/skymaps/index.html) page.\n",
    "\n",
    "Other conventions required by specific software (e.g. the Fermi Science Tools) are supported as well. At the moment those are the following\n",
    "\n",
    "* `fgst-ccube`: Fermi counts cube format.\n",
    "* `fgst-ltcube`: Fermi livetime cube format.\n",
    "* `fgst-bexpcube`: Fermi exposure cube format\n",
    "* `fgst-template`: Fermi Galactic diffuse and source template format. \n",
    "* `fgst-srcmap` and `fgst-srcmap-sparse`: Fermi source map and sparse source map format.\n",
    "\n",
    "The conventions listed above only support an additional energy axis. \n",
    "\n",
    "### 3.1 Reading Maps\n",
    "\n",
    "Reading FITS files is mainly exposed via the `Map.read()` method.Let us take a look at a first example: "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 32,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "WcsNDMap\n",
      "\n",
      "\tgeom  : WcsGeom \n",
      " \taxes  : lon, lat\n",
      "\tshape : (400, 200)\n",
      "\tndim  : 2\n",
      "\tunit  : '' \n",
      "\tdtype : >i8 \n",
      "\n"
     ]
    }
   ],
   "source": [
    "filename = \"$GAMMAPY_DATA/fermi-3fhl-gc/fermi-3fhl-gc-counts.fits.gz\"\n",
    "m_3fhl_gc = Map.read(filename)\n",
    "print(m_3fhl_gc)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "By default `Map.read()` will try to find the first valid data hdu in the filename and read the data from there. If mutliple HDUs are present in the FITS file, the desired one can be chosen with the additional `hdu=` argument:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 33,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "WcsNDMap\n",
      "\n",
      "\tgeom  : WcsGeom \n",
      " \taxes  : lon, lat\n",
      "\tshape : (400, 200)\n",
      "\tndim  : 2\n",
      "\tunit  : '' \n",
      "\tdtype : >i8 \n",
      "\n"
     ]
    }
   ],
   "source": [
    "m_3fhl_gc = Map.read(filename, hdu=\"PRIMARY\")\n",
    "print(m_3fhl_gc)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "In rare cases e.g. when the FITS file is not valid or meta data is missing from the header it can be necessary to modify the header of a certain HDU before creating the `Map` object. In this case we can use `astropy.io.fits` directly to read the FITS file:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 34,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Filename: /Users/deil/work/gammapy-tutorials/datasets/fermi-3fhl-gc/fermi-3fhl-gc-exposure.fits.gz\n",
      "No.    Name      Ver    Type      Cards   Dimensions   Format\n",
      "  0  PRIMARY       1 PrimaryHDU      23   (400, 200)   float32   \n"
     ]
    }
   ],
   "source": [
    "filename = (\n",
    "    os.environ[\"GAMMAPY_DATA\"]\n",
    "    + \"/fermi-3fhl-gc/fermi-3fhl-gc-exposure.fits.gz\"\n",
    ")\n",
    "hdulist = fits.open(filename)\n",
    "hdulist.info()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "And then modify the header keyword and use `Map.from_hdulist()` to create the `Map` object after:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 35,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "WcsNDMap\n",
       "\n",
       "\tgeom  : WcsGeom \n",
       " \taxes  : lon, lat\n",
       "\tshape : (400, 200)\n",
       "\tndim  : 2\n",
       "\tunit  : 'cm2 s' \n",
       "\tdtype : >f4 "
      ]
     },
     "execution_count": 35,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "hdulist[\"PRIMARY\"].header[\"BUNIT\"] = \"cm2 s\"\n",
    "Map.from_hdulist(hdulist=hdulist)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### 3.2 Writing Maps\n",
    "\n",
    "Writing FITS files is mainoy exposure via the `Map.write()` method. Here is a first example:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 36,
   "metadata": {},
   "outputs": [],
   "source": [
    "m_cube.write(\"example_cube.fits\", overwrite=True)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "By default Gammapy does not overwrite files. In this example we set `overwrite=True` in case the cell gets executed multiple times. Now we can read back the cube from disk using `Map.read()`:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 37,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "WcsNDMap\n",
      "\n",
      "\tgeom  : WcsGeom \n",
      " \taxes  : lon, lat, energy\n",
      "\tshape : (500, 250, 4)\n",
      "\tndim  : 3\n",
      "\tunit  : '' \n",
      "\tdtype : >f4 \n",
      "\n"
     ]
    }
   ],
   "source": [
    "m_cube = Map.read(\"example_cube.fits\")\n",
    "print(m_cube)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "We can also choose a different FITS convention to write the example cube in a format compatible to the Fermi Galactic diffuse background model:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 38,
   "metadata": {},
   "outputs": [],
   "source": [
    "m_cube.write(\"example_cube_fgst.fits\", conv=\"fgst-template\", overwrite=True)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "To understand a little bit better the generic `gadf` convention we use `Map.to_hdulist()` to generate a list of FITS HDUs first:   "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 39,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Filename: (No file associated with this HDUList)\n",
      "No.    Name      Ver    Type      Cards   Dimensions   Format\n",
      "  0  PRIMARY       1 PrimaryHDU      29   (500, 250, 4, 24)   float32   \n",
      "  1  PRIMARY_BANDS    1 BinTableHDU     33   96R x 7C   ['I', 'E', 'E', 'E', 'E', 'E', 'E']   \n"
     ]
    }
   ],
   "source": [
    "hdulist = m_4d.to_hdulist(conv=\"gadf\")\n",
    "hdulist.info()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "As we can see the `HDUList` object contains to HDUs. The first one named `PRIMARY` contains the data array with shape corresponding to our data and the WCS information stored in the header:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 40,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "SIMPLE  =                    T / conforms to FITS standard                      \n",
       "BITPIX  =                  -32 / array data type                                \n",
       "NAXIS   =                    4 / number of array dimensions                     \n",
       "NAXIS1  =                  500                                                  \n",
       "NAXIS2  =                  250                                                  \n",
       "NAXIS3  =                    4                                                  \n",
       "NAXIS4  =                   24                                                  \n",
       "EXTEND  =                    T                                                  \n",
       "WCSAXES =                    2 / Number of coordinate axes                      \n",
       "CRPIX1  =                250.5 / Pixel coordinate of reference point            \n",
       "CRPIX2  =                125.5 / Pixel coordinate of reference point            \n",
       "CDELT1  =                -0.02 / [deg] Coordinate increment at reference point  \n",
       "CDELT2  =                 0.02 / [deg] Coordinate increment at reference point  \n",
       "CUNIT1  = 'deg'                / Units of coordinate increment and value        \n",
       "CUNIT2  = 'deg'                / Units of coordinate increment and value        \n",
       "CTYPE1  = 'GLON-CAR'           / galactic longitude, plate caree projection     \n",
       "CTYPE2  = 'GLAT-CAR'           / galactic latitude, plate caree projection      \n",
       "CRVAL1  =                  0.0 / [deg] Coordinate value at reference point      \n",
       "CRVAL2  =                  0.0 / [deg] Coordinate value at reference point      \n",
       "LONPOLE =                  0.0 / [deg] Native longitude of celestial pole       \n",
       "LATPOLE =                 90.0 / [deg] Native latitude of celestial pole        \n",
       "AXCOLS1 = 'E_MIN,E_MAX'                                                         \n",
       "INTERP1 = 'log     '                                                            \n",
       "AXCOLS2 = 'TIME_MIN,TIME_MAX'                                                   \n",
       "INTERP2 = 'lin     '                                                            \n",
       "WCSSHAPE= '(500,250,4,24)'                                                      \n",
       "BANDSHDU= 'PRIMARY_BANDS'                                                       \n",
       "META    = '{}      '                                                            \n",
       "BUNIT   = ''                                                                    "
      ]
     },
     "execution_count": 40,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "hdulist[\"PRIMARY\"].header"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "The second HDU is a `BinTableHDU` named `PRIMARY_BANDS` contains the information on the non-spatial axes such as name, order, unit, min, max and center values of the axis bins. We use an `astropy.table.Table` to show the information:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 41,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<i>Table length=96</i>\n",
       "<table id=\"table4842578552\" class=\"table-striped table-bordered table-condensed\">\n",
       "<thead><tr><th>CHANNEL</th><th>ENERGY</th><th>E_MIN</th><th>E_MAX</th><th>TIME</th><th>TIME_MIN</th><th>TIME_MAX</th></tr></thead>\n",
       "<thead><tr><th></th><th>TeV</th><th>TeV</th><th>TeV</th><th>h</th><th>h</th><th>h</th></tr></thead>\n",
       "<thead><tr><th>int16</th><th>float32</th><th>float32</th><th>float32</th><th>float32</th><th>float32</th><th>float32</th></tr></thead>\n",
       "<tr><td>0</td><td>1.7782794</td><td>1.0</td><td>3.1622777</td><td>0.5</td><td>0.0</td><td>1.0</td></tr>\n",
       "<tr><td>1</td><td>5.623413</td><td>3.1622777</td><td>10.0</td><td>0.5</td><td>0.0</td><td>1.0</td></tr>\n",
       "<tr><td>2</td><td>17.782795</td><td>10.0</td><td>31.622776</td><td>0.5</td><td>0.0</td><td>1.0</td></tr>\n",
       "<tr><td>3</td><td>56.23413</td><td>31.622776</td><td>100.0</td><td>0.5</td><td>0.0</td><td>1.0</td></tr>\n",
       "<tr><td>4</td><td>1.7782794</td><td>1.0</td><td>3.1622777</td><td>1.5</td><td>1.0</td><td>2.0</td></tr>\n",
       "<tr><td>5</td><td>5.623413</td><td>3.1622777</td><td>10.0</td><td>1.5</td><td>1.0</td><td>2.0</td></tr>\n",
       "<tr><td>6</td><td>17.782795</td><td>10.0</td><td>31.622776</td><td>1.5</td><td>1.0</td><td>2.0</td></tr>\n",
       "<tr><td>7</td><td>56.23413</td><td>31.622776</td><td>100.0</td><td>1.5</td><td>1.0</td><td>2.0</td></tr>\n",
       "<tr><td>8</td><td>1.7782794</td><td>1.0</td><td>3.1622777</td><td>2.5</td><td>2.0</td><td>3.0</td></tr>\n",
       "<tr><td>...</td><td>...</td><td>...</td><td>...</td><td>...</td><td>...</td><td>...</td></tr>\n",
       "<tr><td>86</td><td>17.782795</td><td>10.0</td><td>31.622776</td><td>21.5</td><td>21.0</td><td>22.0</td></tr>\n",
       "<tr><td>87</td><td>56.23413</td><td>31.622776</td><td>100.0</td><td>21.5</td><td>21.0</td><td>22.0</td></tr>\n",
       "<tr><td>88</td><td>1.7782794</td><td>1.0</td><td>3.1622777</td><td>22.5</td><td>22.0</td><td>23.0</td></tr>\n",
       "<tr><td>89</td><td>5.623413</td><td>3.1622777</td><td>10.0</td><td>22.5</td><td>22.0</td><td>23.0</td></tr>\n",
       "<tr><td>90</td><td>17.782795</td><td>10.0</td><td>31.622776</td><td>22.5</td><td>22.0</td><td>23.0</td></tr>\n",
       "<tr><td>91</td><td>56.23413</td><td>31.622776</td><td>100.0</td><td>22.5</td><td>22.0</td><td>23.0</td></tr>\n",
       "<tr><td>92</td><td>1.7782794</td><td>1.0</td><td>3.1622777</td><td>23.5</td><td>23.0</td><td>24.0</td></tr>\n",
       "<tr><td>93</td><td>5.623413</td><td>3.1622777</td><td>10.0</td><td>23.5</td><td>23.0</td><td>24.0</td></tr>\n",
       "<tr><td>94</td><td>17.782795</td><td>10.0</td><td>31.622776</td><td>23.5</td><td>23.0</td><td>24.0</td></tr>\n",
       "<tr><td>95</td><td>56.23413</td><td>31.622776</td><td>100.0</td><td>23.5</td><td>23.0</td><td>24.0</td></tr>\n",
       "</table>"
      ],
      "text/plain": [
       "<Table length=96>\n",
       "CHANNEL   ENERGY    E_MIN     E_MAX     TIME  TIME_MIN TIME_MAX\n",
       "           TeV       TeV       TeV       h       h        h    \n",
       " int16   float32   float32   float32  float32 float32  float32 \n",
       "------- --------- --------- --------- ------- -------- --------\n",
       "      0 1.7782794       1.0 3.1622777     0.5      0.0      1.0\n",
       "      1  5.623413 3.1622777      10.0     0.5      0.0      1.0\n",
       "      2 17.782795      10.0 31.622776     0.5      0.0      1.0\n",
       "      3  56.23413 31.622776     100.0     0.5      0.0      1.0\n",
       "      4 1.7782794       1.0 3.1622777     1.5      1.0      2.0\n",
       "      5  5.623413 3.1622777      10.0     1.5      1.0      2.0\n",
       "      6 17.782795      10.0 31.622776     1.5      1.0      2.0\n",
       "      7  56.23413 31.622776     100.0     1.5      1.0      2.0\n",
       "      8 1.7782794       1.0 3.1622777     2.5      2.0      3.0\n",
       "    ...       ...       ...       ...     ...      ...      ...\n",
       "     86 17.782795      10.0 31.622776    21.5     21.0     22.0\n",
       "     87  56.23413 31.622776     100.0    21.5     21.0     22.0\n",
       "     88 1.7782794       1.0 3.1622777    22.5     22.0     23.0\n",
       "     89  5.623413 3.1622777      10.0    22.5     22.0     23.0\n",
       "     90 17.782795      10.0 31.622776    22.5     22.0     23.0\n",
       "     91  56.23413 31.622776     100.0    22.5     22.0     23.0\n",
       "     92 1.7782794       1.0 3.1622777    23.5     23.0     24.0\n",
       "     93  5.623413 3.1622777      10.0    23.5     23.0     24.0\n",
       "     94 17.782795      10.0 31.622776    23.5     23.0     24.0\n",
       "     95  56.23413 31.622776     100.0    23.5     23.0     24.0"
      ]
     },
     "execution_count": 41,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "Table.read(hdulist[\"PRIMARY_BANDS\"])"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "##  4. Visualizing and Plotting\n",
    "\n",
    "### 4.1 Plotting \n",
    "\n",
    "For debugging and inspecting the map data it is useful to plot ot visualize the images planes contained in the map. "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 42,
   "metadata": {},
   "outputs": [],
   "source": [
    "filename = \"$GAMMAPY_DATA/fermi-3fhl-gc/fermi-3fhl-gc-counts.fits.gz\"\n",
    "m_3fhl_gc = Map.read(filename)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "After reading the map we can now plot it on the screen by calling the `.plot()` method:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 43,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "m_3fhl_gc.plot();"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "We can easily improve the plot by calling `Map.smooth()` first and providing additional arguments to `.plot()`. Most of them are passed further to [plt.imshow()](https://matplotlib.org/api/_as_gen/matplotlib.pyplot.imshow.html):"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 44,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 2 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "smoothed = m_3fhl_gc.smooth(width=0.2 * u.deg, kernel=\"gauss\")\n",
    "smoothed.plot(stretch=\"sqrt\", add_cbar=True, vmax=4, cmap=\"inferno\");"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "We can use the [plt.rc_context()](https://matplotlib.org/api/_as_gen/matplotlib.pyplot.rc_context.html) context manager to further tweak the plot by adapting the figure and font size:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 45,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 864x388.8 with 2 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "rc_params = {\"figure.figsize\": (12, 5.4), \"font.size\": 12}\n",
    "with plt.rc_context(rc=rc_params):\n",
    "    smoothed = m_3fhl_gc.smooth(width=0.2 * u.deg, kernel=\"gauss\")\n",
    "    smoothed.plot(stretch=\"sqrt\", add_cbar=True, vmax=4);"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### 4.2 Interactive Plotting \n",
    "\n",
    "For maps with non-spatial dimensions the `Map` object features an interactive plotting method, that works in jupyter notebooks only (**Note:** it requires the package `ipywidgets` to be installed). We first read a small example cutout from the Fermi Galactic diffuse model and display the data cube by calling `.plot_interactive()`:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 46,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 864x388.8 with 2 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "filename = \"$GAMMAPY_DATA/fermi-3fhl-gc/gll_iem_v06_gc.fits.gz\"\n",
    "m_iem_gc = Map.read(filename)\n",
    "\n",
    "rc_params = {\n",
    "    \"figure.figsize\": (12, 5.4),\n",
    "    \"font.size\": 12,\n",
    "    \"axes.formatter.limits\": (2, -2),\n",
    "}\n",
    "m_iem_gc.plot_interactive(add_cbar=True, stretch=\"sqrt\", rc_params=rc_params)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Now you can use the interactive slider to select an energy range and the corresponding image is diplayed on the screen. You can also use the radio buttons to select your preferred image stretching. We have passed additional keywords using the `rc_params` argument to improve the figure and font size. Those keywords are directly passed to the [plt.rc_context()](https://matplotlib.org/api/_as_gen/matplotlib.pyplot.rc_context.html) context manager."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "##  5. Reprojecting, Interpolating and Miscellaneous\n",
    "\n",
    "### 5.1 Reprojecting to Different Map Geometries\n",
    "\n",
    "The example map `m_iem_gc` is given in Galactic coordinates:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 47,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "WcsGeom\n",
      "\n",
      "\taxes       : lon, lat, energy\n",
      "\tshape      : (120, 64, 30)\n",
      "\tndim       : 3\n",
      "\tcoordsys   : GAL\n",
      "\tprojection : CAR\n",
      "\tcenter     : 0.0 deg, -0.1 deg\n",
      "\twidth      : 15.0 deg x 8.0 deg deg\n",
      "\n"
     ]
    }
   ],
   "source": [
    "print(m_iem_gc.geom)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "As an example we will now extract the image at `~10 GeV` and reproject it to ICRS coordinates. For this we first define the target map WCS geometry. As `.reproject()` only applies to the spatial axes, we do not have to specify any additional non-spatial axes:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 48,
   "metadata": {},
   "outputs": [],
   "source": [
    "skydir = SkyCoord(266.4, -28.9, frame=\"icrs\", unit=\"deg\")\n",
    "wcs_geom_cel = WcsGeom.create(\n",
    "    skydir=skydir, binsz=0.1, coordsys=\"CEL\", width=(8, 4)\n",
    ")"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Then we extract the image at `~10 GeV`, reproject to the target geometry and plot the result:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 49,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 2 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "m_iem = m_iem_gc.get_image_by_coord({\"energy\": 10 * u.GeV})\n",
    "m_iem_cel = m_iem.reproject(wcs_geom_cel)\n",
    "m_iem_cel.plot(add_cbar=True, vmin=0, vmax=2.5e-9);"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### 5.2 Interpolating Map Values\n",
    "\n",
    "While for the reprojection example above we used `.get_image_by_coord()` to extract the closest image to `~10 GeV`, we can use the more general method `.interp_by_coord()` to interpolate in the energy axis as well. For this we first define again the target map geometry:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 50,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 2 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "m_iem_10GeV = Map.from_geom(wcs_geom_cel)\n",
    "coords = m_iem_10GeV.geom.get_coord()\n",
    "\n",
    "m_iem_10GeV.data = m_iem_gc.interp_by_coord(\n",
    "    {\"skycoord\": coords.skycoord, \"energy\": 10 * u.GeV},\n",
    "    interp=\"linear\",\n",
    "    fill_value=np.nan,\n",
    ")\n",
    "m_iem_10GeV.plot(add_cbar=True, vmin=0, vmax=2.5e-9);"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### 5.3 Making Cutouts\n",
    "\n",
    "The `WCSNDMap` objects features a `.cutout()` method, which allows you to cut out a smaller part of a larger map. This can be useful, e.g. when working with allsky diffuse maps. Here is an example: "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 51,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 864x388.8 with 2 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "position = SkyCoord(0, 0, frame=\"galactic\", unit=\"deg\")\n",
    "m_iem_cutout = m_iem_gc.cutout(position=position, width=(4 * u.deg, 2 * u.deg))\n",
    "\n",
    "rc_params = {\n",
    "    \"figure.figsize\": (12, 5.4),\n",
    "    \"font.size\": 12,\n",
    "    \"axes.formatter.limits\": (2, -2),\n",
    "}\n",
    "m_iem_cutout.plot_interactive(\n",
    "    add_cbar=True, rc_params=rc_params, stretch=\"linear\"\n",
    ")"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "The returned object is again a `Map` object with udpated WCS information and data size. As one can see the cutout is automatically applied to all the non-spatial axes as well. The cutout width is given in the order of `(lon, lat)` and can be specified with units that will be handled correctly. "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.7.0"
  },
  "nbsphinx": {
   "orphan": true
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
