{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "\n",
    "<div class=\"alert alert-info\">\n",
    "\n",
    "**This is a fixed-text formatted version of a Jupyter notebook**\n",
    "\n",
    "- Try online [![Binder](https://mybinder.org/badge.svg)](https://mybinder.org/v2/gh/gammapy/gammapy-webpage/master?urlpath=lab/tree/catalog.ipynb)\n",
    "- You can contribute with your own notebooks in this\n",
    "[GitHub repository](https://github.com/gammapy/gammapy/tree/master/tutorials).\n",
    "- **Source files:**\n",
    "[catalog.ipynb](../_static/notebooks/catalog.ipynb) |\n",
    "[catalog.py](../_static/notebooks/catalog.py)\n",
    "</div>\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Source catalogs\n",
    "\n",
    "**TODO: write me!**\n",
    "\n",
    "This is a hands-on tutorial introduction to `~gammapy.catalog`."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [],
   "source": [
    "%matplotlib inline\n",
    "import matplotlib.pyplot as plt"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {},
   "outputs": [],
   "source": [
    "from gammapy.catalog import SOURCE_CATALOGS"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "{'gamma-cat': gammapy.catalog.gammacat.SourceCatalogGammaCat,\n",
       " 'hgps': gammapy.catalog.hess.SourceCatalogHGPS,\n",
       " '2hwc': gammapy.catalog.hawc.SourceCatalog2HWC,\n",
       " '3fgl': gammapy.catalog.fermi.SourceCatalog3FGL,\n",
       " '4fgl': gammapy.catalog.fermi.SourceCatalog4FGL,\n",
       " '2fhl': gammapy.catalog.fermi.SourceCatalog2FHL,\n",
       " '3fhl': gammapy.catalog.fermi.SourceCatalog3FHL}"
      ]
     },
     "execution_count": 3,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "SOURCE_CATALOGS"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {},
   "outputs": [],
   "source": [
    "catalog = SOURCE_CATALOGS[\"3fgl\"]()\n",
    "source = catalog[\"3FGL J0349.9-2102\"]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Example to show how to plot spectrum of Fermi/LAT sources.\n",
    "\n",
    "\n",
    "def plot_source_spectrum(source, label, color):\n",
    "    opts = dict(energy_power=2, flux_unit=\"erg-1 cm-2 s-1\")\n",
    "    spec = source.spectral_model()\n",
    "    spec.plot(\n",
    "        energy_range=source.energy_range, label=label, color=color, **opts\n",
    "    )\n",
    "    spec.plot_error(energy_range=source.energy_range, facecolor=color, **opts)\n",
    "    source.flux_points.to_sed_type(\"dnde\").plot(color=color, **opts)\n",
    "\n",
    "\n",
    "def plot_source_spectra(name):\n",
    "    plot_source_spectrum(\n",
    "        source=SOURCE_CATALOGS[\"3fgl\"]()[name], label=\"3FGL\", color=\"r\"\n",
    "    )\n",
    "    plot_source_spectrum(\n",
    "        source=SOURCE_CATALOGS[\"2fhl\"]()[name], label=\"2FHL\", color=\"g\"\n",
    "    )\n",
    "    plot_source_spectrum(\n",
    "        source=SOURCE_CATALOGS[\"3fhl\"]()[name], label=\"3FHL\", color=\"b\"\n",
    "    )\n",
    "\n",
    "    ax = plt.gca()\n",
    "    ax.set_ylim(1.0e-12, 7.0e-11)\n",
    "    ax.set_xlim(1.0e-4, 2.0)\n",
    "    ax.set_xlabel(\"Energy (TeV)\")\n",
    "    ax.set_ylabel(\"E^2 dN/dE (erg cm-2 s-1])\")\n",
    "    plt.legend(loc=0)\n",
    "\n",
    "\n",
    "# Select your favourite source\n",
    "# (must be named like this in ASSOC columns of all catalogs)\n",
    "name = \"PKS 2155-304\"\n",
    "plot_source_spectra(name)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<matplotlib.axes._subplots.AxesSubplot at 0x1197023c8>"
      ]
     },
     "execution_count": 6,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "lc = source.lightcurve\n",
    "lc.plot()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.7.0"
  },
  "nbsphinx": {
   "orphan": true
  }
 },
 "nbformat": 4,
 "nbformat_minor": 4
}
