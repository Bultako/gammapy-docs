{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "\n",
    "<div class=\"alert alert-info\">\n",
    "\n",
    "**This is a fixed-text formatted version of a Jupyter notebook**\n",
    "\n",
    "- Try online [![Binder](https://mybinder.org/badge.svg)](https://mybinder.org/v2/gh/gammapy/gammapy-webpage/master?urlpath=lab/tree/image_fitting_with_sherpa.ipynb)\n",
    "- You can contribute with your own notebooks in this\n",
    "[GitHub repository](https://github.com/gammapy/gammapy/tree/master/tutorials).\n",
    "- **Source files:**\n",
    "[image_fitting_with_sherpa.ipynb](../_static/notebooks/image_fitting_with_sherpa.ipynb) |\n",
    "[image_fitting_with_sherpa.py](../_static/notebooks/image_fitting_with_sherpa.py)\n",
    "</div>\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Fitting 2D images with Sherpa\n",
    "\n",
    "### Introduction\n",
    "\n",
    "Sherpa is the X-ray satellite Chandra modeling and fitting application. It enables the user to construct complex models from simple definitions and fit those models to data, using a variety of statistics and optimization methods. \n",
    "The issues of constraining the source position and morphology are common in X- and Gamma-ray astronomy. \n",
    "This notebook will show you how to apply Sherpa to CTA data.\n",
    "\n",
    "Here we will set up Sherpa to fit the counts map and loading the ancillary images for subsequent use. A relevant test statistic for data with Poisson fluctuations is the one proposed by Cash (1979). The simplex (or Nelder-Mead) fitting algorithm is a good compromise between efficiency and robustness. The source fit is best performed in pixel coordinates.\n",
    "\n",
    "This tutorial has 2 important parts\n",
    "1. Generating the Maps\n",
    "2. The actual fitting with sherpa.\n",
    "\n",
    "Since sherpa deals only with 2-dim images, the first part of this tutorial shows how to prepare gammapy maps to make classical images."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Necessary imports"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [],
   "source": [
    "%matplotlib inline\n",
    "import matplotlib.pyplot as plt\n",
    "from pathlib import Path\n",
    "import numpy as np\n",
    "from astropy.io import fits\n",
    "import astropy.units as u\n",
    "from astropy.coordinates import SkyCoord\n",
    "from gammapy.data import DataStore\n",
    "from gammapy.irf import make_mean_psf\n",
    "from gammapy.maps import WcsGeom, MapAxis, Map\n",
    "from gammapy.cube import MapDatasetMaker, PSFKernel, MapDataset"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## 1. Generating the required Maps\n",
    "\n",
    "We first generate the required maps using 3 simulated runs on the Galactic center, exactly as in the [analysis_3d](analysis_3d.ipynb) tutorial.\n",
    "\n",
    "It is always advisable to make the maps on fine energy bins, and then sum them over to get an image."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Define which data to use\n",
    "data_store = DataStore.from_dir(\"$GAMMAPY_DATA/cta-1dc/index/gps/\")\n",
    "obs_ids = [110380, 111140, 111159]\n",
    "observations = data_store.get_observations(obs_ids)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {},
   "outputs": [],
   "source": [
    "energy_axis = MapAxis.from_edges(\n",
    "    np.logspace(-1, 1.0, 10), unit=\"TeV\", name=\"energy\", interp=\"log\"\n",
    ")\n",
    "geom = WcsGeom.create(\n",
    "    skydir=(0, 0),\n",
    "    binsz=0.02,\n",
    "    width=(10, 8),\n",
    "    coordsys=\"GAL\",\n",
    "    proj=\"CAR\",\n",
    "    axes=[energy_axis],\n",
    ")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {},
   "outputs": [],
   "source": [
    "stacked = MapDataset.create(geom)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "WARNING: failed to download https://maia.usno.navy.mil/ser7/finals2000A.all and https://toshi.nofs.navy.mil/ser7/finals2000A.all, using local IERS-B: <urlopen error [Errno 54] Connection reset by peer>;<urlopen error EOF occurred in violation of protocol (_ssl.c:1045). requested URL: https://toshi.nofs.navy.mil/ser7/finals2000A.all> [astropy.utils.iers.iers]\n",
      "WARNING: Tried to get polar motions for times after IERS data is valid. Defaulting to polar motion from the 50-yr mean for those. This may affect precision at the 10s of arcsec level [astropy.coordinates.builtin_frames.utils]\n",
      "WARNING: (some) times are outside of range covered by IERS table. Assuming UT1-UTC=0 for coordinate transformations. [astropy.coordinates.builtin_frames.utils]\n",
      "/Users/jer/git/gammapy/gammapy/gammapy/utils/interpolation.py:159: Warning: Interpolated values reached float32 precision limit\n",
      "  \"Interpolated values reached float32 precision limit\", Warning\n",
      "WARNING: failed to download https://maia.usno.navy.mil/ser7/finals2000A.all and https://toshi.nofs.navy.mil/ser7/finals2000A.all, using local IERS-B: <urlopen error timed out>;<urlopen error EOF occurred in violation of protocol (_ssl.c:1045). requested URL: https://toshi.nofs.navy.mil/ser7/finals2000A.all> [astropy.utils.iers.iers]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "CPU times: user 12.9 s, sys: 2.83 s, total: 15.7 s\n",
      "Wall time: 1min 35s\n"
     ]
    }
   ],
   "source": [
    "%%time\n",
    "maker = MapDatasetMaker(geom=geom, offset_max=4.0 * u.deg)\n",
    "for obs in observations:\n",
    "    dataset = maker.run(obs)\n",
    "    stacked.stack(dataset)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Making a PSF Map\n",
    "\n",
    "Make a PSF map and weigh it with the exposure at the source position to get a 2D PSF "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {},
   "outputs": [],
   "source": [
    "# mean PSF\n",
    "src_pos = SkyCoord(0, 0, unit=\"deg\", frame=\"galactic\")\n",
    "table_psf = make_mean_psf(observations, src_pos)\n",
    "\n",
    "# PSF kernel used for the model convolution\n",
    "psf_kernel = PSFKernel.from_table_psf(table_psf, geom, max_radius=\"0.3 deg\")\n",
    "\n",
    "# get the exposure at the source position\n",
    "exposure_at_pos = stacked.exposure.get_by_coord(\n",
    "    {\"skycoord\": src_pos, \"energy\": energy_axis.center}\n",
    ")\n",
    "\n",
    "# now compute the 2D PSF\n",
    "psf2D = psf_kernel.make_image(exposures=exposure_at_pos)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Make 2D images from 3D ones\n",
    "\n",
    "Since sherpa image fitting works only with 2-dim images,\n",
    "we convert the generated maps to 2D images using `to_image()` and save them as fits files. The exposure is weighed with the spectrum before averaging (assumed to be a power law by default).\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {},
   "outputs": [],
   "source": [
    "dataset_2d = stacked.to_image(keepdims=True)\n",
    "\n",
    "maps = {\n",
    "    \"counts\": dataset_2d.counts.get_image_by_idx([0]),\n",
    "    \"exposure\": dataset_2d.exposure.get_image_by_idx([0]),\n",
    "    \"background\": dataset_2d.background_model.map.get_image_by_idx([0]),\n",
    "}"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {},
   "outputs": [],
   "source": [
    "Path(\"analysis_3d\").mkdir(exist_ok=True)\n",
    "\n",
    "maps[\"counts\"].write(\"analysis_3d/counts_2D.fits\", overwrite=True)\n",
    "maps[\"background\"].write(\"analysis_3d/background_2D.fits\", overwrite=True)\n",
    "maps[\"exposure\"].write(\"analysis_3d/exposure_2D.fits\", overwrite=True)\n",
    "fits.writeto(\"analysis_3d/psf_2D.fits\", psf2D.data, overwrite=True)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## 2. Analysis using sherpha\n",
    "\n",
    "### Read the maps and store them in a sherpa model\n",
    "\n",
    "We now have the prepared files which sherpa can read. \n",
    "This part of the notebook shows how to do image analysis using sherpa"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "WARNING: imaging routines will not be available, \n",
      "failed to import sherpa.image.ds9_backend due to \n",
      "'RuntimeErr: DS9Win unusable: Could not find xpaget on your PATH'\n",
      "WARNING: failed to import sherpa.astro.xspec; XSPEC models will not be available\n"
     ]
    }
   ],
   "source": [
    "import sherpa.astro.ui as sh\n",
    "\n",
    "sh.set_stat(\"cash\")\n",
    "sh.set_method(\"simplex\")\n",
    "\n",
    "sh.load_image(\"analysis_3d/counts_2D.fits\")\n",
    "sh.set_coord(\"logical\")\n",
    "\n",
    "sh.load_table_model(\"expo\", \"analysis_3d/exposure_2D.fits\")\n",
    "sh.load_table_model(\"bkg\", \"analysis_3d/background_2D.fits\")\n",
    "sh.load_psf(\"psf\", \"analysis_3d/psf_2D.fits\")"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "To speed up this tutorial, we change the fit optimazation method to Levenberg-Marquardt and fix a required tolerance. This can make the fitting less robust, and in practise, you can skip this step unless you understand what is going on."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "metadata": {},
   "outputs": [],
   "source": [
    "sh.set_method(\"levmar\")\n",
    "sh.set_method_opt(\"xtol\", 1e-5)\n",
    "sh.set_method_opt(\"ftol\", 1e-5)\n",
    "sh.set_method_opt(\"gtol\", 1e-5)\n",
    "sh.set_method_opt(\"epsfcn\", 1e-5)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "name     = levmar\n",
      "ftol     = 1e-05\n",
      "xtol     = 1e-05\n",
      "gtol     = 1e-05\n",
      "maxfev   = None\n",
      "epsfcn   = 1e-05\n",
      "factor   = 100.0\n",
      "numcores = 1\n",
      "verbose  = 0\n"
     ]
    }
   ],
   "source": [
    "print(sh.get_method())"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "In principle one might first want to fit the background amplitude. However the background estimation method already yields the correct normalization, so we freeze the background amplitude to unity instead of adjusting it. The (smoothed) residuals from this background model are then computed and shown."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "metadata": {},
   "outputs": [],
   "source": [
    "sh.set_full_model(bkg)\n",
    "bkg.ampl = 1\n",
    "sh.freeze(bkg)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 2 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "resid = Map.read(\"analysis_3d/counts_2D.fits\")\n",
    "resid.data = sh.get_data_image().y - sh.get_model_image().y\n",
    "resid_smooth = resid.smooth(width=4)\n",
    "resid_smooth.plot(add_cbar=True);"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Find and fit the brightest source\n",
    "We then find the position of the maximum in the (smoothed) residuals map, and fit a (symmetrical) Gaussian source with that initial position:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "metadata": {},
   "outputs": [],
   "source": [
    "yp, xp = np.unravel_index(\n",
    "    np.nanargmax(resid_smooth.data), resid_smooth.data.shape\n",
    ")\n",
    "ampl = resid_smooth.get_by_pix((xp, yp))[0]\n",
    "\n",
    "# creates g0 as a gauss2d instance\n",
    "sh.set_full_model(bkg + psf(sh.gauss2d.g0) * expo)\n",
    "g0.xpos, g0.ypos = xp, yp\n",
    "sh.freeze(g0.xpos, g0.ypos)  # fix the position in the initial fitting step\n",
    "\n",
    "# fix exposure amplitude so that typical exposure is of order unity\n",
    "expo.ampl = 1e-9\n",
    "sh.freeze(expo)\n",
    "sh.thaw(g0.fwhm, g0.ampl)  # in case frozen in a previous iteration\n",
    "\n",
    "g0.fwhm = 10  # give some reasonable initial values\n",
    "g0.ampl = ampl"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/Users/jer/opt/miniconda3/envs/gammapy-dev/lib/python3.7/site-packages/sherpa/instrument.py:718: UserWarning: PSF Image does not have a pixel size. Sherpa will assume the pixel size is the sameas the data\n",
      "  warnings.warn(\"PSF Image does not have a pixel size. Sherpa will assume the pixel size is the same\"\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Dataset               = 1\n",
      "Method                = levmar\n",
      "Statistic             = cash\n",
      "Initial fit statistic = 291433\n",
      "Final fit statistic   = 289598 at function evaluation 43\n",
      "Data points           = 200000\n",
      "Degrees of freedom    = 199998\n",
      "Change in statistic   = 1834.33\n",
      "   g0.fwhm        112.773      +/- 2.20899     \n",
      "   g0.ampl        0.441916     +/- 0.0126562   \n",
      "CPU times: user 2.97 s, sys: 185 ms, total: 3.15 s\n",
      "Wall time: 3.28 s\n"
     ]
    }
   ],
   "source": [
    "%%time\n",
    "sh.fit()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Fit all parameters of this Gaussian component, fix them and re-compute the residuals map."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Dataset               = 1\n",
      "Method                = levmar\n",
      "Statistic             = cash\n",
      "Initial fit statistic = 289598\n",
      "Final fit statistic   = 289504 at function evaluation 26\n",
      "Data points           = 200000\n",
      "Degrees of freedom    = 199996\n",
      "Change in statistic   = 94.5708\n",
      "   g0.fwhm        107.444      +/- 2.10798     \n",
      "   g0.xpos        235.835      +/- 1.23177     \n",
      "   g0.ypos        195.201      +/- 1.28616     \n",
      "   g0.ampl        0.472507     +/- 0.0131969   \n",
      "CPU times: user 1.79 s, sys: 98.8 ms, total: 1.89 s\n",
      "Wall time: 1.94 s\n"
     ]
    }
   ],
   "source": [
    "%%time\n",
    "sh.thaw(g0.xpos, g0.ypos)\n",
    "sh.fit()\n",
    "sh.freeze(g0)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "resid.data = sh.get_data_image().y - sh.get_model_image().y\n",
    "resid_smooth = resid.smooth(width=3)\n",
    "resid_smooth.plot();"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Iteratively find and fit additional sources\n",
    "\n",
    "The residual map still shows the presence of additional components. Instantiate additional Gaussian components, and use them to iteratively fit sources, repeating the steps performed above for component g0. (The residuals map is shown after each additional source included in the model.) This would typically be done for many sources, but since this takes quite a bit of time, we demonstrate it for 3 iterations only here...."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "metadata": {},
   "outputs": [],
   "source": [
    "# initialize components with fixed, zero amplitude\n",
    "for i in range(1, 3):\n",
    "    model = sh.create_model_component(\"gauss2d\", \"g\" + str(i))\n",
    "    model.ampl = 0\n",
    "    sh.freeze(model)\n",
    "\n",
    "sources = [g0, g1, g2]\n",
    "sh.set_full_model(bkg + psf(g0 + g1 + g2) * expo)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/Users/jer/opt/miniconda3/envs/gammapy-dev/lib/python3.7/site-packages/sherpa/instrument.py:718: UserWarning: PSF Image does not have a pixel size. Sherpa will assume the pixel size is the sameas the data\n",
      "  warnings.warn(\"PSF Image does not have a pixel size. Sherpa will assume the pixel size is the same\"\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Dataset               = 1\n",
      "Method                = levmar\n",
      "Statistic             = cash\n",
      "Initial fit statistic = 291453\n",
      "Final fit statistic   = 289598 at function evaluation 43\n",
      "Data points           = 200000\n",
      "Degrees of freedom    = 199998\n",
      "Change in statistic   = 1854.41\n",
      "   g0.fwhm        112.768      +/- 2.20869     \n",
      "   g0.ampl        0.441936     +/- 0.0126579   \n",
      "Dataset               = 1\n",
      "Method                = levmar\n",
      "Statistic             = cash\n",
      "Initial fit statistic = 289598\n",
      "Final fit statistic   = 289504 at function evaluation 26\n",
      "Data points           = 200000\n",
      "Degrees of freedom    = 199996\n",
      "Change in statistic   = 94.5716\n",
      "   g0.fwhm        107.444      +/- 2.10798     \n",
      "   g0.xpos        235.835      +/- 1.23177     \n",
      "   g0.ypos        195.201      +/- 1.28615     \n",
      "   g0.ampl        0.472507     +/- 0.0131969   \n",
      "Dataset               = 1\n",
      "Method                = levmar\n",
      "Statistic             = cash\n",
      "Initial fit statistic = 288955\n",
      "Final fit statistic   = 288814 at function evaluation 20\n",
      "Data points           = 200000\n",
      "Degrees of freedom    = 199998\n",
      "Change in statistic   = 140.418\n",
      "   g1.fwhm        3.7736       +/- 0.479433    \n",
      "   g1.ampl        16.6573      +/- 3.64527     \n",
      "Dataset               = 1\n",
      "Method                = levmar\n",
      "Statistic             = cash\n",
      "Initial fit statistic = 288814\n",
      "Final fit statistic   = 288736 at function evaluation 22\n",
      "Data points           = 200000\n",
      "Degrees of freedom    = 199996\n",
      "Change in statistic   = 78.7651\n",
      "   g1.fwhm        2.20896      +/- 0.565577    \n",
      "   g1.xpos        253.097      +/- 0.182537    \n",
      "   g1.ypos        197.91       +/- 0.183642    \n",
      "   g1.ampl        46.2468      +/- 17.807      \n",
      "Dataset               = 1\n",
      "Method                = levmar\n",
      "Statistic             = cash\n",
      "Initial fit statistic = 288519\n",
      "Final fit statistic   = 288448 at function evaluation 10\n",
      "Data points           = 200000\n",
      "Degrees of freedom    = 199998\n",
      "Change in statistic   = 70.7812\n",
      "   g2.fwhm        19.6011      +/- 1.2746      \n",
      "   g2.ampl        0.958563     +/- 0.112208    \n",
      "Dataset               = 1\n",
      "Method                = levmar\n",
      "Statistic             = cash\n",
      "Initial fit statistic = 288448\n",
      "Final fit statistic   = 288330 at function evaluation 51\n",
      "Data points           = 200000\n",
      "Degrees of freedom    = 199996\n",
      "Change in statistic   = 117.726\n",
      "   g2.fwhm        35.4186      +/- 1.87188     \n",
      "   g2.xpos        187.112      +/- 1.11498     \n",
      "   g2.ypos        197.468      +/- 1.13358     \n",
      "   g2.ampl        0.59605      +/- 0.0505517   \n",
      "CPU times: user 12.3 s, sys: 505 ms, total: 12.8 s\n",
      "Wall time: 12.9 s\n"
     ]
    }
   ],
   "source": [
    "%%time\n",
    "for gs in sources:\n",
    "    yp, xp = np.unravel_index(\n",
    "        np.nanargmax(resid_smooth.data), resid_smooth.data.shape\n",
    "    )\n",
    "    ampl = resid_smooth.get_by_pix((xp, yp))[0]\n",
    "    gs.xpos, gs.ypos = xp, yp\n",
    "    gs.fwhm = 10\n",
    "    gs.ampl = ampl\n",
    "\n",
    "    sh.thaw(gs.fwhm)\n",
    "    sh.thaw(gs.ampl)\n",
    "    sh.fit()\n",
    "\n",
    "    sh.thaw(gs.xpos)\n",
    "    sh.thaw(gs.ypos)\n",
    "    sh.fit()\n",
    "    sh.freeze(gs)\n",
    "\n",
    "    resid.data = sh.get_data_image().y - sh.get_model_image().y\n",
    "    resid_smooth = resid.smooth(width=6)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 2 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "resid_smooth.plot(add_cbar=True);"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Generating output table and Test Statistics estimation\n",
    "When adding a new source, one needs to check the significance of this new source. A frequently used method is the Test Statistics (TS). This is done by comparing the change of statistics when the source is included compared to the null hypothesis (no source ; in practice here we fix the amplitude to zero).\n",
    "\n",
    "$TS = Cstat(source) - Cstat(no source)$\n",
    "\n",
    "The criterion for a significant source detection is typically that it should improve the test statistic by at least 25 or 30. We have added only 3 sources to save time, but you should keep doing this till del(stat) is less than the required number."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/Users/jer/opt/miniconda3/envs/gammapy-dev/lib/python3.7/site-packages/sherpa/instrument.py:718: UserWarning: PSF Image does not have a pixel size. Sherpa will assume the pixel size is the sameas the data\n",
      "  warnings.warn(\"PSF Image does not have a pixel size. Sherpa will assume the pixel size is the same\"\n"
     ]
    }
   ],
   "source": [
    "from astropy.stats import gaussian_fwhm_to_sigma\n",
    "from astropy.table import Table\n",
    "\n",
    "rows = []\n",
    "for g in sources:\n",
    "    ampl = g.ampl.val\n",
    "    g.ampl = 0\n",
    "    stati = sh.get_stat_info()[0].statval\n",
    "    g.ampl = ampl\n",
    "    statf = sh.get_stat_info()[0].statval\n",
    "    delstat = stati - statf\n",
    "\n",
    "    geom = resid.geom\n",
    "    # sherpa uses 1 based indexing\n",
    "    coord = geom.pix_to_coord((g.xpos.val - 1, g.ypos.val - 1))\n",
    "    pix_scale = geom.pixel_scales.mean().deg\n",
    "    sigma = g.fwhm.val * pix_scale * gaussian_fwhm_to_sigma\n",
    "    rows.append(\n",
    "        dict(\n",
    "            delstat=delstat,\n",
    "            glon=coord[0].to_value(\"deg\"),\n",
    "            glat=coord[1].to_value(\"deg\"),\n",
    "            sigma=sigma,\n",
    "        )\n",
    "    )\n",
    "\n",
    "table = Table(rows=rows, names=rows[0])\n",
    "for name in table.colnames:\n",
    "    table[name].format = \".5g\""
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<i>Table length=3</i>\n",
       "<table id=\"table4660325288\" class=\"table-striped table-bordered table-condensed\">\n",
       "<thead><tr><th>delstat</th><th>glon</th><th>glat</th><th>sigma</th></tr></thead>\n",
       "<thead><tr><th>float64</th><th>float64</th><th>float64</th><th>float64</th></tr></thead>\n",
       "<tr><td>1792.3</td><td>0.2933</td><td>-0.10598</td><td>0.91255</td></tr>\n",
       "<tr><td>768.04</td><td>359.95</td><td>-0.051805</td><td>0.018761</td></tr>\n",
       "<tr><td>405.36</td><td>1.2678</td><td>-0.06064</td><td>0.30082</td></tr>\n",
       "</table>"
      ],
      "text/plain": [
       "<Table length=3>\n",
       "delstat   glon     glat    sigma  \n",
       "float64 float64  float64  float64 \n",
       "------- ------- --------- --------\n",
       " 1792.3  0.2933  -0.10598  0.91255\n",
       " 768.04  359.95 -0.051805 0.018761\n",
       " 405.36  1.2678  -0.06064  0.30082"
      ]
     },
     "execution_count": 22,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "table"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Exercises\n",
    "\n",
    "1. Keep adding sources till there are no more significant ones in the field. How many Gaussians do you need?\n",
    "2. Use other morphologies for the sources (eg: disk, shell) rather than only Gaussian.\n",
    "3. Compare the TS between different models"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### More about sherpa\n",
    "\n",
    "These are good resources to learn more about Sherpa:\n",
    "\n",
    "* https://python4astronomers.github.io/fitting/fitting.html\n",
    "* https://github.com/DougBurke/sherpa-standalone-notebooks\n",
    "\n",
    "You could read over the examples there, and try to apply a similar analysis to this dataset here to practice.\n",
    "\n",
    "If you want a deeper understanding of how Sherpa works, then these proceedings are good introductions:\n",
    "\n",
    "* http://conference.scipy.org/proceedings/scipy2009/paper_8/full_text.pdf\n",
    "* http://conference.scipy.org/proceedings/scipy2011/pdfs/brefsdal.pdf"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.7.0"
  },
  "nbsphinx": {
   "orphan": true
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
