{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "\n",
    "<script type=\"text/javascript\" src=\"../_static/linksdl.js\"></script>\n",
    "<div class='alert alert-info'>\n",
    "**This is a fixed-text formatted version of a Jupyter notebook.**\n",
    "\n",
    "- Try online [![Binder](https://mybinder.org/badge.svg)](https://mybinder.org/v2/gh/gammapy/gammapy-extra/master?urlpath=lab)\n",
    " and then double-click on **spectrum_pipe.ipynb** file.\n",
    "- You can also contribute with your own notebooks in this\n",
    "[GitHub repository](https://github.com/gammapy/gammapy-extra/tree/master/notebooks).\n",
    "- **Source files:**\n",
    "[spectrum_pipe.ipynb](../_static/notebooks/spectrum_pipe.ipynb) |\n",
    "[spectrum_pipe.py](../_static/notebooks/spectrum_pipe.py)\n",
    "</div>\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Spectrum analysis with Gammapy (run pipeline)\n",
    "\n",
    "In this tutorial we will learn how to perform a 1d spectral analysis.\n",
    "\n",
    "We will use a \"pipeline\" or \"workflow\" class to run a standard analysis. If you're interested in implementation detail of the analysis in order to create a custom analysis class, you should read ([spectrum_analysis.ipynb](spectrum_analysis.ipynb)) that executes the analysis using lower-level classes and methods in Gammapy. \n",
    "\n",
    "In this tutorial we will use the folling Gammapy classes:\n",
    "\n",
    "- [gammapy.data.DataStore](..\/api/gammapy.data.DataStore.rst) to load the data to \n",
    "- [gammapy.scripts.SpectrumAnalysisIACT](..\/api/gammapy.scripts.SpectrumAnalysisIACT.rst) to run the analysis\n",
    "\n",
    "We use 4 Crab observations from H.E.S.S. for testing."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Setup\n",
    "\n",
    "As usual, we'll start with some setup for the notebook, and import the functionality we need."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [],
   "source": [
    "%matplotlib inline\n",
    "import numpy as np\n",
    "import matplotlib.pyplot as plt\n",
    "\n",
    "from gammapy.data import DataStore\n",
    "from gammapy.scripts import SpectrumAnalysisIACT\n",
    "from gammapy.catalog import SourceCatalogGammaCat\n",
    "\n",
    "# Convenience classes to define analsys inputs\n",
    "# At some point we'll add a convenience layer to run the analysis starting from a plain text config file.\n",
    "from gammapy.utils.energy import EnergyBounds\n",
    "from gammapy.maps import Map\n",
    "from gammapy.spectrum import models\n",
    "from regions import CircleSkyRegion\n",
    "from astropy.coordinates import SkyCoord\n",
    "import astropy.units as u"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Select data\n",
    "\n",
    "First, we select and load some H.E.S.S. data (simulated events for now). In real life you would do something fancy here, or just use the list of observations someone send you (and hope they have done something fancy before). We'll just use the standard gammapy 4 crab runs."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Use observations [23523 23526 23559 23592]\n"
     ]
    }
   ],
   "source": [
    "# TODO: Replace with public data release\n",
    "store_dir = '$GAMMAPY_EXTRA/datasets/hess-crab4-hd-hap-prod2'\n",
    "data_store = DataStore.from_dir(store_dir)\n",
    "obs_id = data_store.obs_table['OBS_ID'].data\n",
    "print(\"Use observations {}\".format(obs_id))\n",
    "\n",
    "obs_list = data_store.obs_list(obs_id)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Configure the analysis\n",
    "\n",
    "Now we'll define the input for the spectrum analysis. It will be done the python way, i.e. by creating a config dict containing python objects. We plan to add also the convenience to configure the analysis using a plain text config file."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {},
   "outputs": [],
   "source": [
    "crab_pos = SkyCoord.from_name('crab')\n",
    "on_region = CircleSkyRegion(crab_pos, 0.15 * u.deg)\n",
    "\n",
    "model = models.LogParabola(\n",
    "    alpha = 2.3,\n",
    "    beta = 0.01,\n",
    "    amplitude = 1e-11 * u.Unit('cm-2 s-1 TeV-1'),\n",
    "    reference = 1 * u.TeV,\n",
    ")\n",
    "\n",
    "flux_point_binning = EnergyBounds.equal_log_spacing(0.7, 30, 5, u.TeV)\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(<matplotlib.figure.Figure at 0x7f5d9bea0e80>,\n",
       " <matplotlib.axes._subplots.WCSAxesSubplot at 0x7f5d9beaacc0>,\n",
       " None)"
      ]
     },
     "execution_count": 4,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<matplotlib.figure.Figure at 0x7f5d9bea0e80>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "exclusion_mask = Map.create(skydir=crab_pos, width=(10, 10), binsz=0.02)\n",
    "\n",
    "gammacat = SourceCatalogGammaCat()\n",
    "\n",
    "regions = []\n",
    "for source in gammacat:\n",
    "    if not exclusion_mask.geom.contains(source.position):\n",
    "        continue\n",
    "    region = CircleSkyRegion(source.position, 0.15 * u.deg)\n",
    "    regions.append(region)\n",
    "    \n",
    "exclusion_mask.data = exclusion_mask.geom.region_mask(regions, inside=False)\n",
    "exclusion_mask.plot()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {},
   "outputs": [],
   "source": [
    "config = dict(\n",
    "    outdir = None,\n",
    "    background = dict(\n",
    "        on_region=on_region,\n",
    "        exclusion_mask=exclusion_mask,\n",
    "        min_distance = 0.1 * u.rad,\n",
    "    ),\n",
    "    extraction = dict(containment_correction=False),\n",
    "    fit = dict(\n",
    "        model=model,\n",
    "        stat='wstat',\n",
    "        forward_folded=True,\n",
    "        fit_range = flux_point_binning[[0, -1]]\n",
    "    ),\n",
    "    fp_binning=flux_point_binning\n",
    ")"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Run the analysis\n",
    "\n",
    "TODO: Clean up the log (partly done, get rid of remaining useless warnings)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<hr>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "\n",
       "        <table>\n",
       "            <tr>\n",
       "                <td title=\"Minimum value of function\">FCN = 119.85754664835397</td>\n",
       "                <td title=\"Total number of call to FCN so far\">TOTAL NCALL = 101</td>\n",
       "                <td title=\"Number of call in last migrad\">NCALLS = 101</td>\n",
       "            </tr>\n",
       "            <tr>\n",
       "                <td title=\"Estimated distance to minimum\">EDM = 1.7630785871447516e-05</td>\n",
       "                <td title=\"Maximum EDM definition of convergence\">GOAL EDM = 1e-05</td>\n",
       "                <td title=\"Error def. Amount of increase in FCN to be defined as 1 standard deviation\">\n",
       "                UP = 1.0</td>\n",
       "            </tr>\n",
       "        </table>\n",
       "        \n",
       "        <table>\n",
       "            <tr>\n",
       "                <td align=\"center\" title=\"Validity of the migrad call\">Valid</td>\n",
       "                <td align=\"center\" title=\"Validity of parameters\">Valid Param</td>\n",
       "                <td align=\"center\" title=\"Is Covariance matrix accurate?\">Accurate Covar</td>\n",
       "                <td align=\"center\" title=\"Positive definiteness of covariance matrix\">PosDef</td>\n",
       "                <td align=\"center\" title=\"Was covariance matrix made posdef by adding diagonal element\">Made PosDef</td>\n",
       "            </tr>\n",
       "            <tr>\n",
       "                <td align=\"center\" style=\"background-color:#92CCA6\">True</td>\n",
       "                <td align=\"center\" style=\"background-color:#92CCA6\">True</td>\n",
       "                <td align=\"center\" style=\"background-color:#92CCA6\">True</td>\n",
       "                <td align=\"center\" style=\"background-color:#92CCA6\">True</td>\n",
       "                <td align=\"center\" style=\"background-color:#92CCA6\">False</td>\n",
       "            </tr>\n",
       "            <tr>\n",
       "                <td align=\"center\" title=\"Was last hesse call fail?\">Hesse Fail</td>\n",
       "                <td align=\"center\" title=\"Validity of covariance\">HasCov</td>\n",
       "                <td align=\"center\" title=\"Is EDM above goal EDM?\">Above EDM</td>\n",
       "                <td align=\"center\"></td>\n",
       "                <td align=\"center\" title=\"Did last migrad call reach max call limit?\">Reach calllim</td>\n",
       "            </tr>\n",
       "            <tr>\n",
       "                <td align=\"center\" style=\"background-color:#92CCA6\">False</td>\n",
       "                <td align=\"center\" style=\"background-color:#92CCA6\">True</td>\n",
       "                <td align=\"center\" style=\"background-color:#92CCA6\">False</td>\n",
       "                <td align=\"center\"></td>\n",
       "                <td align=\"center\" style=\"background-color:#92CCA6\">False</td>\n",
       "            </tr>\n",
       "        </table>\n",
       "        "
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "\n",
       "        <table>\n",
       "            <tr>\n",
       "                <td><a href=\"#\" onclick=\"$('#wVwgaHzcqY').toggle()\">+</a></td>\n",
       "                <td title=\"Variable name\">Name</td>\n",
       "                <td title=\"Value of parameter\">Value</td>\n",
       "                <td title=\"Parabolic error\">Parab Error</td>\n",
       "                <td title=\"Minos lower error\">Minos Error-</td>\n",
       "                <td title=\"Minos upper error\">Minos Error+</td>\n",
       "                <td title=\"Lower limit of the parameter\">Limit-</td>\n",
       "                <td title=\"Upper limit of the parameter\">Limit+</td>\n",
       "                <td title=\"Is the parameter fixed in the fit\">FIXED</td>\n",
       "            </tr>\n",
       "        \n",
       "            <tr>\n",
       "                <td>1</td>\n",
       "                <td>par_000_amplitude</td>\n",
       "                <td>2.37657</td>\n",
       "                <td>0.179911</td>\n",
       "                <td>0</td>\n",
       "                <td>0</td>\n",
       "                <td></td>\n",
       "                <td></td>\n",
       "                <td></td>\n",
       "            </tr>\n",
       "            \n",
       "            <tr>\n",
       "                <td>2</td>\n",
       "                <td>par_001_reference</td>\n",
       "                <td>1</td>\n",
       "                <td>1</td>\n",
       "                <td>0</td>\n",
       "                <td>0</td>\n",
       "                <td></td>\n",
       "                <td></td>\n",
       "                <td>FIXED</td>\n",
       "            </tr>\n",
       "            \n",
       "            <tr>\n",
       "                <td>3</td>\n",
       "                <td>par_002_alpha</td>\n",
       "                <td>1.89622</td>\n",
       "                <td>0.175254</td>\n",
       "                <td>0</td>\n",
       "                <td>0</td>\n",
       "                <td></td>\n",
       "                <td></td>\n",
       "                <td></td>\n",
       "            </tr>\n",
       "            \n",
       "            <tr>\n",
       "                <td>4</td>\n",
       "                <td>par_003_beta</td>\n",
       "                <td>18.0115</td>\n",
       "                <td>7.76092</td>\n",
       "                <td>0</td>\n",
       "                <td>0</td>\n",
       "                <td></td>\n",
       "                <td></td>\n",
       "                <td></td>\n",
       "            </tr>\n",
       "            \n",
       "            </table>\n",
       "        \n",
       "            <pre id=\"wVwgaHzcqY\" style=\"display:none;\">\n",
       "            <textarea rows=\"14\" cols=\"50\" onclick=\"this.select()\" readonly>\\begin{tabular}{|c|r|r|r|r|r|r|r|c|}\n",
       "\\hline\n",
       " & Name & Value & Para Error & Error+ & Error- & Limit+ & Limit- & FIXED\\\\\n",
       "\\hline\n",
       "1 & par $000_{amplitude}$ & 2.377e+00 & 1.799e-01 &  &  &  &  & \\\\\n",
       "\\hline\n",
       "2 & par $001_{reference}$ & 1.000e+00 & 1.000e+00 &  &  &  &  & FIXED\\\\\n",
       "\\hline\n",
       "3 & par $002_{\\alpha}$ & 1.896e+00 & 1.753e-01 &  &  &  &  & \\\\\n",
       "\\hline\n",
       "4 & par $003_{\\beta}$ & 1.801e+01 & 7.761e+00 &  &  &  &  & \\\\\n",
       "\\hline\n",
       "\\end{tabular}</textarea>\n",
       "            </pre>\n",
       "            "
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<hr>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<hr>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "\n",
       "        <table>\n",
       "            <tr>\n",
       "                <td title=\"Minimum value of function\">FCN = 30.738342467874656</td>\n",
       "                <td title=\"Total number of call to FCN so far\">TOTAL NCALL = 15</td>\n",
       "                <td title=\"Number of call in last migrad\">NCALLS = 15</td>\n",
       "            </tr>\n",
       "            <tr>\n",
       "                <td title=\"Estimated distance to minimum\">EDM = 6.556504937733939e-06</td>\n",
       "                <td title=\"Maximum EDM definition of convergence\">GOAL EDM = 1e-05</td>\n",
       "                <td title=\"Error def. Amount of increase in FCN to be defined as 1 standard deviation\">\n",
       "                UP = 1.0</td>\n",
       "            </tr>\n",
       "        </table>\n",
       "        \n",
       "        <table>\n",
       "            <tr>\n",
       "                <td align=\"center\" title=\"Validity of the migrad call\">Valid</td>\n",
       "                <td align=\"center\" title=\"Validity of parameters\">Valid Param</td>\n",
       "                <td align=\"center\" title=\"Is Covariance matrix accurate?\">Accurate Covar</td>\n",
       "                <td align=\"center\" title=\"Positive definiteness of covariance matrix\">PosDef</td>\n",
       "                <td align=\"center\" title=\"Was covariance matrix made posdef by adding diagonal element\">Made PosDef</td>\n",
       "            </tr>\n",
       "            <tr>\n",
       "                <td align=\"center\" style=\"background-color:#92CCA6\">True</td>\n",
       "                <td align=\"center\" style=\"background-color:#92CCA6\">True</td>\n",
       "                <td align=\"center\" style=\"background-color:#92CCA6\">True</td>\n",
       "                <td align=\"center\" style=\"background-color:#92CCA6\">True</td>\n",
       "                <td align=\"center\" style=\"background-color:#92CCA6\">False</td>\n",
       "            </tr>\n",
       "            <tr>\n",
       "                <td align=\"center\" title=\"Was last hesse call fail?\">Hesse Fail</td>\n",
       "                <td align=\"center\" title=\"Validity of covariance\">HasCov</td>\n",
       "                <td align=\"center\" title=\"Is EDM above goal EDM?\">Above EDM</td>\n",
       "                <td align=\"center\"></td>\n",
       "                <td align=\"center\" title=\"Did last migrad call reach max call limit?\">Reach calllim</td>\n",
       "            </tr>\n",
       "            <tr>\n",
       "                <td align=\"center\" style=\"background-color:#92CCA6\">False</td>\n",
       "                <td align=\"center\" style=\"background-color:#92CCA6\">True</td>\n",
       "                <td align=\"center\" style=\"background-color:#92CCA6\">False</td>\n",
       "                <td align=\"center\"></td>\n",
       "                <td align=\"center\" style=\"background-color:#92CCA6\">False</td>\n",
       "            </tr>\n",
       "        </table>\n",
       "        "
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "\n",
       "        <table>\n",
       "            <tr>\n",
       "                <td><a href=\"#\" onclick=\"$('#XsbmnGOJHQ').toggle()\">+</a></td>\n",
       "                <td title=\"Variable name\">Name</td>\n",
       "                <td title=\"Value of parameter\">Value</td>\n",
       "                <td title=\"Parabolic error\">Parab Error</td>\n",
       "                <td title=\"Minos lower error\">Minos Error-</td>\n",
       "                <td title=\"Minos upper error\">Minos Error+</td>\n",
       "                <td title=\"Lower limit of the parameter\">Limit-</td>\n",
       "                <td title=\"Upper limit of the parameter\">Limit+</td>\n",
       "                <td title=\"Is the parameter fixed in the fit\">FIXED</td>\n",
       "            </tr>\n",
       "        \n",
       "            <tr>\n",
       "                <td>1</td>\n",
       "                <td>par_000_amplitude</td>\n",
       "                <td>2.34491</td>\n",
       "                <td>0.155248</td>\n",
       "                <td>0</td>\n",
       "                <td>0</td>\n",
       "                <td></td>\n",
       "                <td></td>\n",
       "                <td></td>\n",
       "            </tr>\n",
       "            \n",
       "            <tr>\n",
       "                <td>2</td>\n",
       "                <td>par_001_reference</td>\n",
       "                <td>1</td>\n",
       "                <td>0</td>\n",
       "                <td>0</td>\n",
       "                <td>0</td>\n",
       "                <td></td>\n",
       "                <td></td>\n",
       "                <td>FIXED</td>\n",
       "            </tr>\n",
       "            \n",
       "            <tr>\n",
       "                <td>3</td>\n",
       "                <td>par_002_alpha</td>\n",
       "                <td>1.89622</td>\n",
       "                <td>0.175254</td>\n",
       "                <td>0</td>\n",
       "                <td>0</td>\n",
       "                <td></td>\n",
       "                <td></td>\n",
       "                <td>FIXED</td>\n",
       "            </tr>\n",
       "            \n",
       "            <tr>\n",
       "                <td>4</td>\n",
       "                <td>par_003_beta</td>\n",
       "                <td>18.0115</td>\n",
       "                <td>0.0776092</td>\n",
       "                <td>0</td>\n",
       "                <td>0</td>\n",
       "                <td></td>\n",
       "                <td></td>\n",
       "                <td>FIXED</td>\n",
       "            </tr>\n",
       "            \n",
       "            </table>\n",
       "        \n",
       "            <pre id=\"XsbmnGOJHQ\" style=\"display:none;\">\n",
       "            <textarea rows=\"14\" cols=\"50\" onclick=\"this.select()\" readonly>\\begin{tabular}{|c|r|r|r|r|r|r|r|c|}\n",
       "\\hline\n",
       " & Name & Value & Para Error & Error+ & Error- & Limit+ & Limit- & FIXED\\\\\n",
       "\\hline\n",
       "1 & par $000_{amplitude}$ & 2.345e+00 & 1.552e-01 &  &  &  &  & \\\\\n",
       "\\hline\n",
       "2 & par $001_{reference}$ & 1.000e+00 & 0.000e+00 &  &  &  &  & FIXED\\\\\n",
       "\\hline\n",
       "3 & par $002_{\\alpha}$ & 1.896e+00 & 1.753e-01 &  &  &  &  & FIXED\\\\\n",
       "\\hline\n",
       "4 & par $003_{\\beta}$ & 1.801e+01 & 7.761e-02 &  &  &  &  & FIXED\\\\\n",
       "\\hline\n",
       "\\end{tabular}</textarea>\n",
       "            </pre>\n",
       "            "
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<hr>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<hr>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "\n",
       "        <table>\n",
       "            <tr>\n",
       "                <td title=\"Minimum value of function\">FCN = 16.8566467249511</td>\n",
       "                <td title=\"Total number of call to FCN so far\">TOTAL NCALL = 54</td>\n",
       "                <td title=\"Number of call in last migrad\">NCALLS = 54</td>\n",
       "            </tr>\n",
       "            <tr>\n",
       "                <td title=\"Estimated distance to minimum\">EDM = 4.561852147042846e-08</td>\n",
       "                <td title=\"Maximum EDM definition of convergence\">GOAL EDM = 1e-05</td>\n",
       "                <td title=\"Error def. Amount of increase in FCN to be defined as 1 standard deviation\">\n",
       "                UP = 1.0</td>\n",
       "            </tr>\n",
       "        </table>\n",
       "        \n",
       "        <table>\n",
       "            <tr>\n",
       "                <td align=\"center\" title=\"Validity of the migrad call\">Valid</td>\n",
       "                <td align=\"center\" title=\"Validity of parameters\">Valid Param</td>\n",
       "                <td align=\"center\" title=\"Is Covariance matrix accurate?\">Accurate Covar</td>\n",
       "                <td align=\"center\" title=\"Positive definiteness of covariance matrix\">PosDef</td>\n",
       "                <td align=\"center\" title=\"Was covariance matrix made posdef by adding diagonal element\">Made PosDef</td>\n",
       "            </tr>\n",
       "            <tr>\n",
       "                <td align=\"center\" style=\"background-color:#92CCA6\">True</td>\n",
       "                <td align=\"center\" style=\"background-color:#92CCA6\">True</td>\n",
       "                <td align=\"center\" style=\"background-color:#92CCA6\">True</td>\n",
       "                <td align=\"center\" style=\"background-color:#92CCA6\">True</td>\n",
       "                <td align=\"center\" style=\"background-color:#92CCA6\">False</td>\n",
       "            </tr>\n",
       "            <tr>\n",
       "                <td align=\"center\" title=\"Was last hesse call fail?\">Hesse Fail</td>\n",
       "                <td align=\"center\" title=\"Validity of covariance\">HasCov</td>\n",
       "                <td align=\"center\" title=\"Is EDM above goal EDM?\">Above EDM</td>\n",
       "                <td align=\"center\"></td>\n",
       "                <td align=\"center\" title=\"Did last migrad call reach max call limit?\">Reach calllim</td>\n",
       "            </tr>\n",
       "            <tr>\n",
       "                <td align=\"center\" style=\"background-color:#92CCA6\">False</td>\n",
       "                <td align=\"center\" style=\"background-color:#92CCA6\">True</td>\n",
       "                <td align=\"center\" style=\"background-color:#92CCA6\">False</td>\n",
       "                <td align=\"center\"></td>\n",
       "                <td align=\"center\" style=\"background-color:#92CCA6\">False</td>\n",
       "            </tr>\n",
       "        </table>\n",
       "        "
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "\n",
       "        <table>\n",
       "            <tr>\n",
       "                <td><a href=\"#\" onclick=\"$('#WBBwvvlbvA').toggle()\">+</a></td>\n",
       "                <td title=\"Variable name\">Name</td>\n",
       "                <td title=\"Value of parameter\">Value</td>\n",
       "                <td title=\"Parabolic error\">Parab Error</td>\n",
       "                <td title=\"Minos lower error\">Minos Error-</td>\n",
       "                <td title=\"Minos upper error\">Minos Error+</td>\n",
       "                <td title=\"Lower limit of the parameter\">Limit-</td>\n",
       "                <td title=\"Upper limit of the parameter\">Limit+</td>\n",
       "                <td title=\"Is the parameter fixed in the fit\">FIXED</td>\n",
       "            </tr>\n",
       "        \n",
       "            <tr>\n",
       "                <td>1</td>\n",
       "                <td>par_000_amplitude</td>\n",
       "                <td>0.528095</td>\n",
       "                <td>0.042299</td>\n",
       "                <td>0</td>\n",
       "                <td>0</td>\n",
       "                <td></td>\n",
       "                <td></td>\n",
       "                <td></td>\n",
       "            </tr>\n",
       "            \n",
       "            <tr>\n",
       "                <td>2</td>\n",
       "                <td>par_001_reference</td>\n",
       "                <td>2.15443</td>\n",
       "                <td>0</td>\n",
       "                <td>0</td>\n",
       "                <td>0</td>\n",
       "                <td></td>\n",
       "                <td></td>\n",
       "                <td>FIXED</td>\n",
       "            </tr>\n",
       "            \n",
       "            <tr>\n",
       "                <td>3</td>\n",
       "                <td>par_002_alpha</td>\n",
       "                <td>1.89622</td>\n",
       "                <td>0.175254</td>\n",
       "                <td>0</td>\n",
       "                <td>0</td>\n",
       "                <td></td>\n",
       "                <td></td>\n",
       "                <td>FIXED</td>\n",
       "            </tr>\n",
       "            \n",
       "            <tr>\n",
       "                <td>4</td>\n",
       "                <td>par_003_beta</td>\n",
       "                <td>18.0115</td>\n",
       "                <td>0.0776092</td>\n",
       "                <td>0</td>\n",
       "                <td>0</td>\n",
       "                <td></td>\n",
       "                <td></td>\n",
       "                <td>FIXED</td>\n",
       "            </tr>\n",
       "            \n",
       "            </table>\n",
       "        \n",
       "            <pre id=\"WBBwvvlbvA\" style=\"display:none;\">\n",
       "            <textarea rows=\"14\" cols=\"50\" onclick=\"this.select()\" readonly>\\begin{tabular}{|c|r|r|r|r|r|r|r|c|}\n",
       "\\hline\n",
       " & Name & Value & Para Error & Error+ & Error- & Limit+ & Limit- & FIXED\\\\\n",
       "\\hline\n",
       "1 & par $000_{amplitude}$ & 5.281e-01 & 4.230e-02 &  &  &  &  & \\\\\n",
       "\\hline\n",
       "2 & par $001_{reference}$ & 2.154e+00 & 0.000e+00 &  &  &  &  & FIXED\\\\\n",
       "\\hline\n",
       "3 & par $002_{\\alpha}$ & 1.896e+00 & 1.753e-01 &  &  &  &  & FIXED\\\\\n",
       "\\hline\n",
       "4 & par $003_{\\beta}$ & 1.801e+01 & 7.761e-02 &  &  &  &  & FIXED\\\\\n",
       "\\hline\n",
       "\\end{tabular}</textarea>\n",
       "            </pre>\n",
       "            "
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<hr>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<hr>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "\n",
       "        <table>\n",
       "            <tr>\n",
       "                <td title=\"Minimum value of function\">FCN = 22.357275190972253</td>\n",
       "                <td title=\"Total number of call to FCN so far\">TOTAL NCALL = 39</td>\n",
       "                <td title=\"Number of call in last migrad\">NCALLS = 39</td>\n",
       "            </tr>\n",
       "            <tr>\n",
       "                <td title=\"Estimated distance to minimum\">EDM = 6.716359745559398e-12</td>\n",
       "                <td title=\"Maximum EDM definition of convergence\">GOAL EDM = 1e-05</td>\n",
       "                <td title=\"Error def. Amount of increase in FCN to be defined as 1 standard deviation\">\n",
       "                UP = 1.0</td>\n",
       "            </tr>\n",
       "        </table>\n",
       "        \n",
       "        <table>\n",
       "            <tr>\n",
       "                <td align=\"center\" title=\"Validity of the migrad call\">Valid</td>\n",
       "                <td align=\"center\" title=\"Validity of parameters\">Valid Param</td>\n",
       "                <td align=\"center\" title=\"Is Covariance matrix accurate?\">Accurate Covar</td>\n",
       "                <td align=\"center\" title=\"Positive definiteness of covariance matrix\">PosDef</td>\n",
       "                <td align=\"center\" title=\"Was covariance matrix made posdef by adding diagonal element\">Made PosDef</td>\n",
       "            </tr>\n",
       "            <tr>\n",
       "                <td align=\"center\" style=\"background-color:#92CCA6\">True</td>\n",
       "                <td align=\"center\" style=\"background-color:#92CCA6\">True</td>\n",
       "                <td align=\"center\" style=\"background-color:#92CCA6\">True</td>\n",
       "                <td align=\"center\" style=\"background-color:#92CCA6\">True</td>\n",
       "                <td align=\"center\" style=\"background-color:#92CCA6\">False</td>\n",
       "            </tr>\n",
       "            <tr>\n",
       "                <td align=\"center\" title=\"Was last hesse call fail?\">Hesse Fail</td>\n",
       "                <td align=\"center\" title=\"Validity of covariance\">HasCov</td>\n",
       "                <td align=\"center\" title=\"Is EDM above goal EDM?\">Above EDM</td>\n",
       "                <td align=\"center\"></td>\n",
       "                <td align=\"center\" title=\"Did last migrad call reach max call limit?\">Reach calllim</td>\n",
       "            </tr>\n",
       "            <tr>\n",
       "                <td align=\"center\" style=\"background-color:#92CCA6\">False</td>\n",
       "                <td align=\"center\" style=\"background-color:#92CCA6\">True</td>\n",
       "                <td align=\"center\" style=\"background-color:#92CCA6\">False</td>\n",
       "                <td align=\"center\"></td>\n",
       "                <td align=\"center\" style=\"background-color:#92CCA6\">False</td>\n",
       "            </tr>\n",
       "        </table>\n",
       "        "
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "\n",
       "        <table>\n",
       "            <tr>\n",
       "                <td><a href=\"#\" onclick=\"$('#OhDIxTucLD').toggle()\">+</a></td>\n",
       "                <td title=\"Variable name\">Name</td>\n",
       "                <td title=\"Value of parameter\">Value</td>\n",
       "                <td title=\"Parabolic error\">Parab Error</td>\n",
       "                <td title=\"Minos lower error\">Minos Error-</td>\n",
       "                <td title=\"Minos upper error\">Minos Error+</td>\n",
       "                <td title=\"Lower limit of the parameter\">Limit-</td>\n",
       "                <td title=\"Upper limit of the parameter\">Limit+</td>\n",
       "                <td title=\"Is the parameter fixed in the fit\">FIXED</td>\n",
       "            </tr>\n",
       "        \n",
       "            <tr>\n",
       "                <td>1</td>\n",
       "                <td>par_000_amplitude</td>\n",
       "                <td>0.0855578</td>\n",
       "                <td>0.010069</td>\n",
       "                <td>0</td>\n",
       "                <td>0</td>\n",
       "                <td></td>\n",
       "                <td></td>\n",
       "                <td></td>\n",
       "            </tr>\n",
       "            \n",
       "            <tr>\n",
       "                <td>2</td>\n",
       "                <td>par_001_reference</td>\n",
       "                <td>4.64159</td>\n",
       "                <td>0</td>\n",
       "                <td>0</td>\n",
       "                <td>0</td>\n",
       "                <td></td>\n",
       "                <td></td>\n",
       "                <td>FIXED</td>\n",
       "            </tr>\n",
       "            \n",
       "            <tr>\n",
       "                <td>3</td>\n",
       "                <td>par_002_alpha</td>\n",
       "                <td>1.89622</td>\n",
       "                <td>0.175254</td>\n",
       "                <td>0</td>\n",
       "                <td>0</td>\n",
       "                <td></td>\n",
       "                <td></td>\n",
       "                <td>FIXED</td>\n",
       "            </tr>\n",
       "            \n",
       "            <tr>\n",
       "                <td>4</td>\n",
       "                <td>par_003_beta</td>\n",
       "                <td>18.0115</td>\n",
       "                <td>0.0776092</td>\n",
       "                <td>0</td>\n",
       "                <td>0</td>\n",
       "                <td></td>\n",
       "                <td></td>\n",
       "                <td>FIXED</td>\n",
       "            </tr>\n",
       "            \n",
       "            </table>\n",
       "        \n",
       "            <pre id=\"OhDIxTucLD\" style=\"display:none;\">\n",
       "            <textarea rows=\"14\" cols=\"50\" onclick=\"this.select()\" readonly>\\begin{tabular}{|c|r|r|r|r|r|r|r|c|}\n",
       "\\hline\n",
       " & Name & Value & Para Error & Error+ & Error- & Limit+ & Limit- & FIXED\\\\\n",
       "\\hline\n",
       "1 & par $000_{amplitude}$ & 8.556e-02 & 1.007e-02 &  &  &  &  & \\\\\n",
       "\\hline\n",
       "2 & par $001_{reference}$ & 4.642e+00 & 0.000e+00 &  &  &  &  & FIXED\\\\\n",
       "\\hline\n",
       "3 & par $002_{\\alpha}$ & 1.896e+00 & 1.753e-01 &  &  &  &  & FIXED\\\\\n",
       "\\hline\n",
       "4 & par $003_{\\beta}$ & 1.801e+01 & 7.761e-02 &  &  &  &  & FIXED\\\\\n",
       "\\hline\n",
       "\\end{tabular}</textarea>\n",
       "            </pre>\n",
       "            "
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<hr>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<hr>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "\n",
       "        <table>\n",
       "            <tr>\n",
       "                <td title=\"Minimum value of function\">FCN = 36.56613526646676</td>\n",
       "                <td title=\"Total number of call to FCN so far\">TOTAL NCALL = 63</td>\n",
       "                <td title=\"Number of call in last migrad\">NCALLS = 63</td>\n",
       "            </tr>\n",
       "            <tr>\n",
       "                <td title=\"Estimated distance to minimum\">EDM = 4.22446250169494e-08</td>\n",
       "                <td title=\"Maximum EDM definition of convergence\">GOAL EDM = 1e-05</td>\n",
       "                <td title=\"Error def. Amount of increase in FCN to be defined as 1 standard deviation\">\n",
       "                UP = 1.0</td>\n",
       "            </tr>\n",
       "        </table>\n",
       "        \n",
       "        <table>\n",
       "            <tr>\n",
       "                <td align=\"center\" title=\"Validity of the migrad call\">Valid</td>\n",
       "                <td align=\"center\" title=\"Validity of parameters\">Valid Param</td>\n",
       "                <td align=\"center\" title=\"Is Covariance matrix accurate?\">Accurate Covar</td>\n",
       "                <td align=\"center\" title=\"Positive definiteness of covariance matrix\">PosDef</td>\n",
       "                <td align=\"center\" title=\"Was covariance matrix made posdef by adding diagonal element\">Made PosDef</td>\n",
       "            </tr>\n",
       "            <tr>\n",
       "                <td align=\"center\" style=\"background-color:#92CCA6\">True</td>\n",
       "                <td align=\"center\" style=\"background-color:#92CCA6\">True</td>\n",
       "                <td align=\"center\" style=\"background-color:#92CCA6\">True</td>\n",
       "                <td align=\"center\" style=\"background-color:#92CCA6\">True</td>\n",
       "                <td align=\"center\" style=\"background-color:#92CCA6\">False</td>\n",
       "            </tr>\n",
       "            <tr>\n",
       "                <td align=\"center\" title=\"Was last hesse call fail?\">Hesse Fail</td>\n",
       "                <td align=\"center\" title=\"Validity of covariance\">HasCov</td>\n",
       "                <td align=\"center\" title=\"Is EDM above goal EDM?\">Above EDM</td>\n",
       "                <td align=\"center\"></td>\n",
       "                <td align=\"center\" title=\"Did last migrad call reach max call limit?\">Reach calllim</td>\n",
       "            </tr>\n",
       "            <tr>\n",
       "                <td align=\"center\" style=\"background-color:#92CCA6\">False</td>\n",
       "                <td align=\"center\" style=\"background-color:#92CCA6\">True</td>\n",
       "                <td align=\"center\" style=\"background-color:#92CCA6\">False</td>\n",
       "                <td align=\"center\"></td>\n",
       "                <td align=\"center\" style=\"background-color:#92CCA6\">False</td>\n",
       "            </tr>\n",
       "        </table>\n",
       "        "
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "\n",
       "        <table>\n",
       "            <tr>\n",
       "                <td><a href=\"#\" onclick=\"$('#zKiOyfuUDh').toggle()\">+</a></td>\n",
       "                <td title=\"Variable name\">Name</td>\n",
       "                <td title=\"Value of parameter\">Value</td>\n",
       "                <td title=\"Parabolic error\">Parab Error</td>\n",
       "                <td title=\"Minos lower error\">Minos Error-</td>\n",
       "                <td title=\"Minos upper error\">Minos Error+</td>\n",
       "                <td title=\"Lower limit of the parameter\">Limit-</td>\n",
       "                <td title=\"Upper limit of the parameter\">Limit+</td>\n",
       "                <td title=\"Is the parameter fixed in the fit\">FIXED</td>\n",
       "            </tr>\n",
       "        \n",
       "            <tr>\n",
       "                <td>1</td>\n",
       "                <td>par_000_amplitude</td>\n",
       "                <td>0.0100715</td>\n",
       "                <td>0.00219544</td>\n",
       "                <td>0</td>\n",
       "                <td>0</td>\n",
       "                <td></td>\n",
       "                <td></td>\n",
       "                <td></td>\n",
       "            </tr>\n",
       "            \n",
       "            <tr>\n",
       "                <td>2</td>\n",
       "                <td>par_001_reference</td>\n",
       "                <td>10</td>\n",
       "                <td>0</td>\n",
       "                <td>0</td>\n",
       "                <td>0</td>\n",
       "                <td></td>\n",
       "                <td></td>\n",
       "                <td>FIXED</td>\n",
       "            </tr>\n",
       "            \n",
       "            <tr>\n",
       "                <td>3</td>\n",
       "                <td>par_002_alpha</td>\n",
       "                <td>1.89622</td>\n",
       "                <td>0.175254</td>\n",
       "                <td>0</td>\n",
       "                <td>0</td>\n",
       "                <td></td>\n",
       "                <td></td>\n",
       "                <td>FIXED</td>\n",
       "            </tr>\n",
       "            \n",
       "            <tr>\n",
       "                <td>4</td>\n",
       "                <td>par_003_beta</td>\n",
       "                <td>18.0115</td>\n",
       "                <td>0.0776092</td>\n",
       "                <td>0</td>\n",
       "                <td>0</td>\n",
       "                <td></td>\n",
       "                <td></td>\n",
       "                <td>FIXED</td>\n",
       "            </tr>\n",
       "            \n",
       "            </table>\n",
       "        \n",
       "            <pre id=\"zKiOyfuUDh\" style=\"display:none;\">\n",
       "            <textarea rows=\"14\" cols=\"50\" onclick=\"this.select()\" readonly>\\begin{tabular}{|c|r|r|r|r|r|r|r|c|}\n",
       "\\hline\n",
       " & Name & Value & Para Error & Error+ & Error- & Limit+ & Limit- & FIXED\\\\\n",
       "\\hline\n",
       "1 & par $000_{amplitude}$ & 1.007e-02 & 2.195e-03 &  &  &  &  & \\\\\n",
       "\\hline\n",
       "2 & par $001_{reference}$ & 1.000e+01 & 0.000e+00 &  &  &  &  & FIXED\\\\\n",
       "\\hline\n",
       "3 & par $002_{\\alpha}$ & 1.896e+00 & 1.753e-01 &  &  &  &  & FIXED\\\\\n",
       "\\hline\n",
       "4 & par $003_{\\beta}$ & 1.801e+01 & 7.761e-02 &  &  &  &  & FIXED\\\\\n",
       "\\hline\n",
       "\\end{tabular}</textarea>\n",
       "            </pre>\n",
       "            "
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<hr>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<hr>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "\n",
       "        <table>\n",
       "            <tr>\n",
       "                <td title=\"Minimum value of function\">FCN = 16.19379695206349</td>\n",
       "                <td title=\"Total number of call to FCN so far\">TOTAL NCALL = 76</td>\n",
       "                <td title=\"Number of call in last migrad\">NCALLS = 76</td>\n",
       "            </tr>\n",
       "            <tr>\n",
       "                <td title=\"Estimated distance to minimum\">EDM = 4.084427143910815e-10</td>\n",
       "                <td title=\"Maximum EDM definition of convergence\">GOAL EDM = 1e-05</td>\n",
       "                <td title=\"Error def. Amount of increase in FCN to be defined as 1 standard deviation\">\n",
       "                UP = 1.0</td>\n",
       "            </tr>\n",
       "        </table>\n",
       "        \n",
       "        <table>\n",
       "            <tr>\n",
       "                <td align=\"center\" title=\"Validity of the migrad call\">Valid</td>\n",
       "                <td align=\"center\" title=\"Validity of parameters\">Valid Param</td>\n",
       "                <td align=\"center\" title=\"Is Covariance matrix accurate?\">Accurate Covar</td>\n",
       "                <td align=\"center\" title=\"Positive definiteness of covariance matrix\">PosDef</td>\n",
       "                <td align=\"center\" title=\"Was covariance matrix made posdef by adding diagonal element\">Made PosDef</td>\n",
       "            </tr>\n",
       "            <tr>\n",
       "                <td align=\"center\" style=\"background-color:#92CCA6\">True</td>\n",
       "                <td align=\"center\" style=\"background-color:#92CCA6\">True</td>\n",
       "                <td align=\"center\" style=\"background-color:#92CCA6\">True</td>\n",
       "                <td align=\"center\" style=\"background-color:#92CCA6\">True</td>\n",
       "                <td align=\"center\" style=\"background-color:#92CCA6\">False</td>\n",
       "            </tr>\n",
       "            <tr>\n",
       "                <td align=\"center\" title=\"Was last hesse call fail?\">Hesse Fail</td>\n",
       "                <td align=\"center\" title=\"Validity of covariance\">HasCov</td>\n",
       "                <td align=\"center\" title=\"Is EDM above goal EDM?\">Above EDM</td>\n",
       "                <td align=\"center\"></td>\n",
       "                <td align=\"center\" title=\"Did last migrad call reach max call limit?\">Reach calllim</td>\n",
       "            </tr>\n",
       "            <tr>\n",
       "                <td align=\"center\" style=\"background-color:#92CCA6\">False</td>\n",
       "                <td align=\"center\" style=\"background-color:#92CCA6\">True</td>\n",
       "                <td align=\"center\" style=\"background-color:#92CCA6\">False</td>\n",
       "                <td align=\"center\"></td>\n",
       "                <td align=\"center\" style=\"background-color:#92CCA6\">False</td>\n",
       "            </tr>\n",
       "        </table>\n",
       "        "
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "\n",
       "        <table>\n",
       "            <tr>\n",
       "                <td><a href=\"#\" onclick=\"$('#SNZQLafGpa').toggle()\">+</a></td>\n",
       "                <td title=\"Variable name\">Name</td>\n",
       "                <td title=\"Value of parameter\">Value</td>\n",
       "                <td title=\"Parabolic error\">Parab Error</td>\n",
       "                <td title=\"Minos lower error\">Minos Error-</td>\n",
       "                <td title=\"Minos upper error\">Minos Error+</td>\n",
       "                <td title=\"Lower limit of the parameter\">Limit-</td>\n",
       "                <td title=\"Upper limit of the parameter\">Limit+</td>\n",
       "                <td title=\"Is the parameter fixed in the fit\">FIXED</td>\n",
       "            </tr>\n",
       "        \n",
       "            <tr>\n",
       "                <td>1</td>\n",
       "                <td>par_000_amplitude</td>\n",
       "                <td>0.00174508</td>\n",
       "                <td>0.000568629</td>\n",
       "                <td>0</td>\n",
       "                <td>0</td>\n",
       "                <td></td>\n",
       "                <td></td>\n",
       "                <td></td>\n",
       "            </tr>\n",
       "            \n",
       "            <tr>\n",
       "                <td>2</td>\n",
       "                <td>par_001_reference</td>\n",
       "                <td>21.5443</td>\n",
       "                <td>0</td>\n",
       "                <td>0</td>\n",
       "                <td>0</td>\n",
       "                <td></td>\n",
       "                <td></td>\n",
       "                <td>FIXED</td>\n",
       "            </tr>\n",
       "            \n",
       "            <tr>\n",
       "                <td>3</td>\n",
       "                <td>par_002_alpha</td>\n",
       "                <td>1.89622</td>\n",
       "                <td>0.175254</td>\n",
       "                <td>0</td>\n",
       "                <td>0</td>\n",
       "                <td></td>\n",
       "                <td></td>\n",
       "                <td>FIXED</td>\n",
       "            </tr>\n",
       "            \n",
       "            <tr>\n",
       "                <td>4</td>\n",
       "                <td>par_003_beta</td>\n",
       "                <td>18.0115</td>\n",
       "                <td>0.0776092</td>\n",
       "                <td>0</td>\n",
       "                <td>0</td>\n",
       "                <td></td>\n",
       "                <td></td>\n",
       "                <td>FIXED</td>\n",
       "            </tr>\n",
       "            \n",
       "            </table>\n",
       "        \n",
       "            <pre id=\"SNZQLafGpa\" style=\"display:none;\">\n",
       "            <textarea rows=\"14\" cols=\"50\" onclick=\"this.select()\" readonly>\\begin{tabular}{|c|r|r|r|r|r|r|r|c|}\n",
       "\\hline\n",
       " & Name & Value & Para Error & Error+ & Error- & Limit+ & Limit- & FIXED\\\\\n",
       "\\hline\n",
       "1 & par $000_{amplitude}$ & 1.745e-03 & 5.686e-04 &  &  &  &  & \\\\\n",
       "\\hline\n",
       "2 & par $001_{reference}$ & 2.154e+01 & 0.000e+00 &  &  &  &  & FIXED\\\\\n",
       "\\hline\n",
       "3 & par $002_{\\alpha}$ & 1.896e+00 & 1.753e-01 &  &  &  &  & FIXED\\\\\n",
       "\\hline\n",
       "4 & par $003_{\\beta}$ & 1.801e+01 & 7.761e-02 &  &  &  &  & FIXED\\\\\n",
       "\\hline\n",
       "\\end{tabular}</textarea>\n",
       "            </pre>\n",
       "            "
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<hr>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "ana = SpectrumAnalysisIACT(\n",
    "    observations=obs_list,\n",
    "    config=config,\n",
    ")\n",
    "ana.run()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Check out the results\n",
    "\n",
    "TODO: Nice summary page with all results"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "Fit result info \n",
      "--------------- \n",
      "Model: LogParabola\n",
      "\n",
      "Parameters: \n",
      "\n",
      "\t   name     value     error         unit      min max\n",
      "\t--------- --------- --------- --------------- --- ---\n",
      "\tamplitude 2.377e-11 1.799e-12 1 / (cm2 s TeV) nan nan\n",
      "\treference 1.000e+00 0.000e+00             TeV nan nan\n",
      "\t    alpha 1.896e+00 1.753e-01                 nan nan\n",
      "\t     beta 1.801e-01 7.761e-02                 nan nan\n",
      "\n",
      "Covariance: \n",
      "\n",
      "\t   name         amplitude        ...          beta         \n",
      "\t--------- ---------------------- ... ----------------------\n",
      "\tamplitude 3.2368124620079763e-24 ... -6.012435840626412e-14\n",
      "\treference                    0.0 ...                    0.0\n",
      "\t    alpha 2.0393068413972897e-13 ...   -0.01253616253525647\n",
      "\t     beta -6.012435840626412e-14 ...   0.006023186772299266 \n",
      "\n",
      "Statistic: 26.002 (wstat)\n",
      "Fit Range: [ 0.77426368 27.82559402] TeV\n",
      "\n"
     ]
    }
   ],
   "source": [
    "print(ana.fit.result[0])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(<matplotlib.axes._subplots.AxesSubplot at 0x7f5d9862aac8>,\n",
       " <matplotlib.axes._subplots.AxesSubplot at 0x7f5d9862d0f0>)"
      ]
     },
     "execution_count": 8,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<matplotlib.figure.Figure at 0x7f5d9862a550>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "ana.spectrum_result.plot(\n",
    "    energy_range=ana.fit.fit_range,\n",
    "    energy_power=2,\n",
    "    flux_unit='erg-1 cm-2 s-1',\n",
    "    fig_kwargs=dict(figsize = (8,8)),\n",
    ")"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "collapsed": true
   },
   "source": [
    "## Exercises\n",
    "\n",
    "Rerun the analysis, changing some aspects of the analysis as you like:\n",
    "\n",
    "* only use one or two observations\n",
    "* a different spectral model\n",
    "* different config options for the spectral analysis\n",
    "* different energy binning for the spectral point computation\n",
    "\n",
    "Observe how the measured spectrum changes."
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.6.0"
  },
  "nbsphinx": {
   "orphan": true
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
