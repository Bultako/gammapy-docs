{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "\n",
    "<script type=\"text/javascript\" src=\"../_static/linksdl.js\"></script>\n",
    "<div class='alert alert-info'>\n",
    "**This is a fixed-text formatted version of a Jupyter notebook.**\n",
    "\n",
    "- Try online [![Binder](https://mybinder.org/badge.svg)](https://mybinder.org/v2/gh/gammapy/gammapy/master?urlpath=lab/tree/fermi_lat.ipynb)\n",
    "- You can contribute with your own notebooks in this\n",
    "[GitHub repository](https://github.com/gammapy/gammapy/tree/master/tutorials).\n",
    "- **Source files:**\n",
    "[fermi_lat.ipynb](../_static/notebooks/fermi_lat.ipynb) |\n",
    "[fermi_lat.py](../_static/notebooks/fermi_lat.py)\n",
    "</div>\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Fermi-LAT data with Gammapy\n",
    "\n",
    "## Introduction\n",
    "\n",
    "This tutorial will show you how to work with Fermi-LAT data with Gammapy. As an example, we will look at the Galactic center region using the high-energy dataset that was used for the 3FHL catalog, in the energy range 10 GeV to 2 TeV.\n",
    "\n",
    "We note that support for Fermi-LAT data analysis in Gammapy is very limited. For most tasks, we recommend you use \n",
    "[Fermipy](http://fermipy.readthedocs.io/), which is based on the [Fermi Science Tools](https://fermi.gsfc.nasa.gov/ssc/data/analysis/software/) (Fermi ST).\n",
    "\n",
    "Using Gammapy with Fermi-LAT data could be an option for you if you want to do an analysis that is not easily possible with Fermipy and the Fermi Science Tools. For example a joint likelihood fit of Fermi-LAT data with data e.g. from H.E.S.S., MAGIC, VERITAS or some other instrument, or analysis of Fermi-LAT data with a complex spatial or spectral model that is not available in Fermipy or the Fermi ST.\n",
    "\n",
    "Besides Gammapy, you might want to look at are [Sherpa](http://cxc.harvard.edu/sherpa/) or [3ML](https://threeml.readthedocs.io/). Or just using Python to roll your own analyis using several existing analysis packages. E.g. it it possible to use Fermipy and the Fermi ST to evaluate the likelihood on Fermi-LAT data, and Gammapy to evaluate it e.g. for IACT data, and to do a joint likelihood fit using e.g. [iminuit](http://iminuit.readthedocs.io/) or [emcee](http://dfm.io/emcee).\n",
    "\n",
    "To use Fermi-LAT data with Gammapy, you first have to use the Fermi ST to prepare an event list (using ``gtselect`` and ``gtmktime``, exposure cube (using ``gtexpcube2`` and PSF (using ``gtpsf``). You can then use [gammapy.data.EventList](..\/api/gammapy.data.EventList.rst), [gammapy.maps](..\/maps/index.rst) and the [gammapy.irf.EnergyDependentTablePSF](..\/api/gammapy.irf.EnergyDependentTablePSF.rst) to read the Fermi-LAT maps and PSF, i.e. support for these high-level analysis products from the Fermi ST is built in. To do a 3D map analyis, you can use [MapFit](..\/api/gammapy.cube.MapFit.rst) for Fermi-LAT data in the same way that it's use for IACT data. This is illustrated in this notebook. A 1D region-based spectral analysis is also possible, this will be illustrated in a future tutorial. There you have to extract 1D counts, exposure and background vectors and then pass them to [SpectrumFit](..\/api/gammapy.spectrum.SpectrumFit.rst).\n",
    "\n",
    "## Setup\n",
    "\n",
    "**IMPORTANT**: For this notebook you have to get the prepared ``3fhl`` dataset provided in the [gammapy-fermi-lat-data](https://github.com/gammapy/gammapy-fermi-lat-data) repository. Please follow the instructions [here](https://github.com/gammapy/gammapy-fermi-lat-data#get-the-data) to download the data and setup your environment.\n",
    "\n",
    "Note that the ``3fhl`` dataset is high-energy only, ranging from 10 GeV to 2 TeV."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "README.md\r\n",
      "gll_iem_v06_cutout.fits\r\n",
      "iso_P8R2_SOURCE_V6_v06.txt\r\n",
      "make.py\r\n"
     ]
    }
   ],
   "source": [
    "# Check that you have the prepared Fermi-LAT dataset\n",
    "!ls -1 $GAMMAPY_DATA/fermi_3fhl"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "README.md\r\n",
      "gll_iem_v06_cutout.fits\r\n",
      "iso_P8R2_SOURCE_V6_v06.txt\r\n",
      "make.py\r\n"
     ]
    }
   ],
   "source": [
    "# We will use diffuse models from here\n",
    "!ls -1 $GAMMAPY_DATA/fermi_3fhl"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {},
   "outputs": [],
   "source": [
    "%matplotlib inline\n",
    "import matplotlib.pyplot as plt"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {},
   "outputs": [],
   "source": [
    "import numpy as np\n",
    "from astropy import units as u\n",
    "from astropy.coordinates import SkyCoord\n",
    "from astropy.table import Table\n",
    "from astropy.visualization import simple_norm\n",
    "from gammapy.data import EventList\n",
    "from gammapy.irf import EnergyDependentTablePSF\n",
    "from gammapy.maps import Map, MapAxis, WcsNDMap, WcsGeom\n",
    "from gammapy.spectrum.models import TableModel, PowerLaw, ConstantModel\n",
    "from gammapy.image.models import SkyPointSource, SkyDiffuseConstant\n",
    "from gammapy.cube.models import SkyModel, SkyDiffuseCube\n",
    "from gammapy.cube import MapEvaluator, MapFit, PSFKernel"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Events\n",
    "\n",
    "To load up the Fermi-LAT event list, use the [gammapy.data.EventList](..\/api/gammapy.data.EventList.rst) class:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "EventList info:\n",
      "- Number of events: 697317\n",
      "- Median energy: 1.59e+04 MeV\n",
      "\n"
     ]
    }
   ],
   "source": [
    "events = EventList.read(\n",
    "    \"$GAMMAPY_FERMI_LAT_DATA/3fhl/allsky/fermi_3fhl_events_selected.fits.gz\"\n",
    ")\n",
    "print(events)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "The event data is stored in a [astropy.table.Table](http://docs.astropy.org/en/stable/api/astropy.table.Table.html) object. In case of the Fermi-LAT event list this contains all the additional information on positon, zenith angle, earth azimuth angle, event class, event type etc."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "['ENERGY',\n",
       " 'RA',\n",
       " 'DEC',\n",
       " 'L',\n",
       " 'B',\n",
       " 'THETA',\n",
       " 'PHI',\n",
       " 'ZENITH_ANGLE',\n",
       " 'EARTH_AZIMUTH_ANGLE',\n",
       " 'TIME',\n",
       " 'EVENT_ID',\n",
       " 'RUN_ID',\n",
       " 'RECON_VERSION',\n",
       " 'CALIB_VERSION',\n",
       " 'EVENT_CLASS',\n",
       " 'EVENT_TYPE',\n",
       " 'CONVERSION_TYPE',\n",
       " 'LIVETIME',\n",
       " 'DIFRSP0',\n",
       " 'DIFRSP1',\n",
       " 'DIFRSP2',\n",
       " 'DIFRSP3',\n",
       " 'DIFRSP4']"
      ]
     },
     "execution_count": 6,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "events.table.colnames"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<i>Table length=5</i>\n",
       "<table id=\"table4763510656\" class=\"table-striped table-bordered table-condensed\">\n",
       "<thead><tr><th>ENERGY</th><th>RA</th><th>DEC</th></tr></thead>\n",
       "<thead><tr><th>MeV</th><th>deg</th><th>deg</th></tr></thead>\n",
       "<thead><tr><th>float32</th><th>float32</th><th>float32</th></tr></thead>\n",
       "<tr><td>12856.5205</td><td>139.64438</td><td>-9.93702</td></tr>\n",
       "<tr><td>14773.319</td><td>177.04454</td><td>60.55275</td></tr>\n",
       "<tr><td>23273.527</td><td>110.21325</td><td>37.002018</td></tr>\n",
       "<tr><td>41866.125</td><td>334.85287</td><td>17.577398</td></tr>\n",
       "<tr><td>42463.074</td><td>316.86676</td><td>48.152477</td></tr>\n",
       "</table>"
      ],
      "text/plain": [
       "<Table length=5>\n",
       "  ENERGY       RA       DEC   \n",
       "   MeV        deg       deg   \n",
       " float32    float32   float32 \n",
       "---------- --------- ---------\n",
       "12856.5205 139.64438  -9.93702\n",
       " 14773.319 177.04454  60.55275\n",
       " 23273.527 110.21325 37.002018\n",
       " 41866.125 334.85287 17.577398\n",
       " 42463.074 316.86676 48.152477"
      ]
     },
     "execution_count": 7,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "events.table[:5][[\"ENERGY\", \"RA\", \"DEC\"]]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "2008-08-04 15:49:26.782\n",
      "2015-07-30 11:00:41.226\n"
     ]
    }
   ],
   "source": [
    "print(events.time[0].iso)\n",
    "print(events.time[-1].iso)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "mean = 28905.451171875 MeV\n",
      "std = 61051.7421875 MeV\n",
      "min = 10000.03125 MeV\n",
      "max = 1998482.75 MeV\n",
      "n_bad = 0\n",
      "length = 697317\n"
     ]
    }
   ],
   "source": [
    "energy = events.energy\n",
    "energy.info(\"stats\")"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "As a short analysis example we will count the number of events above a certain minimum energy: "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Events above   10 GeV: 697317\n",
      "Events above  100 GeV: 23628\n",
      "Events above 1000 GeV:   544\n"
     ]
    }
   ],
   "source": [
    "for e_min in [10, 100, 1000] * u.GeV:\n",
    "    n = (events.energy > e_min).sum()\n",
    "    print(\"Events above {0:4.0f}: {1:5.0f}\".format(e_min, n))"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Counts\n",
    "\n",
    "Let us start to prepare things for an 3D map analysis of the Galactic center region with Gammapy. The first thing we do is to define the map geometry. We chose a TAN projection centered on position ``(glon, glat) = (0, 0)`` with pixel size 0.1 deg, and four energy bins."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "metadata": {},
   "outputs": [],
   "source": [
    "gc_pos = SkyCoord(0, 0, unit=\"deg\", frame=\"galactic\")\n",
    "energy_axis = MapAxis.from_edges(\n",
    "    [10, 30, 100, 300, 2000], name=\"energy\", unit=\"GeV\", interp=\"log\"\n",
    ")\n",
    "counts = Map.create(\n",
    "    skydir=gc_pos,\n",
    "    npix=(100, 80),\n",
    "    proj=\"TAN\",\n",
    "    coordsys=\"GAL\",\n",
    "    binsz=0.1,\n",
    "    axes=[energy_axis],\n",
    ")\n",
    "# We put this call into the same Jupyter cell as the Map.create\n",
    "# because otherwise we could accidentally fill the counts\n",
    "# multiple times when executing the ``fill_by_coord`` multiple times.\n",
    "counts.fill_by_coord(\n",
    "    {\n",
    "        \"skycoord\": events.radec,\n",
    "        # The coord-based interface doesn't use Quantity,\n",
    "        # so we need to pass energy in the same unit as\n",
    "        # used for the map axis\n",
    "        \"energy\": events.energy,\n",
    "    }\n",
    ")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "MapAxis\n",
       "\n",
       "\tname       : energy    \n",
       "\tunit       : 'GeV'     \n",
       "\tnbins      : 4         \n",
       "\tnode type  : edges     \n",
       "\tedges min  : 1.0e+01 GeV\n",
       "\tedges max  : 2.0e+03 GeV\n",
       "\tinterp     : log       "
      ]
     },
     "execution_count": 12,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "counts.geom.axes[0]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "counts.sum_over_axes().smooth(2).plot(stretch=\"sqrt\", vmax=30);"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Exposure\n",
    "\n",
    "The Fermi-LAT datatset contains the energy-dependent exposure for the whole sky as a HEALPix map computed with ``gtexpcube2``. This format is supported by ``gammapy.maps`` directly.\n",
    "\n",
    "Interpolating the exposure cube from the Fermi ST to get an exposure cube matching the spatial geometry and energy axis defined above with Gammapy is easy. The only point to watch out for is how exactly you want the energy axis and binning handled.\n",
    "\n",
    "Below we just use the default behaviour, which is linear interpolation in energy on the original exposure cube. Probably log interpolation would be better, but it doesn't matter much here, because the energy binning is fine. Finally, we just copy the counts map geometry, which contains an energy axis with `node_type=\"edges\"`. This is non-ideal for exposure cubes, but again, acceptable because exposure doesn't vary much from bin to bin, so the exact way interpolation occurs in later use of that exposure cube doesn't matter a lot. Of course you could define any energy axis for your exposure cube that you like."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "HpxGeom\n",
      "\n",
      "\taxes       : skycoord, energy\n",
      "\tshape      : (49152, 18)\n",
      "\tndim       : 3\n",
      "\tnside      : 64\n",
      "\tnested     : False\n",
      "\tcoordsys   : CEL\n",
      "\tprojection : HPX\n",
      "\tcenter     : 0.0 deg, 0.0 deg\n",
      "\n",
      "MapAxis\n",
      "\n",
      "\tname       : energy    \n",
      "\tunit       : ''        \n",
      "\tnbins      : 18        \n",
      "\tnode type  : center    \n",
      "\tcenter min : 1.0e+04   \n",
      "\tcenter max : 2.0e+06   \n",
      "\tinterp     : log       \n",
      "\n"
     ]
    }
   ],
   "source": [
    "exposure_hpx = Map.read(\n",
    "    \"$GAMMAPY_FERMI_LAT_DATA/3fhl/allsky/fermi_3fhl_exposure_cube_hpx.fits.gz\"\n",
    ")\n",
    "# Unit is not stored in the file, set it manually\n",
    "exposure_hpx.unit = \"cm2 s\"\n",
    "print(exposure_hpx.geom)\n",
    "print(exposure_hpx.geom.axes[0])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "exposure_hpx.plot();"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "WcsGeom\n",
      "\n",
      "\taxes       : lon, lat, energy\n",
      "\tshape      : (100, 80, 4)\n",
      "\tndim       : 3\n",
      "\tcoordsys   : GAL\n",
      "\tprojection : TAN\n",
      "\tcenter     : 0.0 deg, 0.0 deg\n",
      "\twidth      : 10.0 x 8.0 deg\n",
      "\n",
      "MapAxis\n",
      "\n",
      "\tname       : energy    \n",
      "\tunit       : 'GeV'     \n",
      "\tnbins      : 4         \n",
      "\tnode type  : center    \n",
      "\tcenter min : 1.7e+01 GeV\n",
      "\tcenter max : 7.7e+02 GeV\n",
      "\tinterp     : log       \n",
      "\n"
     ]
    }
   ],
   "source": [
    "# For exposure, we choose a geometry with node_type='center',\n",
    "# whereas for counts it was node_type='edge'\n",
    "axis = MapAxis.from_nodes(\n",
    "    counts.geom.axes[0].center, name=\"energy\", unit=\"GeV\", interp=\"log\"\n",
    ")\n",
    "geom = WcsGeom(wcs=counts.geom.wcs, npix=counts.geom.npix, axes=[axis])\n",
    "\n",
    "coord = counts.geom.get_coord()\n",
    "data = exposure_hpx.interp_by_coord(coord)\n",
    "exposure = WcsNDMap(geom, data, unit=exposure_hpx.unit)\n",
    "print(exposure.geom)\n",
    "print(exposure.geom.axes[0])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 2 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Exposure is almost constant accross the field of view\n",
    "exposure.slice_by_idx({\"energy\": 0}).plot(add_cbar=True);"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([3.26723811e+11, 3.26671386e+11, 3.26469134e+11])"
      ]
     },
     "execution_count": 18,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Exposure varies very little with energy at these high energies\n",
    "energy = [10, 100, 1000] * u.GeV\n",
    "exposure.get_by_coord({\"skycoord\": gc_pos, \"energy\": energy})"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Galactic diffuse background"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "The Fermi-LAT collaboration provides a galactic diffuse emission model, that can be used as a background model for\n",
    "Fermi-LAT source analysis.\n",
    "\n",
    "Diffuse model maps are very large (100s of MB), so as an example here, we just load one that represents a small cutout for the Galactic center region."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "WcsGeom\n",
      "\n",
      "\taxes       : lon, lat, energy\n",
      "\tshape      : (88, 48, 30)\n",
      "\tndim       : 3\n",
      "\tcoordsys   : GAL\n",
      "\tprojection : CAR\n",
      "\tcenter     : 0.0 deg, -0.1 deg\n",
      "\twidth      : 11.0 x 6.0 deg\n",
      "\n",
      "MapAxis\n",
      "\n",
      "\tname       : energy    \n",
      "\tunit       : 'MeV'     \n",
      "\tnbins      : 30        \n",
      "\tnode type  : center    \n",
      "\tcenter min : 5.8e+01 MeV\n",
      "\tcenter max : 5.1e+05 MeV\n",
      "\tinterp     : log       \n",
      "\n"
     ]
    }
   ],
   "source": [
    "diffuse_galactic_fermi = Map.read(\n",
    "    \"$GAMMAPY_EXTRA/datasets/fermi_3fhl/gll_iem_v06_cutout.fits\"\n",
    ")\n",
    "# Unit is not stored in the file, set it manually\n",
    "diffuse_galactic_fermi.unit = \"cm-2 s-1 MeV-1 sr-1\"\n",
    "print(diffuse_galactic_fermi.geom)\n",
    "print(diffuse_galactic_fermi.geom.axes[0])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "WcsGeom\n",
      "\n",
      "\taxes       : lon, lat, energy\n",
      "\tshape      : (100, 80, 4)\n",
      "\tndim       : 3\n",
      "\tcoordsys   : GAL\n",
      "\tprojection : TAN\n",
      "\tcenter     : 0.0 deg, 0.0 deg\n",
      "\twidth      : 10.0 x 8.0 deg\n",
      "\n",
      "MapAxis\n",
      "\n",
      "\tname       : energy    \n",
      "\tunit       : 'GeV'     \n",
      "\tnbins      : 4         \n",
      "\tnode type  : center    \n",
      "\tcenter min : 1.7e+01 GeV\n",
      "\tcenter max : 7.7e+02 GeV\n",
      "\tinterp     : log       \n",
      "\n"
     ]
    }
   ],
   "source": [
    "# Interpolate the diffuse emission model onto the counts geometry\n",
    "# The resolution of `diffuse_galactic_fermi` is low: bin size = 0.5 deg\n",
    "# We use ``interp=3`` which means cubic spline interpolation\n",
    "coord = counts.geom.get_coord()\n",
    "\n",
    "data = diffuse_galactic_fermi.interp_by_coord(\n",
    "    {\n",
    "        \"skycoord\": coord.skycoord,\n",
    "        \"energy\": coord[\"energy\"]\n",
    "        * counts.geom.get_axis_by_name(\"energy\").unit,\n",
    "    },\n",
    "    interp=3,\n",
    ")\n",
    "diffuse_galactic = WcsNDMap(\n",
    "    exposure.geom, data, unit=diffuse_galactic_fermi.unit\n",
    ")\n",
    "\n",
    "print(diffuse_galactic.geom)\n",
    "print(diffuse_galactic.geom.axes[0])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "diffuse_galactic.slice_by_idx({\"energy\": 0}).plot();"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Text(0,0.5,'Flux (cm-2 s-1 MeV-1 sr-1)')"
      ]
     },
     "execution_count": 22,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Exposure varies very little with energy at these high energies\n",
    "energy = np.logspace(1, 3, 10) * u.GeV\n",
    "dnde = diffuse_galactic.interp_by_coord(\n",
    "    {\"skycoord\": gc_pos, \"energy\": energy}, interp=\"linear\", fill_value=None\n",
    ")\n",
    "plt.plot(energy.value, dnde, \"*\")\n",
    "plt.loglog()\n",
    "plt.xlabel(\"Energy (GeV)\")\n",
    "plt.ylabel(\"Flux (cm-2 s-1 MeV-1 sr-1)\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "metadata": {},
   "outputs": [],
   "source": [
    "# TODO: show how one can fix the extrapolate to high energy\n",
    "# by computing and padding an extra plane e.g. at 1e3 TeV\n",
    "# that corresponds to a linear extrapolation"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Isotropic diffuse background\n",
    "\n",
    "To load the isotropic diffuse model with Gammapy, use the [gammapy.spectrum.models.TableModel](..\/api/gammapy.spectrum.models.TableModel.rst). We are using `'fill_value': 'extrapolate'` to extrapolate the model above 500 GeV:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "metadata": {},
   "outputs": [
    {
     "ename": "TypeError",
     "evalue": "__init__() got an unexpected keyword argument 'kind'",
     "output_type": "error",
     "traceback": [
      "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[0;31mTypeError\u001b[0m                                 Traceback (most recent call last)",
      "\u001b[0;32m<ipython-input-24-6cad5fe4e098>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m()\u001b[0m\n\u001b[1;32m      2\u001b[0m \u001b[0minterp_kwargs\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;34m{\u001b[0m\u001b[0;34m\"fill_value\"\u001b[0m\u001b[0;34m:\u001b[0m \u001b[0;34m\"extrapolate\"\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m\"kind\"\u001b[0m\u001b[0;34m:\u001b[0m \u001b[0;34m\"cubic\"\u001b[0m\u001b[0;34m}\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      3\u001b[0m diffuse_iso = TableModel.read_fermi_isotropic_model(\n\u001b[0;32m----> 4\u001b[0;31m     \u001b[0mfilename\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mfilename\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0minterp_kwargs\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0minterp_kwargs\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      5\u001b[0m )\n",
      "\u001b[0;32m~/work/code/gammapy-docs/build/dev/gammapy/gammapy/spectrum/models.py\u001b[0m in \u001b[0;36mread_fermi_isotropic_model\u001b[0;34m(cls, filename, **kwargs)\u001b[0m\n\u001b[1;32m   1277\u001b[0m         \u001b[0menergy\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mu\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mQuantity\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mvals\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;36m0\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m\"MeV\"\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mcopy\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;32mFalse\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1278\u001b[0m         \u001b[0mvalues\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mu\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mQuantity\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mvals\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;36m1\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m\"MeV-1 s-1 cm-2 sr-1\"\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mcopy\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;32mFalse\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 1279\u001b[0;31m         \u001b[0;32mreturn\u001b[0m \u001b[0mcls\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0menergy\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0menergy\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mvalues\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mvalues\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   1280\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1281\u001b[0m     \u001b[0;32mdef\u001b[0m \u001b[0mevaluate\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0menergy\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mnorm\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;32m~/work/code/gammapy-docs/build/dev/gammapy/gammapy/spectrum/models.py\u001b[0m in \u001b[0;36m__init__\u001b[0;34m(self, energy, values, norm, values_scale, interp_kwargs, meta)\u001b[0m\n\u001b[1;32m   1203\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1204\u001b[0m         self._evaluate = ScaledRegularGridInterpolator(\n\u001b[0;32m-> 1205\u001b[0;31m             \u001b[0mpoints\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mnp\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mlog\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0menergy\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mvalue\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mvalues\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mvalues\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mvalue\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0minterp_kwargs\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   1206\u001b[0m         )\n\u001b[1;32m   1207\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;32m~/work/code/gammapy-docs/build/dev/gammapy/gammapy/utils/interpolation.py\u001b[0m in \u001b[0;36m__init__\u001b[0;34m(self, points, values, values_scale, extrapolate, **kwargs)\u001b[0m\n\u001b[1;32m     39\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     40\u001b[0m         self._interpolate = RegularGridInterpolator(\n\u001b[0;32m---> 41\u001b[0;31m             \u001b[0mpoints\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mpoints\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mvalues\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mvalues_scaled\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     42\u001b[0m         )\n\u001b[1;32m     43\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;31mTypeError\u001b[0m: __init__() got an unexpected keyword argument 'kind'"
     ]
    }
   ],
   "source": [
    "filename = \"$GAMMAPY_FERMI_LAT_DATA/isodiff/iso_P8R2_SOURCE_V6_v06.txt\"\n",
    "interp_kwargs = {\"fill_value\": \"extrapolate\", \"kind\": \"cubic\"}\n",
    "diffuse_iso = TableModel.read_fermi_isotropic_model(\n",
    "    filename=filename, interp_kwargs=interp_kwargs\n",
    ")"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "We can plot the model in the energy range between 50 GeV and 2000 GeV:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "metadata": {},
   "outputs": [
    {
     "ename": "NameError",
     "evalue": "name 'diffuse_iso' is not defined",
     "output_type": "error",
     "traceback": [
      "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[0;31mNameError\u001b[0m                                 Traceback (most recent call last)",
      "\u001b[0;32m<ipython-input-25-b7130241f502>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m()\u001b[0m\n\u001b[1;32m      1\u001b[0m \u001b[0merange\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;34m[\u001b[0m\u001b[0;36m50\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;36m2000\u001b[0m\u001b[0;34m]\u001b[0m \u001b[0;34m*\u001b[0m \u001b[0mu\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mGeV\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 2\u001b[0;31m \u001b[0mdiffuse_iso\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mplot\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0merange\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mflux_unit\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;34m\"1 / (cm2 MeV s sr)\"\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m;\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m",
      "\u001b[0;31mNameError\u001b[0m: name 'diffuse_iso' is not defined"
     ]
    }
   ],
   "source": [
    "erange = [50, 2000] * u.GeV\n",
    "diffuse_iso.plot(erange, flux_unit=\"1 / (cm2 MeV s sr)\");"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## PSF\n",
    "\n",
    "Next we will tke a look at the PSF. It was computed using ``gtpsf``, in this case for the Galactic center position. Note that generally for Fermi-LAT, the PSF only varies little within a given regions of the sky, especially at high energies like what we have here. We use the [gammapy.irf.EnergyDependentTablePSF](..\/api/gammapy.irf.EnergyDependentTablePSF.rst) class to load the PSF and use some of it's methods to get some information about it."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 26,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "EnergyDependentTablePSF\n",
      "-----------------------\n",
      "\n",
      "Axis info:\n",
      "  rad            : size =   300, min =  0.000 deg, max =  9.933 deg\n",
      "  energy         : size =    17, min = 10.000 GeV, max = 2000.000 GeV\n",
      "\n",
      "Containment info:\n",
      "  68.0% containment radius at  10 GeV: 0.16 deg\n",
      "  68.0% containment radius at 100 GeV: 0.10 deg\n",
      "  95.0% containment radius at  10 GeV: 0.71 deg\n",
      "  95.0% containment radius at 100 GeV: 0.43 deg\n",
      "\n"
     ]
    }
   ],
   "source": [
    "psf = EnergyDependentTablePSF.read(\n",
    "    \"$GAMMAPY_FERMI_LAT_DATA/3fhl/allsky/fermi_3fhl_psf_gc.fits.gz\"\n",
    ")\n",
    "print(psf)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "To get an idea of the size of the PSF we check how the containment radii of the Fermi-LAT PSF vari with energy and different containment fractions:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 27,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 576x360 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.figure(figsize=(8, 5))\n",
    "psf.plot_containment_vs_energy(linewidth=2, fractions=[0.68, 0.95])\n",
    "plt.xlim(50, 2000)\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "In addition we can check how the actual shape of the PSF varies with energy and compare it against the mean PSF between 50 GeV and 2000 GeV:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 28,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 576x360 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.figure(figsize=(8, 5))\n",
    "\n",
    "for energy in [100, 300, 1000] * u.GeV:\n",
    "    psf_at_energy = psf.table_psf_at_energy(energy)\n",
    "    psf_at_energy.plot_psf_vs_rad(label=\"PSF @ {:.0f}\".format(energy), lw=2)\n",
    "\n",
    "erange = [50, 2000] * u.GeV\n",
    "psf_mean = psf.table_psf_in_energy_band(energy_band=erange, spectral_index=2.3)\n",
    "psf_mean.plot_psf_vs_rad(label=\"PSF Mean\", lw=4, c=\"k\", ls=\"--\")\n",
    "\n",
    "plt.xlim(1e-3, 0.3)\n",
    "plt.ylim(1e3, 1e6)\n",
    "plt.legend();"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 29,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Let's compute a PSF kernel matching the pixel size of our map\n",
    "psf_kernel = PSFKernel.from_table_psf(psf, counts.geom, max_radius=\"0.5 deg\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 30,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 2 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "psf_kernel.psf_kernel_map.sum_over_axes().plot(stretch=\"log\", add_cbar=True);"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Background\n",
    "\n",
    "Let's compute a background cube, with predicted number of background events per pixel from the diffuse Galactic and isotropic model components. For this, we use the use the [gammapy.cube.MapEvaluator](..\/api/gammapy.cube.MapEvaluator.rst) to multiply with the exposure and apply the PSF. The Fermi-LAT energy dispersion at high energies is small, we neglect it here."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 31,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Background counts from Galactic diffuse:  13358.972\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "model = SkyDiffuseCube(diffuse_galactic)\n",
    "\n",
    "evaluator = MapEvaluator(model=model, exposure=exposure, psf=psf_kernel)\n",
    "\n",
    "background_gal = counts.copy(data=evaluator.compute_npred())\n",
    "background_gal.sum_over_axes().plot()\n",
    "print(\"Background counts from Galactic diffuse: \", background_gal.data.sum())"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 32,
   "metadata": {},
   "outputs": [
    {
     "ename": "NameError",
     "evalue": "name 'diffuse_iso' is not defined",
     "output_type": "error",
     "traceback": [
      "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[0;31mNameError\u001b[0m                                 Traceback (most recent call last)",
      "\u001b[0;32m<ipython-input-32-c06ae8f35b3c>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m()\u001b[0m\n\u001b[0;32m----> 1\u001b[0;31m \u001b[0mmodel\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mSkyModel\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mSkyDiffuseConstant\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mdiffuse_iso\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      2\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      3\u001b[0m \u001b[0mevaluator\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mMapEvaluator\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mmodel\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mmodel\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mexposure\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mexposure\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mpsf\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mpsf_kernel\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      4\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      5\u001b[0m \u001b[0mbackground_iso\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mcounts\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mcopy\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mdata\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mevaluator\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mcompute_npred\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;31mNameError\u001b[0m: name 'diffuse_iso' is not defined"
     ]
    }
   ],
   "source": [
    "model = SkyModel(SkyDiffuseConstant(), diffuse_iso)\n",
    "\n",
    "evaluator = MapEvaluator(model=model, exposure=exposure, psf=psf_kernel)\n",
    "\n",
    "background_iso = counts.copy(data=evaluator.compute_npred())\n",
    "background_iso.sum_over_axes().plot()\n",
    "print(\"Background counts from isotropic diffuse: \", background_iso.data.sum())"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 33,
   "metadata": {},
   "outputs": [
    {
     "ename": "NameError",
     "evalue": "name 'background_iso' is not defined",
     "output_type": "error",
     "traceback": [
      "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[0;31mNameError\u001b[0m                                 Traceback (most recent call last)",
      "\u001b[0;32m<ipython-input-33-aeaf8b504a46>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m()\u001b[0m\n\u001b[1;32m      1\u001b[0m \u001b[0mbackground\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mbackground_gal\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mcopy\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 2\u001b[0;31m \u001b[0mbackground\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mdata\u001b[0m \u001b[0;34m+=\u001b[0m \u001b[0mbackground_iso\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mdata\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m",
      "\u001b[0;31mNameError\u001b[0m: name 'background_iso' is not defined"
     ]
    }
   ],
   "source": [
    "background = background_gal.copy()\n",
    "background.data += background_iso.data"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Excess and flux\n",
    "\n",
    "Let's compute an excess and flux image, by subtracting the background, and summing over the energy axis."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 34,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Excess counts:  2257.0278\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 2 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "excess = counts.copy()\n",
    "excess.data -= background.data\n",
    "excess.sum_over_axes().smooth(2).plot(\n",
    "    cmap=\"coolwarm\", vmin=-5, vmax=5, add_cbar=True\n",
    ")\n",
    "print(\"Excess counts: \", excess.data.sum())"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 35,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 432x288 with 2 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "flux = excess.copy()\n",
    "flux.data /= exposure.data\n",
    "flux.unit = excess.unit / exposure.unit\n",
    "flux.sum_over_axes().smooth(2).plot(stretch=\"sqrt\", add_cbar=True);"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Fit\n",
    "\n",
    "Finally, the big finale: let's do a 3D map fit for the source at the Galactic center, to measure it's position and spectrum."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 36,
   "metadata": {},
   "outputs": [],
   "source": [
    "model = SkyModel(\n",
    "    SkyPointSource(\"0 deg\", \"0 deg\"),\n",
    "    PowerLaw(index=2.5, amplitude=\"1e-11 cm-2 s-1 TeV-1\", reference=\"100 GeV\"),\n",
    ")\n",
    "fit = MapFit(\n",
    "    model=model,\n",
    "    counts=counts,\n",
    "    exposure=exposure,\n",
    "    background=background,\n",
    "    psf=psf_kernel,\n",
    ")\n",
    "result = fit.run()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 37,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "FitResult\n",
      "\n",
      "\tbackend    : minuit\n",
      "\tmethod     : minuit\n",
      "\tsuccess    : True\n",
      "\tnfev       : 304\n",
      "\ttotal stat : 20395.70\n",
      "\tmessage    : Optimization terminated successfully.\n",
      "\n"
     ]
    }
   ],
   "source": [
    "print(result)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Exercises\n",
    "\n",
    "- Fit the position and spectrum of the source [SNR G0.9+0.1](http://gamma-sky.net/#/cat/tev/110).\n",
    "- Make maps and fit the position and spectrum of the [Crab nebula](http://gamma-sky.net/#/cat/tev/25)."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Summary\n",
    "\n",
    "In this tutorial you have seen how to work with Fermi-LAT data with Gammapy. You have to use the Fermi ST to prepare the exposure cube and PSF, and then you can use Gammapy for any event or map analysis using the same methods that are used to analyse IACT data.\n",
    "\n",
    "This works very well at high energies (here above 10 GeV), where the exposure and PSF is almost constant spatially and only varies a little with energy. It is not expected to give good results for low-energy data, where the Fermi-LAT PSF is very large. If you are interested to help us validate down to what energy Fermi-LAT analysis with Gammapy works well (e.g. by re-computing results from 3FHL or other published analysis results), or to extend the Gammapy capabilities (e.g. to work with energy-dependent multi-resolution maps and PSF), that would be very welcome!"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 38,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.6.0"
  },
  "nbsphinx": {
   "orphan": true
  },
  "toc": {
   "base_numbering": 1,
   "nav_menu": {
    "height": "237px",
    "width": "253px"
   },
   "number_sections": false,
   "sideBar": true,
   "skip_h1_title": false,
   "title_cell": "Table of Contents",
   "title_sidebar": "Contents",
   "toc_cell": false,
   "toc_position": {},
   "toc_section_display": "block",
   "toc_window_display": false
  },
  "varInspector": {
   "cols": {
    "lenName": 16,
    "lenType": 16,
    "lenVar": 40
   },
   "kernels_config": {
    "python": {
     "delete_cmd_postfix": "",
     "delete_cmd_prefix": "del ",
     "library": "var_list.py",
     "varRefreshCmd": "print(var_dic_list())"
    },
    "r": {
     "delete_cmd_postfix": ") ",
     "delete_cmd_prefix": "rm(",
     "library": "var_list.r",
     "varRefreshCmd": "cat(var_dic_list()) "
    }
   },
   "types_to_exclude": [
    "module",
    "function",
    "builtin_function_or_method",
    "instance",
    "_Feature"
   ],
   "window_display": false
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
