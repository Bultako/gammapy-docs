{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "\n",
    "<script type=\"text/javascript\" src=\"../_static/linksdl.js\"></script>\n",
    "<div class='alert alert-info'>\n",
    "**This is a fixed-text formatted version of a Jupyter notebook.**\n",
    "\n",
    "- Try online [![Binder](https://mybinder.org/badge.svg)](https://mybinder.org/v2/gh/gammapy/gammapy-extra/master?urlpath=lab/tree/cta_1dc_introduction.ipynb)\n",
    "- You can contribute with your own notebooks in this\n",
    "[GitHub repository](https://github.com/gammapy/gammapy-extra/tree/master/notebooks).\n",
    "- **Source files:**\n",
    "[cta_1dc_introduction.ipynb](../_static/notebooks/cta_1dc_introduction.ipynb) |\n",
    "[cta_1dc_introduction.py](../_static/notebooks/cta_1dc_introduction.py)\n",
    "</div>\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "![CTA first data challenge logo](images/cta-1dc.png)\n",
    "\n",
    "# CTA first data challenge (1DC) with Gammapy\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Introduction\n",
    "\n",
    "The [CTA observatory](https://www.cta-observatory.org/) has started a first data challenge (\"CTA 1DC\"), focusing on high-level data analysis. Gammapy is a prototype for the CTA science tools (see [Gammapy proceeding from ICRC 2017](https://github.com/gammapy/icrc2017-gammapy-poster/blob/master/proceeding/gammapy-icrc2017.pdf)), and while many things are work in progress (most importantly: source and background modeling and cube analysis), you can use it already to analyse the simulated CTA data.\n",
    "\n",
    "The main page for CTA 1DC is here:\n",
    "https://forge.in2p3.fr/projects/data-challenge-1-dc-1/wiki (CTA internal)\n",
    "\n",
    "There you will find information on 1DC sky models, data access, data organisation, simulation and analysis tools, simulated observations, as well as contact information if you have any questions or comments.\n",
    "\n",
    "### This tutorial notebook\n",
    "\n",
    "This notebook shows you how to get started with CTA 1DC data and what it contains.\n",
    "\n",
    "You will learn how to use Astropy and Gammapy to:\n",
    "\n",
    "* access event data\n",
    "* access instrument response functions (IRFs)\n",
    "* use index files and the ``gammapy.data.DataStore`` to access all data\n",
    "* use the observation index file to select the observations you're interested in\n",
    "* read model XML files from Python (not integrated in Gammapy yet)\n",
    "\n",
    "This is to familiarise ourselves with the data files and to get an overview.\n",
    "\n",
    "### Further information\n",
    "\n",
    "How to analyse the CTA 1DC data with Gammapy (make an image and spectrum) is shown in a second notebook [cta_data_analysis.ipynb](cta_data_analysis.ipynb). If you prefer, you can of course just skim or skip this notebook and go straight to second one.\n",
    "\n",
    "More tutorial notebooks for Gammapy are [here](../index.ipynb),\n",
    "the Gammapy Sphinx docs are at at http://docs.gammapy.org\n",
    "If you have a Gammapy-related question, please send an email to to Gammapy mailing list at http://groups.google.com/group/gammapy (registration required) or if you have an issue or feature request, file an issue here: https://github.com/gammapy/gammapy/issues/new (free Github account required, takes 1 min to set up).\n",
    "\n",
    "Please note that the 1DC data isn't public and results should be shared on CTA Redmine, as described here: https://forge.in2p3.fr/projects/data-challenge-1-dc-1/wiki#Sharing-of-analysis-results. Unfortunately there's no good way yet to share Jupyter notebooks in CTA, as there is e.g. on Github and nbviewer which can show any public noteook."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Notebook and Gammapy Setup\n",
    "\n",
    "Before we get started, please execcute the following code cells.\n",
    "\n",
    "The first one configures the notebooks so that plots are shown inline (if you don't do this, separate windows will pop up). The second cell imports and checks the version of the packages we will use below. If you're missing some packages, install them and then select \"Kernel -> Restart\" above to restart this notebook.\n",
    "\n",
    "In case you're new to Jupyter notebooks: to execute a cell, select it, then type \"SHIFT\" + \"ENTER\"."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [],
   "source": [
    "%matplotlib inline\n",
    "import matplotlib.pyplot as plt"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "numpy: 1.16.0.dev0+65f15a5\n",
      "astropy: 3.0.3\n",
      "gammapy: 0.8.dev6870\n"
     ]
    }
   ],
   "source": [
    "import numpy as np\n",
    "import astropy\n",
    "import gammapy\n",
    "\n",
    "print('numpy:', np.__version__)\n",
    "print('astropy:', astropy.__version__)\n",
    "print('gammapy:', gammapy.__version__)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Getting the 1DC data\n",
    "\n",
    "You can find infos how to download the 1DC data here: \n",
    "https://forge.in2p3.fr/projects/data-challenge-1-dc-1/wiki#Data-access\n",
    "\n",
    "Overall it's quite large (20 GB) and will take a while to download. You can just download a subset of the \"gps\", \"gc\", \"egal\" or \"agn\" datasets, the ones you're interested in.\n",
    "\n",
    "**In this tutorial, we will only use the \"gps\" (Galactic center survey) dataset, so maybe you could start by downloading that first.**\n",
    "\n",
    "While you wait, we strongly recommend you go over some [CTA basics](https://www.youtube.com/playlist?list=PLq3ItKoU0hy7ED6m1eve6WIFs7ibcv3YR) as well as some [Python basics](https://www.youtube.com/playlist?list=PL-Qryc-SVnnu0tPV623TFnrAEQLykkZF5) to prepare yourself for this tutorial.\n",
    "\n",
    "Got the data?\n",
    "\n",
    "Assuming you've followed the instructions, you should have the ``CTADATA`` environment variable pointing to the folder where all data is located. (Gammapy doesn't need or use the ``CALDB`` environment variable.)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/home/hfm/adonath/Projects/cta-dc1-data/1dc\r\n"
     ]
    }
   ],
   "source": [
    "!echo $CTADATA"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "caldb  data  index  models  obs\r\n"
     ]
    }
   ],
   "source": [
    "!ls $CTADATA"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "You can find a description of the directories and files here:\n",
    "https://forge.in2p3.fr/projects/data-challenge-1-dc-1/wiki/Data_organisation\n",
    "\n",
    "A very detailed specification of the data formats is here:\n",
    "http://gamma-astro-data-formats.readthedocs.io/\n",
    "\n",
    "But actually, instead of reading those pages, let's just explore the data and see how to load it with Gammapy ...\n",
    "\n",
    "Before we start, just in case the commands above show that you don't have `CTADATA` set:\n",
    "\n",
    "* you either have to exit the \"jupyter notebook\" command on your terminal, set the environment variable (I'm using bash and added the command `export CTADATA=/Users/deil/work/cta-dc/data/1dc/1dc` to my `~/.profile` file and then did `source ~/.profile`), then re-start Jupyter and this notebook.\n",
    "* or you can set the environment variable by uncommentting the code in the following cell, setting the correct path, then executing it."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {},
   "outputs": [],
   "source": [
    "# import os\n",
    "# os.environ['CTADATA'] = '/Users/deil/work/cta-dc/data/1dc/1dc'\n",
    "# !echo $CTADATA\n",
    "# !ls $CTADATA"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "\n",
    "Let's have a look around at the directories and files in `$CTADATA`.\n",
    "\n",
    "We will look at the `data` folder with events, the `caldb` folder with the IRFs and the `index` folder with the index files. At the end, we will also mention what the `model` and `obs` folder contains, but they aren't used with Gammapy, at least not at the moment.\n",
    "\n",
    "## EVENT data\n",
    "\n",
    "First, the EVENT data (RA, DEC, ENERGY, TIME of each photon or hadronic background event) is in the `data/baseline` folder, with one observation per file. The \"baseline\" refers to the assumed CTA array that was used to simulate the observations. The number in the filename is the observation identifier `OBS_ID` of the observation. Observations are ~ 30 minutes, pointing at a fixed location on the sky."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "caldb  data  index  models  obs\r\n"
     ]
    }
   ],
   "source": [
    "!ls $CTADATA"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "agn  gps\r\n"
     ]
    }
   ],
   "source": [
    "!ls $CTADATA/data/baseline"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "gps_baseline_110000.fits\r\n",
      "gps_baseline_110001.fits\r\n",
      "gps_baseline_110002.fits\r\n",
      "ls: write error: Broken pipe\r\n"
     ]
    }
   ],
   "source": [
    "!ls $CTADATA/data/baseline/gps | head -n3"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "3270\n",
      "12G\t/home/hfm/adonath/Projects/cta-dc1-data/1dc/data/baseline/gps\n"
     ]
    }
   ],
   "source": [
    "# There's 3270 observations and 11 GB of event data for the gps dataset\n",
    "!ls $CTADATA/data/baseline/gps | wc -l\n",
    "!du -hs $CTADATA/data/baseline/gps"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Let's open up the first event list using the Gammapy `EventList` class, which contains the ``EVENTS`` table data via the ``table`` attribute as an Astropy `Table` object."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'gammapy.data.event_list.EventList'>\n",
      "<class 'astropy.table.table.Table'>\n"
     ]
    }
   ],
   "source": [
    "from gammapy.data import EventList\n",
    "events = EventList.read('$CTADATA/data/baseline/gps/gps_baseline_110000.fits')\n",
    "print(type(events))\n",
    "print(type(events.table))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<i>Row index=0</i>\n",
       "<table id=\"table139803401301576\">\n",
       "<thead><tr><th>EVENT_ID</th><th>TIME</th><th>RA</th><th>DEC</th><th>ENERGY</th><th>DETX</th><th>DETY</th><th>MC_ID</th></tr></thead>\n",
       "<thead><tr><th></th><th>s</th><th>deg</th><th>deg</th><th>TeV</th><th>deg</th><th>deg</th><th></th></tr></thead>\n",
       "<thead><tr><th>uint32</th><th>float64</th><th>float32</th><th>float32</th><th>float32</th><th>float32</th><th>float32</th><th>int32</th></tr></thead>\n",
       "<tr><td>1</td><td>662774403.2549675</td><td>-173.28687</td><td>-62.40993</td><td>0.04861494</td><td>1.6079456</td><td>0.25801584</td><td>2</td></tr>\n",
       "</table>"
      ],
      "text/plain": [
       "<Row index=0>\n",
       "EVENT_ID        TIME           RA        DEC      ENERGY      DETX      DETY    MC_ID\n",
       "                 s            deg        deg       TeV        deg       deg          \n",
       " uint32       float64       float32    float32   float32    float32   float32   int32\n",
       "-------- ----------------- ---------- --------- ---------- --------- ---------- -----\n",
       "       1 662774403.2549675 -173.28687 -62.40993 0.04861494 1.6079456 0.25801584     2"
      ]
     },
     "execution_count": 11,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# First event (using [] for \"indexing\")\n",
    "events.table[0]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<i>Table length=2</i>\n",
       "<table id=\"table139803553904568\" class=\"table-striped table-bordered table-condensed\">\n",
       "<thead><tr><th>EVENT_ID</th><th>TIME</th><th>RA</th><th>DEC</th><th>ENERGY</th><th>DETX</th><th>DETY</th><th>MC_ID</th></tr></thead>\n",
       "<thead><tr><th></th><th>s</th><th>deg</th><th>deg</th><th>TeV</th><th>deg</th><th>deg</th><th></th></tr></thead>\n",
       "<thead><tr><th>uint32</th><th>float64</th><th>float32</th><th>float32</th><th>float32</th><th>float32</th><th>float32</th><th>int32</th></tr></thead>\n",
       "<tr><td>1</td><td>662774403.2549675</td><td>-173.28687</td><td>-62.40993</td><td>0.04861494</td><td>1.6079456</td><td>0.25801584</td><td>2</td></tr>\n",
       "<tr><td>2</td><td>662774459.1837754</td><td>-172.61957</td><td>-63.034626</td><td>0.061103538</td><td>0.97905844</td><td>0.5551662</td><td>2</td></tr>\n",
       "</table>"
      ],
      "text/plain": [
       "<Table length=2>\n",
       "EVENT_ID        TIME           RA        DEC     ...    DETX       DETY    MC_ID\n",
       "                 s            deg        deg     ...    deg        deg          \n",
       " uint32       float64       float32    float32   ...  float32    float32   int32\n",
       "-------- ----------------- ---------- ---------- ... ---------- ---------- -----\n",
       "       1 662774403.2549675 -173.28687  -62.40993 ...  1.6079456 0.25801584     2\n",
       "       2 662774459.1837754 -172.61957 -63.034626 ... 0.97905844  0.5551662     2"
      ]
     },
     "execution_count": 12,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# First few events (using [] for \"slicing\")\n",
    "events.table[:2]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'astropy.time.core.Time'>\n"
     ]
    }
   ],
   "source": [
    "# Event times can be accessed as Astropy Time objects\n",
    "print(type(events.time))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<Time object: scale='tt' format='mjd' value=[59215.50003767 59215.500685  ]>"
      ]
     },
     "execution_count": 14,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "events.time[:2]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "['2021-01-01T12:00:03.255(TT)' '2021-01-01T12:00:59.184(TT)']\n"
     ]
    }
   ],
   "source": [
    "# Convert event time to more human-readable format\n",
    "print(events.time[:2].fits)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'astropy.coordinates.sky_coordinate.SkyCoord'>\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "<SkyCoord (ICRS): (ra, dec) in deg\n",
       "    [(186.71313, -62.40993 ), (187.38043, -63.034626)]>"
      ]
     },
     "execution_count": 16,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Event positions can be accessed as Astropy SkyCoord objects\n",
    "print(type(events.radec))\n",
    "events.radec[:2]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<SkyCoord (Galactic): (l, b) in deg\n",
       "    [(300.08953957,  0.32605543), (300.45042443, -0.26852334)]>"
      ]
     },
     "execution_count": 17,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "events.galactic[:2]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'collections.OrderedDict'>\n"
     ]
    }
   ],
   "source": [
    "# The event header information is stored\n",
    "# in the `events.table.meta` dictionary\n",
    "print(type(events.table.meta))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(186.15609741, -64.019)"
      ]
     },
     "execution_count": 19,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# E.g. to get the observation pointing position in degrees:\n",
    "events.table.meta['RA_PNT'], events.table.meta['DEC_PNT']"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## EVENT analysis example\n",
    "\n",
    "As an example how to work with EVENT data, let's look at the spatial and energy distribution of the events for a single run.\n",
    "\n",
    "Note that EVENT data in Gammapy is just stored in an Astropy Table, which is basically a dictionary mapping column names to column data, where the column data is a Numpy array. This means you can efficienly process it from Python using any of the scientific Python tools you like (e.g. Numpy, Scipy, scikit-image, scikit-learn, ...)\n",
    "\n",
    "### EVENT spatial distribution\n",
    "\n",
    "To illustrate a bit how to work with EVENT table an header data,\n",
    "let's plot the event positions as well as the pointing position."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<SkyCoord (Galactic): (l, b) in deg\n",
       "    (300.00001584, -1.29999832)>"
      ]
     },
     "execution_count": 20,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<matplotlib.figure.Figure at 0x7f26841c19b0>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Event positions\n",
    "pos = events.galactic[::300] # sub-sample every 100th event\n",
    "plt.scatter(pos.l.wrap_at('180 deg').deg, pos.b.deg, s=10)\n",
    "# Pointing position\n",
    "pos_pnt = events.pointing_radec.galactic\n",
    "plt.scatter(pos_pnt.l.wrap_at('180 deg').deg, pos_pnt.b.deg,\n",
    "            marker='*', s=400, c='red')\n",
    "plt.xlabel('Galactic longitude (deg)')\n",
    "plt.ylabel('Galactic latitude (deg)')\n",
    "pos_pnt"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### EVENT energy distribution\n",
    "\n",
    "Let's have a look at the event energy distribution."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Text(0,0.5,'Number of events')"
      ]
     },
     "execution_count": 21,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<matplotlib.figure.Figure at 0x7f268d2b34a8>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "energy = events.table['ENERGY'].data\n",
    "energy_bins = np.logspace(-2, 2, num=100)\n",
    "plt.hist(energy, bins=energy_bins)\n",
    "plt.semilogx()\n",
    "plt.xlabel('Event energy (TeV)')\n",
    "plt.ylabel('Number of events')"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "A double-peak, at ~ 30 GeV and ~ 100 GeV? .... let's try to find out what's going on ...\n",
    "\n",
    "### EVENT MC_ID\n",
    "\n",
    "One idea could be to split the data into gamma-ray and hadronic background events.\n",
    "Now from looking at the FITS header, one can see that ``MC_ID == 1`` is the hadronic background, and the other values are for different gamma-ray emission components."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Number of events:  107301\n",
      "Number of gammas:  1112\n",
      "Number of hadrons:  106189\n"
     ]
    }
   ],
   "source": [
    "is_gamma = events.table['MC_ID'] != 1\n",
    "print('Number of events: ', len(events.table))\n",
    "print('Number of gammas: ', is_gamma.sum())\n",
    "print('Number of hadrons: ', len(events.table) - is_gamma.sum())"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<matplotlib.legend.Legend at 0x7f26839dbbe0>"
      ]
     },
     "execution_count": 23,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<matplotlib.figure.Figure at 0x7f2683b41860>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "energy = events.table['ENERGY'].data\n",
    "energy_bins = np.logspace(-2, 2, num=100)\n",
    "opts = dict(bins=energy_bins, normed=True, histtype='step')\n",
    "plt.hist(energy[~is_gamma], label='hadron', **opts)\n",
    "plt.hist(energy[is_gamma], label='gamma', **opts)\n",
    "plt.loglog()\n",
    "plt.xlabel('Event energy (TeV)')\n",
    "plt.ylabel('Number of events')\n",
    "plt.legend()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "As expected, the energy spectra are roughly power-laws. \n",
    "When plotting in log-log, one can see that the spectra are roughly power-laws (as expected), and the \"double peak\" we saw before looks more like a \"double energy threshold\" pattern.\n",
    "It's there for gammas and background, and below 100 GeV the signal to background ratio is lower.\n",
    "\n",
    "What we're seeing here is the result of a mixed-array in CTA with LSTs, MSTs and SSTs, which  have different energy thresholds:\n",
    "\n",
    "* ~ 30 GeV is the energy threshold of the LSTs\n",
    "* ~ 100 GeV is the energy threshold of the MSTs\n",
    "* the energy threshold of the SSTs is at a few TeV and doesn't show up as a clear feature in the gamma and background energy distribution (probably the rise in slope in gamma in the 1-10 TeV range is due to the SSTs).\n",
    "\n",
    "Let's look a little deeper and also check the event offset distribution in the field of view ...\n",
    "\n",
    "### EVENT FOV offset\n",
    "\n",
    "The event position and offset in the field of view (FOV) can be computed from the event RA, DEC position and the observation pointing RA, DEC position.\n",
    "\n",
    "But actually, the field of view position is stored as extra columns in the EVENT list: ``DETX`` and ``DETY`` (angles in degree, I think RA / DEC aligned field of view system).\n",
    "\n",
    "I presume (hope) this unnecessary information will be dropped from the CTA event lists in the future to save some space (make the CTA DL3 data ~25% smaller), but for now, let's use those columns to compute the field of view offset and look at the offset-energy distribution of the events."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Text(0,0.5,'Offset (deg)')"
      ]
     },
     "execution_count": 24,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<matplotlib.figure.Figure at 0x7f2683a1f4e0>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "energy_bins = 10 ** np.linspace(-2, 2, 100)\n",
    "offset_bins = np.arange(0, 5, 0.1)\n",
    "\n",
    "t = events.table\n",
    "offset = np.sqrt(t['DETX'] ** 2 + t['DETY'] ** 2)\n",
    "hist = np.histogram2d(\n",
    "    x=t['ENERGY'], y=offset,\n",
    "    bins=(energy_bins, offset_bins),\n",
    ")[0].T\n",
    "\n",
    "from matplotlib.colors import LogNorm\n",
    "plt.pcolormesh(energy_bins, offset_bins,\n",
    "               hist, norm=LogNorm())\n",
    "plt.semilogx()\n",
    "plt.colorbar()\n",
    "plt.xlabel('Energy (TeV)')\n",
    "plt.ylabel('Offset (deg)')"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "So the CTA field of view increases with energy in steps. The energy distribution we saw before was the combination of the energy distribution at all offsets. Even at a single offset, the double energy-threshold at ~ 30 GeV and ~ 100 GeV is present.\n",
    "\n",
    "### Stacking EVENTS tables\n",
    "\n",
    "As a final example of how to work with event lists, here's now to apply arbitrary event selections and how to stack events tables from several observations into a single event list. \n",
    "\n",
    "We will just use `astropy.table.Table` directly, not go via the `gammapy.data.EventList` class. Note that you can always make an `EventList` object from a `Table` object via `event_list = EventList(table)`. One point to keep in mind is that `Table.read` doesn't resolve environment variables in filenames, so we'll use the Python standard library `os` package to construct the filenames."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "metadata": {},
   "outputs": [],
   "source": [
    "import os\n",
    "from astropy.table import Table\n",
    "from astropy.table import vstack as table_vstack\n",
    "\n",
    "filename = os.path.join(os.environ['CTADATA'], 'data/baseline/gps/gps_baseline_110000.fits')\n",
    "t1 = Table.read(filename, hdu='EVENTS')\n",
    "\n",
    "filename = os.path.join(os.environ['CTADATA'], 'data/baseline/gps/gps_baseline_110001.fits')\n",
    "t2 = Table.read(filename, hdu='EVENTS')\n",
    "tables = [t1, t2]\n",
    "table = table_vstack(tables, metadata_conflicts='silent')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 26,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Number of events:  214675\n"
     ]
    }
   ],
   "source": [
    "print('Number of events: ', len(table))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 27,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Number of events after selection: 45\n"
     ]
    }
   ],
   "source": [
    "# Let's select gamma rays with energy above 10 TeV\n",
    "mask_mc_id = table['MC_ID'] != 1\n",
    "mask_energy = table['ENERGY'] > 10\n",
    "mask = mask_mc_id & mask_energy\n",
    "table2 = table[mask]\n",
    "print('Number of events after selection:', len(table2))"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "When processing a lot or all of the 1DC events, you would write a for loop, and apply the event selection before putting the table in the list of tables, or you might run out of memory. An example is [here](https://github.com/gammasky/cta-dc/blob/master/data/cta_1dc_make_allsky_images.py).\n",
    "\n",
    "That's all for ``EVENTS``. You now know what every column in the event table contains, and how to work with event list tables using ``gammapy.data.EventList`` and ``astropy.table.Table``. \n",
    "\n",
    "Just in case that there is some observation parameter in the FITS EVENTS header that you're interested in, you can find the full description of the keys you can access via the ``events.table.meta`` dictionary [here](http://gamma-astro-data-formats.readthedocs.io/en/latest/events/events.html)."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## IRFs\n",
    "\n",
    "The CTA instrument reponse functions (IRFs) are given as FITS files in the `caldb` folder.\n",
    "\n",
    "Note that this is not realistic. Real CTA data at the DL3 level (what we have here, what users get) will mostly likely have per-observation or per-time interval IRFs, and the IRFs will not be stored in a separate CALDB folder, but distributed with the EVENTS (probably in the same file, or at least in the same folder, so that it's together).\n",
    "\n",
    "For now, the EVENT to IRF association (i.e. which IRF is the right one for given EVENTS) is done by index files. We will discuss those in the next section, but before we do, let's look at the CTA IRFs for one given configuration: `South_z20_50h`."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 28,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\u001b[01;34mcaldb\u001b[00m\r\n",
      "└── \u001b[01;34mdata\u001b[00m\r\n",
      "    └── \u001b[01;34mcta\u001b[00m\r\n",
      "        └── \u001b[01;34m1dc\u001b[00m\r\n",
      "            ├── \u001b[01;34mbcf\u001b[00m\r\n",
      "            │   ├── \u001b[01;34mNorth_z20_50h\u001b[00m\r\n",
      "            │   │   └── irf_file.fits\r\n",
      "            │   ├── \u001b[01;34mNorth_z40_50h\u001b[00m\r\n",
      "            │   │   └── irf_file.fits\r\n",
      "            │   ├── \u001b[01;34mSouth_z20_50h\u001b[00m\r\n",
      "            │   │   └── irf_file.fits\r\n",
      "            │   └── \u001b[01;34mSouth_z40_50h\u001b[00m\r\n",
      "            │       └── irf_file.fits\r\n",
      "            └── caldb.indx\r\n",
      "\r\n",
      "8 directories, 5 files\r\n"
     ]
    }
   ],
   "source": [
    "!(cd $CTADATA && tree caldb)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 29,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Filename: /home/hfm/adonath/Projects/cta-dc1-data/1dc/caldb/data/cta/1dc/bcf/South_z20_50h/irf_file.fits\n",
      "No.    Name      Ver    Type      Cards   Dimensions   Format\n",
      "  0  PRIMARY       1 PrimaryHDU       8   ()      \n",
      "  1  EFFECTIVE AREA    1 BinTableHDU     53   1R x 5C   [42E, 42E, 6E, 6E, 252E]   \n",
      "  2  POINT SPREAD FUNCTION    1 BinTableHDU     70   1R x 10C   [25E, 25E, 6E, 6E, 150E, 150E, 150E, 150E, 150E, 150E]   \n",
      "  3  ENERGY DISPERSION    1 BinTableHDU     56   1R x 7C   [500E, 500E, 300E, 300E, 6E, 6E, 900000E]   \n",
      "  4  BACKGROUND    1 BinTableHDU     59   1R x 7C   [36E, 36E, 36E, 36E, 21E, 21E, 27216E]   \n"
     ]
    }
   ],
   "source": [
    "# Let's look at the content of one of the IRF FITS files.\n",
    "# IRFs are stored in `BinTable` HDUs in a weird format\n",
    "# that you don't need to care about because it's implemented in Gammapy\n",
    "irf_filename = os.path.join(os.environ['CTADATA'], 'caldb/data/cta/1dc/bcf/South_z20_50h/irf_file.fits')\n",
    "from astropy.io import fits\n",
    "hdu_list = fits.open(irf_filename)\n",
    "hdu_list.info()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Effective area\n",
    "\n",
    "The effective area is given as a 2-dim array with energy and field of view offset axes."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 30,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'gammapy.irf.effective_area.EffectiveAreaTable2D'>\n",
      "<class 'gammapy.utils.nddata.NDDataArray'>\n"
     ]
    }
   ],
   "source": [
    "from gammapy.irf import EffectiveAreaTable2D\n",
    "aeff = EffectiveAreaTable2D.read(irf_filename, hdu='EFFECTIVE AREA')\n",
    "print(type(aeff))\n",
    "print(type(aeff.data))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 31,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "NDDataArray summary info\n",
      "energy         : size =    42, min =  0.014 TeV, max = 177.828 TeV\n",
      "offset         : size =     6, min =  0.500 deg, max =  5.500 deg\n",
      "Data           : size =   252, min =  0.000 m2, max = 5371581.000 m2\n",
      "\n"
     ]
    }
   ],
   "source": [
    "print(aeff.data)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 32,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<matplotlib.figure.Figure at 0x7f2683679358>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "aeff.peek()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 33,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/latex": [
       "$3.7835869 \\; \\mathrm{km^{2}}$"
      ],
      "text/plain": [
       "<Quantity 3.78358695 km2>"
      ]
     },
     "execution_count": 33,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# What is the on-axis effective area at 10 TeV?\n",
    "aeff.data.evaluate(energy='10 TeV', offset='0 deg').to('km2')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 34,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<gammapy.irf.effective_area.EffectiveAreaTable at 0x7f2683883cf8>"
      ]
     },
     "execution_count": 34,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# This is how you slice out an `EffectiveAreaTable` object\n",
    "# at a given field of view offset for analysis\n",
    "aeff.to_effective_area_table(offset='1 deg')"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Energy dispersion\n",
    "\n",
    "Let's have a look at the CTA energy dispersion with three axes: true energy, fov offset and migra = e_reco / e_true and has dP / dmigra as value.\n",
    "\n",
    "Similar to the event energy distribution above, we can see the mixed-telescope array reflected in the EDISP.\n",
    "At low energies the events are only detected and reconstructed by the LSTs.\n",
    "At ~100 GeV, the MSTs take over and EDISP is chaotic in the ~ 50 GeV to 100 GeV energy range.\n",
    "So it can be useful to have quick access to IRFs like with Gammapy (e.g. for spectral line searches in this case), even if for 95% of science analyses users later won't have to look at the IRFs and just trust that everything is working."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 35,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'gammapy.irf.energy_dispersion.EnergyDispersion2D'>\n",
      "<class 'gammapy.utils.nddata.NDDataArray'>\n"
     ]
    }
   ],
   "source": [
    "from gammapy.irf import EnergyDispersion2D\n",
    "edisp = EnergyDispersion2D.read(irf_filename, hdu='ENERGY DISPERSION')\n",
    "print(type(edisp))\n",
    "print(type(edisp.data))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 36,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "NDDataArray summary info\n",
      "e_true         : size =   500, min =  0.005 TeV, max = 495.450 TeV\n",
      "migra          : size =   300, min =  0.005, max =  2.995\n",
      "offset         : size =     6, min =  0.500 deg, max =  5.500 deg\n",
      "Data           : size = 900000, min =  0.000, max = 10595.855\n",
      "\n"
     ]
    }
   ],
   "source": [
    "print(edisp.data)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 37,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<matplotlib.figure.Figure at 0x7f2683883dd8>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "edisp.peek()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 38,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<gammapy.irf.energy_dispersion.EnergyDispersion at 0x7f26802ab630>"
      ]
     },
     "execution_count": 38,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# This is how for analysis you could slice out an `EnergyDispersion`\n",
    "# object at a given offset:\n",
    "edisp.to_energy_dispersion(offset='0 deg')"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Point spread function\n",
    "\n",
    "The point spread function (PSF) in this case is given as an analytical Gaussian model."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 39,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "Summary PSF info\n",
      "----------------\n",
      "Theta          : size =     6, min =  0.000 deg, max =  5.000 deg\n",
      "Energy hi      : size =    25, min =  0.020 TeV, max = 1258.925 TeV\n",
      "Energy lo      : size =    25, min =  0.013 TeV, max = 794.328 TeV\n",
      "Safe energy threshold lo:  0.100 TeV\n",
      "Safe energy threshold hi: 100.000 TeV\n",
      "68% containment radius at theta = 0.0 deg and E =  1.0 TeV: 0.05099999 deg\n",
      "68% containment radius at theta = 0.0 deg and E = 10.0 TeV: 0.03700000 deg\n",
      "95% containment radius at theta = 0.0 deg and E =  1.0 TeV: 0.08269457 deg\n",
      "95% containment radius at theta = 0.0 deg and E = 10.0 TeV: 0.05999410 deg\n",
      "\n"
     ]
    }
   ],
   "source": [
    "from gammapy.irf import EnergyDependentMultiGaussPSF\n",
    "psf = EnergyDependentMultiGaussPSF.read(irf_filename, hdu='POINT SPREAD FUNCTION')\n",
    "print(psf.info())"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 40,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<matplotlib.figure.Figure at 0x7f26812c5828>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "psf.peek()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 41,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<gammapy.irf.psf_table.EnergyDependentTablePSF at 0x7f26837a1d30>"
      ]
     },
     "execution_count": 41,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# This is how for analysis you could slice out the PSF\n",
    "# at a given field of view offset\n",
    "psf.to_energy_dependent_table_psf('1 deg')"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Background\n",
    "\n",
    "The hadronic background for CTA DC-1 is given as a template model with an absolute rate that depends on `energy`, `detx` and `dety`. The coordinates `detx` and `dety` are angles in the \"field of view\" coordinate frame.\n",
    "\n",
    "Note that really the background model for DC-1 and most CTA IRFs produced so far are radially symmetric, i.e. only depend on the FOV offset. The background model here was rotated to fill the FOV in a rotationally symmetric way, for no good reason."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 42,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Background3D\n",
      "NDDataArray summary info\n",
      "energy         : size =    21, min =  0.016 TeV, max = 158.489 TeV\n",
      "fov_lon        : size =    36, min = -5.833 deg, max =  5.833 deg\n",
      "fov_lat        : size =    36, min = -5.833 deg, max =  5.833 deg\n",
      "Data           : size = 27216, min =  0.000 1 / (MeV s sr), max =  0.421 1 / (MeV s sr)\n",
      "\n"
     ]
    }
   ],
   "source": [
    "from gammapy.irf import Background3D\n",
    "bkg = Background3D.read(irf_filename, hdu='BACKGROUND')\n",
    "print(bkg)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 43,
   "metadata": {},
   "outputs": [],
   "source": [
    "# TODO: implement a peek method for Background3D\n",
    "# bkg.peek()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 44,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/latex": [
       "$1.3316669 \\times 10^{-5} \\; \\mathrm{\\frac{1}{MeV\\,s\\,sr}}$"
      ],
      "text/plain": [
       "<Quantity 1.33166693e-05 1 / (MeV s sr)>"
      ]
     },
     "execution_count": 44,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "bkg.data.evaluate(energy='3 TeV', fov_lon='1 deg', fov_lat='0 deg')"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Index files and DataStore\n",
    "\n",
    "As we saw, you can access all of the CTA data using Astropy and Gammapy.\n",
    "\n",
    "But wouldn't it be nice if there were a better, simpler way?\n",
    "\n",
    "Imagine what life could be like if you had a butler that knows where all the files and HDUs are, and hands you the 1DC data on a silver platter, you just have to ask for it.\n",
    "\n",
    "![gammapy.data.DataStore - your butler for CTA data](images/gammapy_datastore_butler.png)\n",
    "\n",
    "Well, the butler exists. He's called `gammapy.data.DataStore` and he keeps track of the data using index files.\n",
    "\n",
    "### Index files\n",
    "\n",
    "The files with in the `index` folder with names `obs-index.fits.gz` and `hdu-index.fits.gz` are so called \"observation index files\" and \"HDU index files\".\n",
    "\n",
    "* The purpose of observation index files is to get a table of available observations, with the most relevant parameters commonly used for observation selection (e.g. pointing position or observation time). Their format is described in detail [here](http://gamma-astro-data-formats.readthedocs.io/en/latest/data_storage/obs_index/index.html).\n",
    "* The purpose of HDU index files is to locate all FITS header data units (HDUs) for a given observation. At the moment, for each observation, there are six relevant HDUs: EVENTS, GTI, AEFF, EDISP, PSF and BKG. The format is described in detail [here](http://gamma-astro-data-formats.readthedocs.io/en/latest/data_storage/hdu_index/index.html).\n",
    "\n",
    "For 1DC there is one set of index files per simulated dataset, as well as a set of index files listing all available data in the all directory.\n",
    "\n",
    "Side comment: if you have data, but no index files, you should write a Python script to make the index files. As an example, the one I used to make the index files for 1DC is [here](https://github.com/gammasky/cta-dc/blob/master/data/cta_1dc_make_data_index_files.py)."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 45,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\u001b[01;34mindex\u001b[00m\r\n",
      "├── \u001b[01;34magn\u001b[00m\r\n",
      "│   ├── \u001b[01;31mhdu-index.fits.gz\u001b[00m\r\n",
      "│   └── \u001b[01;31mobs-index.fits.gz\u001b[00m\r\n",
      "├── \u001b[01;34mall\u001b[00m\r\n",
      "│   ├── \u001b[01;31mhdu-index.fits.gz\u001b[00m\r\n",
      "│   └── \u001b[01;31mobs-index.fits.gz\u001b[00m\r\n",
      "├── \u001b[01;34megal\u001b[00m\r\n",
      "│   ├── \u001b[01;31mhdu-index.fits.gz\u001b[00m\r\n",
      "│   └── \u001b[01;31mobs-index.fits.gz\u001b[00m\r\n",
      "├── \u001b[01;34mgc\u001b[00m\r\n",
      "│   ├── \u001b[01;31mhdu-index.fits.gz\u001b[00m\r\n",
      "│   └── \u001b[01;31mobs-index.fits.gz\u001b[00m\r\n",
      "├── \u001b[01;34mgps\u001b[00m\r\n",
      "│   ├── \u001b[01;31mhdu-index.fits.gz\u001b[00m\r\n",
      "│   └── \u001b[01;31mobs-index.fits.gz\u001b[00m\r\n",
      "└── README.md\r\n",
      "\r\n",
      "5 directories, 11 files\r\n"
     ]
    }
   ],
   "source": [
    "!(cd $CTADATA && tree index)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Gammapy DataStore\n",
    "\n",
    "If you want to access data and IRFs from the CTA 1DC GPS dataset, just create a `DataStore` by pointing at a folder where the index files are located."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 46,
   "metadata": {
    "scrolled": true
   },
   "outputs": [],
   "source": [
    "from gammapy.data import DataStore\n",
    "data_store = DataStore.from_dir('$CTADATA/index/gps')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 47,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "Data store summary info:\n",
      "name: noname\n",
      "\n",
      "HDU index table:\n",
      "BASE_DIR: /home/hfm/adonath/Projects/cta-dc1-data/1dc/index/gps\n",
      "Rows: 19620\n",
      "OBS_ID: 110000 -- 113269\n",
      "HDU_TYPE: ['aeff', 'bkg', 'edisp', 'events', 'gti', 'psf']\n",
      "HDU_CLASS: ['aeff_2d', 'bkg_3d', 'edisp_2d', 'events', 'gti', 'psf_3gauss']\n",
      "\n",
      "Observation table:\n",
      "Number of observations: 3270\n"
     ]
    }
   ],
   "source": [
    "# Print out some basic information about the available data:\n",
    "data_store.info()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 48,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Number of observations:  3270\n",
      "['OBS_ID', 'RA_PNT', 'DEC_PNT', 'GLON_PNT', 'GLAT_PNT', 'ZEN_PNT', 'ALT_PNT', 'AZ_PNT', 'ONTIME', 'LIVETIME', 'DEADC', 'TSTART', 'TSTOP', 'DATE_OBS', 'TIME_OBS', 'DATE_END', 'TIME_END', 'N_TELS', 'OBJECT', 'CALDB', 'IRF', 'EVENTS_FILENAME', 'EVENT_COUNT']\n",
      "Total observation time (hours):  1635.0\n"
     ]
    }
   ],
   "source": [
    "# The observation index is loaded as a table\n",
    "print('Number of observations: ', len(data_store.obs_table))\n",
    "print(data_store.obs_table.colnames)\n",
    "print('Total observation time (hours): ', data_store.obs_table['ONTIME'].sum() / 3600)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 49,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "19620\n",
      "['OBS_ID', 'HDU_TYPE', 'HDU_CLASS', 'FILE_DIR', 'FILE_NAME', 'HDU_NAME']\n"
     ]
    }
   ],
   "source": [
    "# The HDU index is loaded as a table\n",
    "print(len(data_store.hdu_table))\n",
    "print(data_store.hdu_table.colnames)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 50,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Of course, you can look at the tables if you like\n",
    "# data_store.obs_table[:10].show_in_browser(jsviewer=True)\n",
    "# data_store.hdu_table[:10].show_in_browser(jsviewer=True)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Select observations\n",
    "\n",
    "With ``data_store.obs_table`` you have a table with the most common per-observation parameters that are used for observation selection. Using Python / Table methods it's easy to apply any selection you like, always with the goal of making a list or array of `OBS_ID`, which is then the input to analysis.\n",
    "\n",
    "For the current 1DC dataset it's pretty simple, because the only quantities useful for selection are:\n",
    "* pointing position\n",
    "* which irf (i.e. array  / zenith angle)\n",
    "\n",
    "With real data, there will be more parameters of interest, such as data quality, observation duration, zenith angle, time of observation, ...\n",
    "\n",
    "Let's look at one example: select observations that are at offset 1 to 2 deg from the Galactic center."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 51,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Number of selected observations:  57\n"
     ]
    }
   ],
   "source": [
    "from astropy.coordinates import SkyCoord\n",
    "table = data_store.obs_table\n",
    "pos_obs = SkyCoord(table['GLON_PNT'], table['GLAT_PNT'], frame='galactic', unit='deg')\n",
    "pos_target = SkyCoord(0, 0, frame='galactic', unit='deg')\n",
    "offset = pos_target.separation(pos_obs).deg\n",
    "mask = (1 < offset) & (offset < 2)\n",
    "table = table[mask]\n",
    "print('Number of selected observations: ', len(table))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 52,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<i>ObservationTable length=5</i>\n",
       "<table id=\"table139803225938464\" class=\"table-striped table-bordered table-condensed\">\n",
       "<thead><tr><th>OBS_ID</th><th>GLON_PNT</th><th>GLAT_PNT</th><th>IRF</th></tr></thead>\n",
       "<thead><tr><th>int64</th><th>float64</th><th>float64</th><th>bytes13</th></tr></thead>\n",
       "<tr><td>110380</td><td>359.9999912037958</td><td>-1.2999959379053694</td><td>South_z20_50h</td></tr>\n",
       "<tr><td>110381</td><td>359.9999912037958</td><td>-1.2999959379053694</td><td>South_z20_50h</td></tr>\n",
       "<tr><td>110382</td><td>359.9999912037958</td><td>-1.2999959379053694</td><td>South_z20_50h</td></tr>\n",
       "<tr><td>110383</td><td>359.9999912037958</td><td>-1.2999959379053694</td><td>South_z20_50h</td></tr>\n",
       "<tr><td>110384</td><td>359.9999912037958</td><td>-1.2999959379053694</td><td>South_z20_50h</td></tr>\n",
       "</table>"
      ],
      "text/plain": [
       "<ObservationTable length=5>\n",
       "OBS_ID      GLON_PNT           GLAT_PNT           IRF     \n",
       "int64       float64            float64          bytes13   \n",
       "------ ----------------- ------------------- -------------\n",
       "110380 359.9999912037958 -1.2999959379053694 South_z20_50h\n",
       "110381 359.9999912037958 -1.2999959379053694 South_z20_50h\n",
       "110382 359.9999912037958 -1.2999959379053694 South_z20_50h\n",
       "110383 359.9999912037958 -1.2999959379053694 South_z20_50h\n",
       "110384 359.9999912037958 -1.2999959379053694 South_z20_50h"
      ]
     },
     "execution_count": 52,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Look at the first few\n",
    "table[['OBS_ID', 'GLON_PNT', 'GLAT_PNT', 'IRF']][:5]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 53,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "{'South_z20_50h'}"
      ]
     },
     "execution_count": 53,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Check which IRFs were used ... it's all south and 20 deg zenith angle\n",
    "set(table['IRF'])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 54,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Text(0,0.5,'Galactic latitude (deg)')"
      ]
     },
     "execution_count": 54,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<matplotlib.figure.Figure at 0x7f268121cda0>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Check the pointing positions\n",
    "# The grid pointing positions at GLAT = +- 1.2 deg are visible\n",
    "from astropy.coordinates import Angle\n",
    "plt.scatter(Angle(table['GLON_PNT'], unit='deg').wrap_at('180 deg'), table['GLAT_PNT'])\n",
    "plt.xlabel('Galactic longitude (deg)')\n",
    "plt.ylabel('Galactic latitude (deg)')"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Load data\n",
    "\n",
    "Once you have selected the observations of interest, use the `DataStore` to load the data and IRF for those observations. Let's say we're interested in `OBS_ID=110000`."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 55,
   "metadata": {},
   "outputs": [],
   "source": [
    "obs = data_store.obs(obs_id=110000)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 56,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Info for OBS_ID = 110000\n",
      "- Start time: 59215.50\n",
      "- Pointing pos: RA 186.16 deg / Dec -64.02 deg\n",
      "- Observation duration: 1800.0 s\n",
      "- Dead-time fraction: 2.000 %\n",
      "\n"
     ]
    }
   ],
   "source": [
    "print(obs)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 57,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<gammapy.data.event_list.EventList at 0x7f26799e7160>"
      ]
     },
     "execution_count": 57,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "obs.events"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 58,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<i>Table length=5</i>\n",
       "<table id=\"table139803225936112\" class=\"table-striped table-bordered table-condensed\">\n",
       "<thead><tr><th>EVENT_ID</th><th>TIME</th><th>RA</th><th>DEC</th><th>ENERGY</th><th>DETX</th><th>DETY</th><th>MC_ID</th></tr></thead>\n",
       "<thead><tr><th></th><th>s</th><th>deg</th><th>deg</th><th>TeV</th><th>deg</th><th>deg</th><th></th></tr></thead>\n",
       "<thead><tr><th>uint32</th><th>float64</th><th>float32</th><th>float32</th><th>float32</th><th>float32</th><th>float32</th><th>int32</th></tr></thead>\n",
       "<tr><td>1</td><td>662774403.2549675</td><td>-173.28687</td><td>-62.40993</td><td>0.04861494</td><td>1.6079456</td><td>0.25801584</td><td>2</td></tr>\n",
       "<tr><td>2</td><td>662774459.1837754</td><td>-172.61957</td><td>-63.034626</td><td>0.061103538</td><td>0.97905844</td><td>0.5551662</td><td>2</td></tr>\n",
       "<tr><td>3</td><td>662774479.3091722</td><td>-170.5929</td><td>-63.47148</td><td>0.046141993</td><td>0.510549</td><td>1.4514378</td><td>2</td></tr>\n",
       "<tr><td>4</td><td>662774490.7238462</td><td>-175.63673</td><td>-63.640938</td><td>0.049356733</td><td>0.36687967</td><td>-0.795908</td><td>2</td></tr>\n",
       "<tr><td>5</td><td>662774506.8648058</td><td>-172.12354</td><td>-63.40126</td><td>0.050540056</td><td>0.6073638</td><td>0.77019966</td><td>2</td></tr>\n",
       "</table>"
      ],
      "text/plain": [
       "<Table length=5>\n",
       "EVENT_ID        TIME           RA        DEC     ...    DETX       DETY    MC_ID\n",
       "                 s            deg        deg     ...    deg        deg          \n",
       " uint32       float64       float32    float32   ...  float32    float32   int32\n",
       "-------- ----------------- ---------- ---------- ... ---------- ---------- -----\n",
       "       1 662774403.2549675 -173.28687  -62.40993 ...  1.6079456 0.25801584     2\n",
       "       2 662774459.1837754 -172.61957 -63.034626 ... 0.97905844  0.5551662     2\n",
       "       3 662774479.3091722  -170.5929  -63.47148 ...   0.510549  1.4514378     2\n",
       "       4 662774490.7238462 -175.63673 -63.640938 ... 0.36687967  -0.795908     2\n",
       "       5 662774506.8648058 -172.12354  -63.40126 ...  0.6073638 0.77019966     2"
      ]
     },
     "execution_count": 58,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "obs.events.table[:5]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 59,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<gammapy.irf.effective_area.EffectiveAreaTable2D at 0x7f26799861d0>"
      ]
     },
     "execution_count": 59,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "obs.aeff"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 60,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<gammapy.irf.energy_dispersion.EnergyDispersion2D at 0x7f267991e5c0>"
      ]
     },
     "execution_count": 60,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "obs.edisp"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 61,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<gammapy.irf.psf_gauss.EnergyDependentMultiGaussPSF at 0x7f26799836a0>"
      ]
     },
     "execution_count": 61,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "obs.psf"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Here's an example how to loop over many observations and analyse them: [cta_1dc_make_allsky_images.py](https://github.com/gammasky/cta-dc/blob/master/data/cta_1dc_make_allsky_images.py)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Model XML files\n",
    "\n",
    "The 1DC sky model is distributed as a set of XML files, which in turn link to a ton of other FITS and text files."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 62,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "model_agn.xml\r\n",
      "model_Arp220.xml\r\n",
      "model_bkg.xml\r\n",
      "model_dm_dSphs.xml\r\n",
      "model_dm_gc.xml\r\n",
      "model_fermi_bubbles.xml\r\n",
      "model_galactic_binaries.xml\r\n",
      "model_galactic_bright.xml\r\n",
      "model_galactic_composite.xml\r\n",
      "model_galactic_extended.xml\r\n",
      "model_galactic_pulsars.xml\r\n",
      "model_galactic_pwn.xml\r\n",
      "model_galactic_snr.xml\r\n",
      "model_iem.xml\r\n",
      "models_agn.xml\r\n",
      "models_egal.xml\r\n",
      "models_gc.xml\r\n",
      "models_gps.xml\r\n"
     ]
    }
   ],
   "source": [
    "!ls $CTADATA/models/*.xml | xargs -n 1 basename"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 63,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "      <parameter name=\"Index\" value=\"4.58\" error=\"0\" scale=\"-1\" min=\"0\" max=\"10\" free=\"1\" />\r\n",
      "      <parameter name=\"Scale\" value=\"500000\" scale=\"1\" min=\"0\" max=\"10000000\" free=\"0\" />\r\n",
      "    </spectrum>\r\n",
      "    <spatialModel type=\"SkyDirFunction\">\r\n",
      "      <parameter name=\"RA\" value=\"350.69792\" scale=\"1\" min=\"-360\" max=\"360\" free=\"0\" />\r\n",
      "      <parameter name=\"DEC\" value=\"-49.27058\" scale=\"1\" min=\"-90\" max=\"90\" free=\"0\" />\r\n",
      "    </spatialModel>\r\n",
      "  </source>\r\n",
      "  <source name=\"Arp220\" type=\"PointSource\" tscalc=\"1\">\r\n",
      "    <spectrum type=\"PowerLaw\">\r\n",
      "      <parameter name=\"Prefactor\" value=\"6\" error=\"0\" scale=\"1e-20\" min=\"0\" free=\"1\" />\r\n",
      "      <parameter name=\"Index\" value=\"2.2\" error=\"-0\" scale=\"-1\" min=\"-4.54545\" max=\"4.54545\" free=\"1\" />\r\n",
      "      <parameter name=\"Scale\" value=\"1\" scale=\"1000000\" free=\"0\" />\r\n",
      "    </spectrum>\r\n",
      "    <spatialModel type=\"SkyDirFunction\">\r\n",
      "      <parameter name=\"RA\" value=\"233.738\" scale=\"1\" free=\"0\" />\r\n",
      "      <parameter name=\"DEC\" value=\"23.503\" scale=\"1\" free=\"0\" />\r\n",
      "    </spatialModel>\r\n",
      "  </source>\r\n",
      "</source_library>\r\n"
     ]
    }
   ],
   "source": [
    "# This is what the XML file looks like\n",
    "!tail -n 20 $CTADATA/models/models_gps.xml"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "At the moment, you cannot read and write these sky model XML files with Gammapy.\n",
    "\n",
    "There are multiple reasons why this XML serialisation format isn't implemented in Gammapy yet (all variants of \"it sucks\"):\n",
    "\n",
    "* XML is tedious to read and write for humans.\n",
    "* The format is too strict in places: there are many use cases where \"min\", \"max\", \"free\" and \"error\" aren't needed, so it should be possible to omit them (see e.g. dummy values above)\n",
    "* The parameter \"scale\" is an implementation detail that very few optimisers need. There's no reason to bother all gamma-ray astronomers with separating value and scale in model input and result files.\n",
    "* The \"unit\" is missing. Pretty important piece of information, no?\n",
    "  All people working on IACTs use \"TeV\", why should CTA be forced to use \"MeV\"?\n",
    "* Ad-hoc extensions that keep being added and many models can't be put in one file (see extra ASCII and FITS files with tables or other info, e.g. pulsar models added for CTA 1DC). Admittedly complex model serialisation is an intrinsically hard problem, there is not simple and flexible solution.\n",
    "\n",
    "Also, to be honest, I also want to say / admit:\n",
    "\n",
    "* A model serialisation format is useful, even if it will never cover all use cases (e.g. energy-dependent morphology or an AGN with a variable spectrum, or complex FOV background models).\n",
    "* The Gammapy model package isn't well-implemented or well-developed yet.\n",
    "* So far users were happy to write a few lines of Python to define a model instead of XML.\n",
    "* Clearly with CTA 1DC now using the XML format there's an important reason to support it, there is the legacy of Fermi-LAT using it and ctools using / extending it for CTA.\n",
    "\n",
    "So what now?\n",
    "\n",
    "* In Gammapy, we have started to implement a modeling package in `gammapy.utils.modeling`, with the goal of supporting this XML format as one of the serialisation formats. It's not very far along, will be a main focus for us, help is welcome.\n",
    "* In addition we would like to support a second more human-friendly model format that looks something like [this](https://github.com/gammapy/gamma-cat/blob/b651de8d1d793e924764ffb13c8ec189bce9ea7d/input/data/2006/2006A%2526A...457..899A/tev-000025.yaml#L11)\n",
    "* For now, you could use Gammalib to read the XML files, or you could read them directly with Python. The Python standard library contains [ElementTree](https://docs.python.org/3/library/xml.etree.elementtree.html) and there's [xmltodict](https://github.com/martinblech/xmltodict) which simply hands you back the XML file contents as a Python dictionary (containing a very nested hierarchical structure of Python dict and list objects and strings and numbers.\n",
    "\n",
    "As an example, here's how you can read an XML sky model and access the spectral parameters of one source (the last, \"Arp200\" visible above in the XML printout) and create a [gammapy.spectrum.models.PowerLaw](..\/api/gammapy.spectrum.models.PowerLaw.rst) object."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 64,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "[OrderedDict([('@name', 'Prefactor'),\n",
       "              ('@value', '6'),\n",
       "              ('@error', '0'),\n",
       "              ('@scale', '1e-20'),\n",
       "              ('@min', '0'),\n",
       "              ('@free', '1')]),\n",
       " OrderedDict([('@name', 'Index'),\n",
       "              ('@value', '2.2'),\n",
       "              ('@error', '-0'),\n",
       "              ('@scale', '-1'),\n",
       "              ('@min', '-4.54545'),\n",
       "              ('@max', '4.54545'),\n",
       "              ('@free', '1')]),\n",
       " OrderedDict([('@name', 'Scale'),\n",
       "              ('@value', '1'),\n",
       "              ('@scale', '1000000'),\n",
       "              ('@free', '0')])]"
      ]
     },
     "execution_count": 64,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Read XML file and access spectrum parameters\n",
    "from gammapy.extern import xmltodict\n",
    "filename = os.path.join(os.environ['CTADATA'], 'models/models_gps.xml')\n",
    "data = xmltodict.parse(open(filename).read())\n",
    "data = data['source_library']['source'][-1]\n",
    "data = data['spectrum']['parameter']\n",
    "data"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 65,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "PowerLaw\n",
      "\n",
      "Parameters: \n",
      "\n",
      "\t   name     value    error       unit         min    max\n",
      "\t--------- ---------- ----- --------------- --------- ---\n",
      "\t    index -2.200e+00   nan                       nan nan\n",
      "\tamplitude  6.000e-20   nan 1 / (cm2 MeV s)       nan nan\n",
      "\treference  1.000e+06   nan             MeV 0.000e+00 nan\n"
     ]
    }
   ],
   "source": [
    "# Create a spectral model the the right units\n",
    "from astropy import units as u\n",
    "from gammapy.spectrum.models import PowerLaw\n",
    "par_to_val = lambda par: float(par['@value']) * float(par['@scale'])\n",
    "spec = PowerLaw(\n",
    "    amplitude=par_to_val(data[0]) * u.Unit('cm-2 s-1 MeV-1'),\n",
    "    index=par_to_val(data[1]),\n",
    "    reference=par_to_val(data[2]) * u.Unit('MeV'),\n",
    ")\n",
    "print(spec)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Exercises\n",
    "\n",
    "* Easy: Go over this notebook again, and change the data / code a little bit:\n",
    "    * Pick another run (any run you like)\n",
    "    * Plot the energy-offset histogram of the events separately for gammas and background\n",
    "\n",
    "* Medium difficulty: Find all runs within 1 deg of the Crab nebula.\n",
    "    * Load the \"all\" index file via the `DataStore`, then access the ``.obs_table``, then get an array-valued ``SkyCoord`` with all the observation pointing positions.\n",
    "    * You can get the Crab nebula position with `astropy.coordinates.SkyCoord` via ``SkyCoord.from_name('crab')`` \n",
    "    * Note that to compute the angular separation between two ``SkyCoord`` objects can be computed via ``separation = coord1.separation(coord2)``.\n",
    "\n",
    "* Hard: Find the PeVatrons in the 1DC data, i.e. the ~ 10 sources that are brightest at high energies (e.g. above 10 TeV).\n",
    "    * This is difficult, because it's note clear how to best do this, and also because it's time-consuming to crunch through all relevant data for any given method.\n",
    "    * One idea could be to go brute-force through **all** events, select the ones above 10 TeV and stack them all into one table. Then make an all-sky image and run a peak finder, or use an event cluster-finding method e.g. from scikit-learn.\n",
    "    * Another idea could be to first make a list of targets of interest, either from the CTA 1DC sky model or from gamma-cat, compute the model integral flux above 10 TeV and pick candidates that way, then run analyses."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 66,
   "metadata": {},
   "outputs": [],
   "source": [
    "# start typing here ..."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "collapsed": true
   },
   "source": [
    "## What next?\n",
    "\n",
    "* This notebook gave you an overview of the 1DC files and showed you have to access and work with them using Gammapy.\n",
    "* To see how to do analysis, i.e. make a sky image and spectrum, see [cta_data_analysis.ipynb](cta_data_analysis.ipynb) next."
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.6.0"
  },
  "nbsphinx": {
   "orphan": true
  }
 },
 "nbformat": 4,
 "nbformat_minor": 1
}
